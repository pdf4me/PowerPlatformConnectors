{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Blackbaud Altru Constituent",
    "description": "Altru is a comprehensive enterprise-grade ticketing software solution built specifically for nonprofits and the entire social good community. Use the Constituents connector to manage constituent biographical details, contact information, and relationships.",
    "contact": {
      "name": "Blackbaud Support",
      "url": "https://www.blackbaud.com/support",
      "email": "skyapi@blackbaud.com"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.blackbaud.com/products/blackbaud-altru"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.blackbaud.com/privacy-shield"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Sales and CRM;Productivity"
    }
  ],
  "host": "api.sky.blackbaud.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "skyApiOAuth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://oauth2.sky.blackbaud.com/authorization",
      "tokenUrl": "https://oauth2.sky.blackbaud.com/token",
      "scopes": {}
    }
  },
  "security": [
    {
      "skyApiOAuth": []
    }
  ],
  "paths": {
    "/alt-adnmg/codetables/{code_table_name}/entries": {
      "get": {
        "operationId": "ListCodeTableEntries",
        "summary": "List table entries",
        "description": "Returns table entries for the specified code table.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code_table_name",
            "in": "path",
            "description": "The code table name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Code table name",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Adnmg.CodeTableEntryCollection"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to view the table entries."
          },
          "404": {
            "description": "Returned when the specified code table was not found."
          }
        }
      }
    },
    "/alt-adnmg/simplelists/{simple_list_id}": {
      "get": {
        "operationId": "SimpleListLoad",
        "summary": "List simple list results",
        "description": "Returns result rows from the specified simple list.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "simple_list_id",
            "in": "path",
            "description": "The simple list identifier.",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "Simple list ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "paramKey1",
            "in": "query",
            "description": "For parameterized simple lists, this represents the first parameter key.",
            "type": "string",
            "x-ms-summary": "Parameter key 1",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "paramValue1",
            "in": "query",
            "description": "For parameterized simple lists, this represents the first parameter value.",
            "type": "string",
            "x-ms-summary": "Parameter value 1",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "paramSourceType1",
            "in": "query",
            "description": "For parameterized simple lists, this represents the source type for translating paramValue1.",
            "type": "string",
            "x-ms-summary": "Parameter translation source 1",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "paramSource1",
            "in": "query",
            "description": "For parameterized simple lists, this represents the source for translating paramValue1.",
            "type": "string",
            "x-ms-summary": "Parameter translation source 1",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "paramKey2",
            "in": "query",
            "description": "For parameterized simple lists, this represents the second parameter key.",
            "type": "string",
            "x-ms-summary": "Parameter key 2",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "paramValue2",
            "in": "query",
            "description": "For parameterized simple lists, this represents the second parameter value.",
            "type": "string",
            "x-ms-summary": "Parameter value 2",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "paramSourceType2",
            "in": "query",
            "description": "For parameterized simple lists, this represents the source type for translating paramValue2.",
            "type": "string",
            "x-ms-summary": "Parameter translation source 2",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "paramSource2",
            "in": "query",
            "description": "For parameterized simple lists, this represents the source for translating paramValue2.",
            "type": "string",
            "x-ms-summary": "Parameter translation source 2",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Adnmg.SimpleListResult"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to view the simple list results."
          },
          "404": {
            "description": "Returned when the specified simple list was not found."
          }
        }
      }
    },

    "/alt-conmg/addresses": {
      "post": {
        "operationId": "CreateConstituentAddress",
        "summary": "Create a constituent address",
        "description": "Creates a new constituent address.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.NewConstituentAddress"
            },
            "description": "An object that represents the constituent address to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates a constituent address. The response body contains the ID of the new constituent address.",
            "schema": {
              "$ref": "#/definitions/Conmg.CreatedConstituentAddress"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the constituent address."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/addresses/{constituent_address_id}": {
      "delete": {
        "operationId": "DeleteConstituentAddress",
        "summary": "Delete a constituent address",
        "description": "Deletes a constituent address.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_address_id",
            "in": "path",
            "description": "The system record ID of the constituent address to delete.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent address ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully deletes the constituent address."
          },
          "400": {
            "description": "Returned when the specified address ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to delete the constituent address."
          }
        }
      },
      "patch": {
        "operationId": "EditConstituentAddress",
        "summary": "Update a constituent address",
        "description": "Updates a constituent address.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_address_id",
            "in": "path",
            "description": "The system record ID of the constituent address to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent address ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.UpdateConstituentAddress"
            },
            "description": "An object that represent properties of the constituent address to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the constituent address."
          },
          "400": {
            "description": "Returned when the specified constituent address ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the constituent address."
          },
          "404": {
            "description": "Returned when the specified constituent address is not found."
          }
        }
      }
    },
    "/alt-conmg/alternatelookupids": {
      "post": {
        "operationId": "CreateConstituentAlternateLookupID",
        "summary": "Create a constituent alternate lookup ID",
        "description": "Creates a new constituent alternate lookup ID.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.NewConstituentAlternateLookupID"
            },
            "description": "An object that represents the alternate lookup ID to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates an alternate lookup ID. The response body contains the ID of the new alternate lookup ID.",
            "schema": {
              "$ref": "#/definitions/Conmg.CreatedConstituentAlternateLookupID"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the alternate lookup ID."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/alternatelookupids/{alternate_lookup_id}": {
      "delete": {
        "operationId": "DeleteConstituentAlternateLookupID",
        "summary": "Delete a constituent alternate lookup ID",
        "description": "Deletes a constituent alternate lookup ID.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "alternate_lookup_id",
            "in": "path",
            "description": "The system record ID of the constituent alternate lookup ID to delete.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Alternate lookup ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully deletes the constituent alternate lookup ID."
          },
          "400": {
            "description": "Returned when the specified constituent alternate lookup ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to delete the constituent alternate lookup ID."
          }
        }
      },
      "patch": {
        "operationId": "EditConstituentAlternateLookupID",
        "summary": "Update a constituent alternate lookup ID",
        "description": "Updates a constituent alternate lookup ID.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "alternate_lookup_id",
            "in": "path",
            "description": "The system record ID of the constituent alternate lookup ID to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Alternate lookup ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.UpdateConstituentAlternateLookupID"
            },
            "description": "An object that represent properties of the constituent alternate lookup ID to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the constituent alternate lookup ID."
          },
          "400": {
            "description": "Returned when the specified constituent alternate lookup ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the constituent alternate lookup ID."
          },
          "404": {
            "description": "Returned when the specified constituent alternate lookup ID is not found."
          }
        }
      }
    },
    "/alt-conmg/constituentappealresponses": {
      "post": {
        "operationId": "CreateConstituentAppealResponse",
        "summary": "Create a constituent appeal response",
        "description": "Creates a new constituent appeal response.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.NewConstituentAppealResponse"
            },
            "description": "An object that represents the constituent appeal response to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates an alternate lookup ID. The response body contains the ID of the new constituent appeal response.",
            "schema": {
              "$ref": "#/definitions/Conmg.CreatedConstituentAppealResponse"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the constituent appeal response."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/constituentappeals": {
      "post": {
        "operationId": "CreateConstituentAppeal",
        "summary": "Create a constituent appeal",
        "description": "Creates a new constituent appeal.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.NewConstituentAppeal"
            },
            "description": "An object that represents the constituent appeal to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates a constituent appeal. The response body contains the ID of the new constituent appeal.",
            "schema": {
              "$ref": "#/definitions/Conmg.CreatedConstituentAppeal"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the constituent appeal."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/constituentappeals/{constituent_appeal_id}": {
      "delete": {
        "operationId": "DeleteConstituentAppeal",
        "summary": "Delete a constituent appeal",
        "description": "Deletes a constituent appeal.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_appeal_id",
            "in": "path",
            "description": "The system record ID of the constituent appeal to delete.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent appeal ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully deletes the constituent appeal."
          },
          "400": {
            "description": "Returned when the specified constituent appeal ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to delete the constituent appeal."
          }
        }
      },
      "patch": {
        "operationId": "EditConstituentAppeal",
        "summary": "Update a constituent appeal",
        "description": "Updates a constituent appeal.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_appeal_id",
            "in": "path",
            "description": "The system record ID of the constituent appeal to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent appeal ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.UpdateConstituentAppeal"
            },
            "description": "An object that represent properties of the constituent appeal to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the constituent appeal."
          },
          "400": {
            "description": "Returned when the specified constituent appeal ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the constituent appeal."
          },
          "404": {
            "description": "Returned when the specified constituent appeal is not found."
          }
        }
      }
    },
    "/alt-conmg/constituentappeals/{constituent_id}/appeals": {
      "get": {
        "operationId": "ListConstituentAppeals",
        "summary": "List constituent appeals",
        "description": "Lists the appeals sent to a constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Conmg.ConstituentAppealCollection"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL or the specified request parameter is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the constituent appeals."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/constituentattributes/{constituent_attribute_id}": {
      "delete": {
        "operationId": "DeleteConstituentAttribute",
        "summary": "Delete a constituent attribute",
        "description": "Deletes a constituent attribute.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_attribute_id",
            "in": "path",
            "description": "The system record ID of the constituent attribute to delete.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent attribute ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully deletes the constituent attribute."
          },
          "400": {
            "description": "Returned when the specified constituent attribute ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to delete the constituent attribute."
          }
        }
      }
    },
    "/alt-conmg/constituentnotes": {
      "post": {
        "operationId": "CreateConstituentNote",
        "summary": "Create a constituent note",
        "description": "Creates a new constituent note.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.NewConstituentNote"
            },
            "description": "An object that represents the constituent note to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates a constituent note. The response body contains the ID of the new constituent note.",
            "schema": {
              "$ref": "#/definitions/Conmg.CreatedConstituentNote"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the constituent note."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/constituentnotes/{constituent_note_id}": {
      "delete": {
        "operationId": "DeleteConstituentNote",
        "summary": "Delete a constituent note",
        "description": "Deletes a constituent note.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_note_id",
            "in": "path",
            "description": "The system record ID of the constituent note to delete.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent note ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully deletes the constituent note."
          },
          "400": {
            "description": "Returned when the specified constituent note ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to delete the constituent note."
          }
        }
      },
      "patch": {
        "operationId": "EditConstituentNote",
        "summary": "Update a constituent note",
        "description": "Updates a constituent note.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_note_id",
            "in": "path",
            "description": "The system record ID of the constituent note to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent note ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.UpdateConstituentNote"
            },
            "description": "An object that represent properties of the constituent note to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the constituent note."
          },
          "400": {
            "description": "Returned when the specified constituent note ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the constituent note."
          },
          "404": {
            "description": "Returned when the specified constituent note is not found."
          }
        }
      }
    },
    "/alt-conmg/constituents/search": {
      "get": {
        "operationId": "SearchConstituent",
        "summary": "Search for a constituent",
        "description": "Searches for constituent records using the given filter criteria.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "key_name",
            "in": "query",
            "description": "The constituent key name (last name for individuals, organization name for organizations).",
            "type": "string",
            "x-ms-summary": "Key name"
          },
          {
            "name": "first_name",
            "in": "query",
            "description": "The constituent first name.",
            "type": "string",
            "x-ms-summary": "First name"
          },
          {
            "name": "lookup_id",
            "in": "query",
            "description": "The constituent lookup ID.",
            "type": "string",
            "x-ms-summary": "Lookup ID"
          },
          {
            "name": "email_address",
            "in": "query",
            "description": "The constituent email address.",
            "type": "string",
            "x-ms-summary": "Email address"
          },
          {
            "name": "phone_number",
            "in": "query",
            "description": "The constituent phone number.",
            "type": "string",
            "x-ms-summary": "Phone number"
          },
          {
            "name": "country",
            "in": "query",
            "description": "A filter for the constituent address country.",
            "type": "string",
            "x-ms-summary": "Country",
            "x-ms-dynamic-values": {
              "operationId": "SimpleListLoad",
              "value-collection": "rows",
              "value-path": "label",
              "value-title": "label",
              "parameters": {
                "simple_list_id": "c9649672-353d-42e8-8c25-4d34bbabfbba"
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "SimpleListLoad",
              "itemsPath": "rows",
              "itemValuePath": "label",
              "itemTitlePath": "label",
              "parameters": {
                "simple_list_id": {
                  "value": "c9649672-353d-42e8-8c25-4d34bbabfbba"
                }
              }
            }
          },
          {
            "name": "address_block",
            "in": "query",
            "description": "A filter for the constituent address block.",
            "type": "string",
            "x-ms-summary": "Address"
          },
          {
            "name": "city",
            "in": "query",
            "description": "A filter for the constituent address city.",
            "type": "string",
            "x-ms-summary": "City"
          },
          {
            "name": "state",
            "in": "query",
            "description": "A filter for the constituent address state.",
            "type": "string",
            "x-ms-summary": "State",
            "x-ms-dynamic-values": {
              "operationId": "SimpleListLoad",
              "value-collection": "rows",
              "value-path": "label",
              "value-title": "description",
              "parameters": {
                "simple_list_id": "7fa91401-596c-4f7c-936d-6e41683121d7"
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "SimpleListLoad",
              "itemsPath": "rows",
              "itemValuePath": "label",
              "itemTitlePath": "description",
              "parameters": {
                "simple_list_id": {
                  "value": "7fa91401-596c-4f7c-936d-6e41683121d7"
                }
              }
            }
          },
          {
            "name": "post_code",
            "in": "query",
            "description": "A filter for the constituent address postal code.",
            "type": "string",
            "x-ms-summary": "Postal code"
          },
          {
            "name": "classof",
            "in": "query",
            "description": "A filter for the primary class year of the constituent.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Class of"
          },
          {
            "name": "exact_match_only",
            "in": "query",
            "description": "Match all criteria exactly?",
            "type": "boolean",
            "x-ms-summary": "Match exactly?"
          },
          {
            "name": "middle_name",
            "in": "query",
            "description": "The constituent middle name.",
            "type": "string",
            "x-ms-summary": "Middle name",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "constituency",
            "in": "query",
            "description": "A filter for the constituency of the constituent.",
            "type": "string",
            "x-ms-summary": "Constituency",
            "x-ms-visibility": "advanced",
            "x-ms-dynamic-values": {
              "operationId": "SimpleListLoad",
              "value-collection": "rows",
              "value-path": "label",
              "value-title": "label",
              "parameters": {
                "simple_list_id": "7821c1ab-3001-485b-aec7-f55749f959e6"
              }
            },
            "x-ms-dynamic-list": {
              "operationId": "SimpleListLoad",
              "itemsPath": "rows",
              "itemValuePath": "label",
              "itemTitlePath": "label",
              "parameters": {
                "simple_list_id": {
                  "value": "7821c1ab-3001-485b-aec7-f55749f959e6"
                }
              }
            }
          },
          {
            "name": "sourcecode",
            "in": "query",
            "description": "A filter for the constituent appeal source code.",
            "type": "string",
            "x-ms-summary": "Source code",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "include_individuals",
            "in": "query",
            "description": "Include individual constituents?",
            "type": "boolean",
            "x-ms-summary": "Include individuals?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "include_organizations",
            "in": "query",
            "description": "Include organization constituents?",
            "type": "boolean",
            "x-ms-summary": "Include organizations?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "include_groups",
            "in": "query",
            "description": "Include groups when searching?",
            "type": "boolean",
            "x-ms-summary": "Include groups?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "exclude_households",
            "in": "query",
            "description": "Exclude households when searching?",
            "type": "boolean",
            "x-ms-summary": "Exclude households?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "check_nickname",
            "in": "query",
            "description": "Check nickname when searching?",
            "type": "boolean",
            "x-ms-summary": "Check nickname?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "check_aliases",
            "in": "query",
            "description": "Check aliases when searching?",
            "type": "boolean",
            "x-ms-summary": "Check aliases?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "check_alternate_lookup_ids",
            "in": "query",
            "description": "Check alternate lookup IDs when searching?",
            "type": "boolean",
            "x-ms-summary": "Check alt lookup IDs?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "only_primary_address",
            "in": "query",
            "description": "Only search primary addresses?",
            "type": "boolean",
            "x-ms-summary": "Only primary?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "include_deceased",
            "in": "query",
            "description": "Include deceased constituents?",
            "type": "boolean",
            "x-ms-summary": "Include deceased?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "include_inactive",
            "in": "query",
            "description": "Include inactive constituents?",
            "type": "boolean",
            "x-ms-summary": "Include inactive?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "fuzzy_search_on_name",
            "in": "query",
            "description": "Use fuzzy search on name?",
            "type": "boolean",
            "x-ms-summary": "Use fuzzy search?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Represents the number of records to return.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Limit",
            "x-ms-visibility": "advanced"
          }          
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Conmg.ConstituentSearchResultCollection"
            }
          }
        }
      }
    },
    "/alt-conmg/constituents/{constituent_id}": {
      "delete": {
        "operationId": "DeleteConstituent",
        "summary": "Delete a constituent",
        "description": "Deletes a constituent.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent to delete.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully deletes the constituent."
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to delete the constituent."
          }
        }
      }
    },
    "/alt-conmg/constituents/{constituent_id}/addresses": {
      "get": {
        "operationId": "ListConstituentAddresses",
        "summary": "List constituent addresses",
        "description": "Lists the addresses for a constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "include_former",
            "in": "query",
            "description": "Include former addresses?",
            "type": "boolean",
            "x-ms-summary": "Include former?"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Conmg.AddressCollection"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL or the specified request parameter is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the addresses."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/constituents/{constituent_id}/alternatelookupids": {
      "get": {
        "operationId": "ListConstituentAlternateLookupIDs",
        "summary": "List constituent alternate lookup IDs",
        "description": "Lists the alternate lookup IDs for a constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Conmg.AlternateLookupIDCollection"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL or the specified request parameter is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the alternate lookup IDs."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/constituents/{constituent_id}/constituentattributelist": {
      "get": {
        "operationId": "ListConstituentAttributes",
        "summary": "List constituent attributes",
        "description": "Lists the attributes for a constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Conmg.AttributeCollection"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL or the specified request parameter is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the attributes."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/constituents/{constituent_id}/contactview": {
      "get": {
        "operationId": "GetConstituentPrimaryContactInfo",
        "summary": "Get constituent primary contact information",
        "description": "Returns the primary contact information for a constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Conmg.ConstituentPrimaryContactInfo"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the constituent."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/constituents/{constituent_id}/educationalhistories": {
      "get": {
        "operationId": "ListConstituentEducations",
        "summary": "List constituent educations",
        "description": "Lists the educations for a constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Conmg.EducationCollection"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL or the specified request parameter is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the educations."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/constituents/{constituent_id}/emailaddresses": {
      "get": {
        "operationId": "ListConstituentEmailAddresses",
        "summary": "List constituent email addresses",
        "description": "Lists the email addresses for a constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Conmg.EmailAddressCollection"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL or the specified request parameter is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the email addresses."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/constituents/{constituent_id}/phones": {
      "get": {
        "operationId": "ListConstituentPhones",
        "summary": "List constituent phones",
        "description": "Lists the phones for a constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Conmg.PhoneCollection"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL or the specified request parameter is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the phones."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/constituents/{constituent_id}/profilepicture": {
      "get": {
        "operationId": "GetConstituentProfilePicture",
        "summary": "Get a constituent profile picture",
        "description": "Returns the profile picture for a constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Conmg.ConstituentProfilePicture"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the constituent."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/constituents/{constituent_id}/relationshipjobsinfo": {
      "get": {
        "operationId": "ListConstituentEmploymentHistory",
        "summary": "List constituent employment history",
        "description": "Lists the employment history for a constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "include_inactive",
            "in": "query",
            "description": "Include inactive records?",
            "type": "boolean",
            "x-ms-summary": "Include inactive?",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Conmg.EmploymentHistoryCollection"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL or the specified request parameter is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the employment history."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/constituents/{constituent_id}/solicitcodes": {
      "get": {
        "operationId": "ListConstituentSolicitCodes",
        "summary": "List constituent solicit codes",
        "description": "Lists the solicit codes for a constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "show_expired",
            "in": "query",
            "description": "Show expired solicit codes?",
            "type": "boolean",
            "x-ms-summary": "Show expired?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "date_range",
            "in": "query",
            "description": "Filter the results to the specified date range.",
            "type": "string",
            "enum": [
              "All dates",
              "Last 30 days",
              "Last 60 days",
              "Last 90 days",
              "Last 6 months",
              "Last year",
              "Last 2 years"
            ],
            "x-ms-summary": "Date range",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Conmg.SolicitCodeCollection"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL or the specified request parameter is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the solicit codes."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/constituents/{constituent_id}/tributes": {
      "get": {
        "operationId": "ListConstituentTributes",
        "summary": "List constituent tributes",
        "description": "Lists the tributes for a constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Conmg.TributeCollection"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL or the specified request parameter is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the tributes."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/constituents/{constituent_id}/view": {
      "get": {
        "operationId": "GetConstituentSummaryProfile",
        "summary": "Get a constituent summary profile",
        "description": "Returns the summary profile information for a constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the constituent.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Conmg.ConstituentSummaryProfile"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the constituent."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/educationalhistories": {
      "post": {
        "operationId": "CreateConstituentEducation",
        "summary": "Create a constituent education",
        "description": "Creates a new constituent education.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.NewConstituentEducation"
            },
            "description": "An object that represents the constituent education to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates a constituent education. The response body contains the ID of the new constituent education.",
            "schema": {
              "$ref": "#/definitions/Conmg.CreatedConstituentEducation"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the constituent education."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/educationalhistories/{educational_history_id}": {
      "delete": {
        "operationId": "DeleteConstituentEducation",
        "summary": "Delete a constituent education",
        "description": "Deletes a constituent education record.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "educational_history_id",
            "in": "path",
            "description": "The system record ID of the education record to delete.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Educational history ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully deletes the constituent education record."
          },
          "400": {
            "description": "Returned when the specified educational history ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to delete the constituent education record."
          }
        }
      },
      "patch": {
        "operationId": "EditConstituentEducation",
        "summary": "Update a constituent education",
        "description": "Updates a constituent education.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "educational_history_id",
            "in": "path",
            "description": "The system record ID of the constituent education to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Educational history ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.UpdateConstituentEducation"
            },
            "description": "An object that represent properties of the constituent education to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the constituent education."
          },
          "400": {
            "description": "Returned when the specified constituent education ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the constituent education."
          },
          "404": {
            "description": "Returned when the specified constituent education is not found."
          }
        }
      }
    },
    "/alt-conmg/emailaddresses": {
      "post": {
        "operationId": "CreateConstituentEmailAddress",
        "summary": "Create a constituent email address",
        "description": "Creates a new constituent email address.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.NewConstituentEmailAddress"
            },
            "description": "An object that represents the email address to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates a constituent email address. The response body contains the ID of the new constituent email address.",
            "schema": {
              "$ref": "#/definitions/Conmg.CreatedConstituentEmailAddress"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the constituent email address."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/emailaddresses/{email_address_id}": {
      "delete": {
        "operationId": "DeleteConstituentEmailAddress",
        "summary": "Delete a constituent email address",
        "description": "Deletes a constituent email address.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email_address_id",
            "in": "path",
            "description": "The system record ID of the constituent email address to delete.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Email address ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully deletes the constituent email address."
          },
          "400": {
            "description": "Returned when the specified constituent email address ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to delete the constituent email address."
          }
        }
      },
      "patch": {
        "operationId": "EditConstituentEmailAddress",
        "summary": "Update a constituent email address",
        "description": "Updates a constituent email address.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email_address_id",
            "in": "path",
            "description": "The system record ID of the constituent email address to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Email address ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.UpdateConstituentEmailAddress"
            },
            "description": "An object that represent properties of the constituent email address to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the constituent email address."
          },
          "400": {
            "description": "Returned when the specified constituent email address ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the constituent email address."
          },
          "404": {
            "description": "Returned when the specified constituent email address is not found."
          }
        }
      }
    },
    "/alt-conmg/fundraisers": {
      "post": {
        "operationId": "CreateFundraiserConstituency",
        "summary": "Create a fundraiser constituency",
        "description": "Creates a new fundraiser constituency for a constituent.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.NewFundraiserConstituency"
            },
            "description": "An object that represents the fundraiser constituency to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates a fundraiser constituency. The response body contains the ID of the new fundraiser constituency.",
            "schema": {
              "$ref": "#/definitions/Conmg.CreatedFundraiserConstituency"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the fundraiser constituency."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/fundraisers/{fundraiser_constituency_id}": {
      "delete": {
        "operationId": "DeleteFundraiserConstituency",
        "summary": "Delete a fundraiser constituency",
        "description": "Deletes a fundraiser constituency from a constituent.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fundraiser_constituency_id",
            "in": "path",
            "description": "The system record ID of the fundraiser constituency to delete.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituency ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully deletes the fundraiser constituency."
          },
          "400": {
            "description": "Returned when the specified fundraiser constituency ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to delete the fundraiser constituency."
          }
        }
      },
      "patch": {
        "operationId": "EditFundraiserConstituency",
        "summary": "Update a fundraiser constituency",
        "description": "Updates a fundraiser constituency on a constituent.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fundraiser_constituency_id",
            "in": "path",
            "description": "The system record ID of the fundraiser constituency to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituency ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.UpdateFundraiserConstituency"
            },
            "description": "An object that represent properties of the fundraiser constituency to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the fundraiser constituency."
          },
          "400": {
            "description": "Returned when the specified fundraiser constituency ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the fundraiser constituency."
          },
          "404": {
            "description": "Returned when the specified fundraiser constituency is not found."
          }
        }
      }
    },
    "/alt-conmg/individuals": {
      "post": {
        "operationId": "CreateIndividualConstituent",
        "summary": "Create an individual constituent",
        "description": "Creates a new individual constituent.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.NewIndividual"
            },
            "description": "An object that represents the constituent to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates a constituent. The response body contains the ID of the new constituent.",
            "schema": {
              "$ref": "#/definitions/Conmg.CreatedIndividualConstituent"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create a constituent."
          }
        }
      }
    },
    "/alt-conmg/individuals/{constituent_id}": {
      "get": {
        "operationId": "GetIndividualConstituent",
        "summary": "Get an individual constituent",
        "description": "Returns information about an individual constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the individual constituent to get.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Conmg.IndividualConstituent"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the constituent."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      },
      "patch": {
        "operationId": "EditIndividualConstituent",
        "summary": "Update an individual constituent",
        "description": "Updates an individual constituent. If a reciprocal relationship exists, it is also modified to reflect the changes. This does not include changes to the \"comments\" property, which is specific to each record and can be modified independently on each record.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the individual to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.UpdateIndividual"
            },
            "description": "An object that represents the properties of the individual constituent to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the constituent."
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the constituent."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/interactions": {
      "post": {
        "operationId": "CreateConstituentInteraction",
        "summary": "Create a constituent interaction",
        "description": "Creates a new constituent interaction.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.NewConstituentInteraction"
            },
            "description": "An object that represents the interaction to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates an interaction. The response body contains the ID of the new interaction.",
            "schema": {
              "$ref": "#/definitions/Conmg.CreatedConstituentInteraction"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the interaction."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/interactions/{constituent_interaction_id}": {
      "get": {
        "operationId": "GetConstituentInteraction",
        "summary": "Get a constituent interaction",
        "description": "Returns details about the specified constituent interaction.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_interaction_id",
            "in": "path",
            "description": "The system record ID of the constituent interaction to get.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Interaction ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Conmg.ConstituentInteraction"
            }
          },
          "400": {
            "description": "Returned when the specified constituent interaction ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the constituent interaction."
          },
          "404": {
            "description": "Returned when the specified constituent interaction is not found."
          }
        }
      },      
      "delete": {
        "operationId": "DeleteConstituentInteraction",
        "summary": "Delete a constituent interaction",
        "description": "Deletes a constituent interaction.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_interaction_id",
            "in": "path",
            "description": "The system record ID of the constituent interaction to delete.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Interaction ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully deletes the constituent interaction."
          },
          "400": {
            "description": "Returned when the specified interaction ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to delete the constituent interaction."
          }
        }
      },
      "patch": {
        "operationId": "EditConstituentInteraction",
        "summary": "Update a constituent interaction",
        "description": "Updates a constituent interaction.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_interaction_id",
            "in": "path",
            "description": "The system record ID of the constituent interaction to delete.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Interaction ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.UpdateConstituentInteraction"
            },
            "description": "An object that represent properties of the constituent interaction to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the constituent interaction."
          },
          "400": {
            "description": "Returned when the specified constituent interaction ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the constituent interaction."
          },
          "404": {
            "description": "Returned when the specified constituent interaction is not found."
          }
        }
      }      
    },
    "/alt-conmg/mergetwoconstituents": {
      "post": {
        "operationId": "MergeTwoConstituents",
        "summary": "Merge two constituents",
        "description": "Merge two constituent records.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.NewConstituentMerge"
            },
            "description": "An object that represents the constituents to merge.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully merges the constituents. The response body contains the ID of target constituent.",
            "schema": {
              "$ref": "#/definitions/Conmg.MergedConstituent"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to merge constituents."
          },
          "404": {
            "description": "Returned when the specified source or target constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/organizations": {
      "post": {
        "operationId": "CreateOrganizationConstituent",
        "summary": "Create an organization constituent",
        "description": "Creates a new organization constituent.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.NewOrganization"
            },
            "description": "An object that represents an organization constituent to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates an organization constituent. The response body contains the ID of the new constituent.",
            "schema": {
              "$ref": "#/definitions/Conmg.CreatedOrganizationConstituent"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create an organization constituent."
          }
        }
      }
    },
    "/alt-conmg/organizations/{constituent_id}": {
      "get": {
        "operationId": "GetOrganizationConstituent",
        "summary": "Get an organization constituent",
        "description": "Returns information about an organization constituent.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the organization constituent to get.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/Conmg.OrganizationConstituent"
            }
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the constituent."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      },      
      "patch": {
        "operationId": "EditOrganizationConstituent",
        "summary": "Update an organization constituent",
        "description": "Updates an organization constituent.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_id",
            "in": "path",
            "description": "The system record ID of the organization constituent to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.UpdateOrganization"
            },
            "description": "An object that represents the properties of the organization to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the organization constituent."
          },
          "400": {
            "description": "Returned when the specified constituent ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the organization constituent."
          },
          "404": {
            "description": "Returned when the specified organization constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/phones": {
      "post": {
        "operationId": "CreateConstituentPhone",
        "summary": "Create a constituent phone",
        "description": "Creates a new constituent phone.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.NewConstituentPhone"
            },
            "description": "An object that represents the phone to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates a phone. The response body contains the ID of the new phone.",
            "schema": {
              "$ref": "#/definitions/Conmg.CreatedConstituentPhone"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the phone."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/phones/{constituent_phone_id}": {
      "delete": {
        "operationId": "DeleteConstituentPhone",
        "summary": "Delete a constituent phone",
        "description": "Deletes a constituent phone.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_phone_id",
            "in": "path",
            "description": "The system record ID of the constituent phone to delete.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent phone ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully deletes the constituent phone."
          },
          "400": {
            "description": "Returned when the specified constituent phone ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to delete the constituent phone."
          }
        }
      },
      "patch": {
        "operationId": "EditConstituentPhone",
        "summary": "Update a constituent phone",
        "description": "Updates a constituent phone.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_phone_id",
            "in": "path",
            "description": "The system record ID of the constituent phone to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Constituent phone ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.UpdateConstituentPhone"
            },
            "description": "An object that represent properties of the constituent phone to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the constituent phone."
          },
          "400": {
            "description": "Returned when the specified constituent phone ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the constituent phone."
          },
          "404": {
            "description": "Returned when the specified constituent phone is not found."
          }
        }
      }
    },
    "/alt-conmg/relationshipjobsinfo": {
      "post": {
        "operationId": "CreateConstituentEmploymentHistory",
        "summary": "Create a constituent employment history",
        "description": "Creates a new constituent employment history.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.NewConstituentEmploymentHistory"
            },
            "description": "An object that represents the constituent employment history to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates a constituent employment history. The response body contains the ID of the new constituent employment history.",
            "schema": {
              "$ref": "#/definitions/Conmg.CreatedConstituentEmploymentHistory"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the constituent employment history."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/relationshipjobsinfo/{relationship_job_info_id}": {
      "delete": {
        "operationId": "DeleteConstituentEmploymentHistory",
        "summary": "Delete a constituent employment history",
        "description": "Deletes a constituent employment history.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "relationship_job_info_id",
            "in": "path",
            "description": "The system record ID of the constituent employment history to delete.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Employment history ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully deletes the constituent employment history."
          },
          "400": {
            "description": "Returned when the specified constituent employment history ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to delete the constituent employment history."
          }
        }
      },
      "patch": {
        "operationId": "EditConstituentEmploymentHistory",
        "summary": "Update a constituent employment history",
        "description": "Updates a constituent employment history.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "relationship_job_info_id",
            "in": "path",
            "description": "The system record ID of the constituent employment history to delete.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Employment history ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.UpdateConstituentEmploymentHistory"
            },
            "description": "An object that represent properties of the constituent employment history to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the constituent employment history."
          },
          "400": {
            "description": "Returned when the specified constituent employment history ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the constituent employment history."
          },
          "404": {
            "description": "Returned when the specified constituent employment history is not found."
          }
        }
      }
    },
    "/alt-conmg/solicitcodes": {
      "post": {
        "operationId": "CreateConstituentSolicitCode",
        "summary": "Create a constituent solicit code",
        "description": "Creates a new constituent solicit code.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.NewConstituentSolicitCode"
            },
            "description": "An object that represents the constituent solicit code to create.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully creates a constituent solicit code. The response body contains the ID of the new constituent solicit code.",
            "schema": {
              "$ref": "#/definitions/Conmg.CreatedConstituentSolicitCode"
            }
          },
          "400": {
            "description": "Returned when the request body is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to create the constituent solicit code."
          },
          "404": {
            "description": "Returned when the specified constituent is not found."
          }
        }
      }
    },
    "/alt-conmg/solicitcodes/{constituent_solicit_code_id}": {
      "delete": {
        "operationId": "DeleteConstituentSolicitCode",
        "summary": "Delete a constituent solicit code",
        "description": "Deletes a constituent solicit code.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_solicit_code_id",
            "in": "path",
            "description": "The system record ID of the constituent solicit code to delete.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Solicit code ID",
            "x-ms-url-encoding": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully deletes the constituent solicit code."
          },
          "400": {
            "description": "Returned when the specified constituent solicit code ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to delete the constituent solicit code."
          }
        }
      },
      "patch": {
        "operationId": "EditConstituentSolicitCode",
        "summary": "Update a constituent solicit code",
        "description": "Updates a constituent note.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "constituent_solicit_code_id",
            "in": "path",
            "description": "The system record ID of the constituent solicit code to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Solicit code ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Conmg.UpdateConstituentSolicitCode"
            },
            "description": "An object that represent properties of the constituent solicit code to update.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully updates the constituent solicit code."
          },
          "400": {
            "description": "Returned when the specified constituent solicit code ID in the request URL or the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to update the constituent solicit code."
          },
          "404": {
            "description": "Returned when the specified constituent solicit code is not found."
          }
        }
      }
    }
  },
  "definitions": {
    "Adnmg.CodeTableEntry": {
      "type": "object",
      "description": "Table entry",
      "properties": {
        "id": {
          "type": "string",
          "description": "The table entry ID.",
          "x-ms-summary": "ID"
        },
        "description": {
          "type": "string",
          "description": "The table entry description.",
          "x-ms-summary": "Description"
        }
      }
    },
    "Adnmg.CodeTableEntryCollection": {
      "type": "object",
      "description": "A collection of table entries.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The set of table entries in the response.",
          "items": {
            "$ref": "#/definitions/Adnmg.CodeTableEntry"
          }
        }
      }
    },
    "Adnmg.SimpleListResult": {
      "type": "object",
      "description": "Results",
      "properties": {
        "rows": {
          "type": "array",
          "description": "The set of simple list result rows in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/Adnmg.SimpleListResultRow"
          }
        }
      }
    },
    "Adnmg.SimpleListResultRow": {
      "type": "object",
      "description": "Row",
      "properties": {
        "value": {
          "type": "string",
          "description": "The row identifier ID.",
          "x-ms-summary": "Value"
        },
        "label": {
          "type": "string",
          "description": "The row label.",
          "x-ms-summary": "Label"
        },
        "description": {
          "type": "string",
          "description": "The row description.",
          "x-ms-summary": "Label"
        }
      }
    },

    "Conmg.Address": {
      "type": "object",
      "description": "Address",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the address.",
          "x-ms-summary": "ID"
        },
        "type": {
          "type": "string",
          "description": "The type of address.",
          "x-ms-summary": "Type"
        },
        "contact_info": {
          "type": "string",
          "description": "The address.",
          "x-ms-summary": "Address"
        },
        "primary": {
          "type": "string",
          "description": "Is this the constituent's primary address?",
          "x-ms-summary": "Is primary?"
        },
        "confidential": {
          "type": "boolean",
          "description": "Is the address confidential?",
          "x-ms-summary": "Is confidential?"
        },
        "former": {
          "type": "boolean",
          "description": "Is the address a former address?",
          "x-ms-summary": "Is former?"
        },
        "do_not_contact": {
          "type": "string",
          "description": "Do not contact the constituent at this address?",
          "x-ms-summary": "Do not contact?"
        },
        "start_date": {
          "type": "string",
          "format": "date-time",
          "description": "The address start date.",
          "x-ms-summary": "Start date"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "The address end date.",
          "x-ms-summary": "End date"
        },                
        "geocoded": {
          "type": "boolean",
          "description": "Has the address been geocoded?",
          "x-ms-summary": "Geocoded?"
        },
        "pending_geocode": {
          "type": "boolean",
          "description": "Is the address pending geocoding?",
          "x-ms-summary": "Pending geocode?"
        },
        "invalid_geocode": {
          "type": "boolean",
          "description": "Is the address geocoding invalid?",
          "x-ms-summary": "Invalid geocode?"
        },
        "map_context_id": {
          "type": "string",
          "description": "The address map context ID",
          "x-ms-summary": "Map context ID"
        }
      }
    },
    "Conmg.AddressCollection": {
      "type": "object",
      "description": "Addresses",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/Conmg.Address"
          }
        }
      }
    },    
    "Conmg.AlternateLookupID": {
      "type": "object",
      "description": "Alternate lookup ID",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the alternate lookup ID.",
          "x-ms-summary": "ID"
        },
        "type": {
          "type": "string",
          "description": "The type of alternate lookup ID.",
          "x-ms-summary": "Type"
        },
        "alternate_lookup_id": {
          "type": "string",
          "description": "The alternate lookup ID.",
          "x-ms-summary": "Alternate lookup ID"
        }
      }
    },
    "Conmg.AlternateLookupIDCollection": {
      "type": "object",
      "description": "Alternate lookup IDs",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/Conmg.AlternateLookupID"
          }
        }
      }
    },
    "Conmg.Attribute": {
      "type": "object",
      "description": "Attribute",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the attribute.",
          "x-ms-summary": "ID"
        },
        "category": {
          "type": "string",
          "description": "The attribute category.",
          "x-ms-summary": "Category"
        },
        "attribute_category_id": {
          "type": "string",
          "description": "The system record ID of the attribute category.",
          "x-ms-summary": "Category ID"
        },
        "attribute_group": {
          "type": "string",
          "description": "The attribute group.",
          "x-ms-summary": "Group"
        },        
        "value": {
          "type": "string",
          "description": "The attribute value.",
          "x-ms-summary": "Value"
        },        
        "start_date": {
          "type": "string",
          "format": "date-time",
          "description": "The attribute start date.",
          "x-ms-summary": "Start date"
        },
        "end_date": {
          "type": "string",
          "format": "date-time",
          "description": "The attribute end date.",
          "x-ms-summary": "End date"
        },
        "comment": {
          "type": "string",
          "description": "The attribute comment.",
          "x-ms-summary": "Comment"
        }
      }
    },
    "Conmg.AttributeCollection": {
      "type": "object",
      "description": "Attributes",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/Conmg.Attribute"
          }
        }
      }
    },
    "Conmg.ConstituentAppeal": {
      "type": "object",
      "description": "Appeal",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the constituent appeal.",
          "x-ms-summary": "ID"
        },
        "appeal_id": {
          "type": "string",
          "description": "The system record ID of the appeal.",
          "x-ms-summary": "Appeal ID"
        },
        "appeal": {
          "type": "string",
          "description": "The appeal name.",
          "x-ms-summary": "Appeal name"
        },
        "description": {
          "type": "string",
          "description": "The appeal description.",
          "x-ms-summary": "Appeal description"
        },
        "mkt_segmentation_id": {
          "type": "string",
          "description": "The system record ID of the mailing.",
          "x-ms-summary": "Mailing ID"
        },
        "mailing": {
          "type": "string",
          "description": "The mailing name.",
          "x-ms-summary": "Mailing name"
        },
        "mailing_family_type_code": {
          "type": "integer",
          "format": "int32",
          "description": "The mailing family type code.",
          "x-ms-summary": "Mailing family type code"
        },
        "date_sent": {
          "type": "string",
          "format": "date-time",
          "description": "The date sent.",
          "x-ms-summary": "Date sent"
        },
        "package": {
          "type": "string",
          "description": "The package name.",
          "x-ms-summary": "Package name"
        },
        "source_code": {
          "type": "string",
          "description": "The source code.",
          "x-ms-summary": "Source code"
        },
        "mkt_segmentation_segment_id": {
          "type": "string",
          "description": "The system record ID of the mailing segment.",
          "x-ms-summary": "Segment ID"
        },
        "segment": {
          "type": "string",
          "description": "The mailing segment.",
          "x-ms-summary": "Segment"
        },
        "finder_number": {
          "type": "integer",
          "format": "int32",
          "description": "The finder number.",
          "x-ms-summary": "Finder number"
        },
        "test_segment": {
          "type": "string",
          "description": "The test segment.",
          "x-ms-summary": "Test segment"
        },
        "letter": {
          "type": "string",
          "description": "The constituent appeal mailing letter.",
          "x-ms-summary": "Letter"
        },
        "comments": {
          "type": "string",
          "description": "The constituent appeal comments.",
          "x-ms-summary": "Comments"
        },
        "has_responses": {
          "type": "boolean",
          "description": "Did this appeal have responses?",
          "x-ms-summary": "Has responses?"
        },
        "appeal_mailing": {
          "type": "boolean",
          "description": "Is this an appeal mailing?",
          "x-ms-summary": "Appeal mailing?"
        },
        "time_frame_text": {
          "type": "string",
          "description": "The constituent appeal time frame.",
          "x-ms-summary": "Time frame"
        },
        "time_frame_group_sort": {
          "type": "string",
          "description": "The time frame group sort order.",
          "x-ms-summary": "Time frame group sort"
        }
      }
    },
    "Conmg.ConstituentAppealCollection": {
      "type": "object",
      "description": "Appeals",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/Conmg.ConstituentAppeal"
          }
        }
      }
    },
    "Conmg.ConstituentInteractionParticipant": {
      "type": "object",
      "description": "An object representing a constituent interaction participant.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the interaction participant.",
          "x-ms-summary": "ID"
        },
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the participating constituent.",
          "x-ms-summary": "constituent ID"
        }
      }
    },
    "Conmg.ConstituentInteraction": {
      "type": "object",
      "description": "Interaction",
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent.",
          "x-ms-summary": "Constituent ID"
        },
        "constituent_name": {
          "type": "string",
          "description": "The constituent name.",
          "x-ms-summary": "Constituent name"
        },
        "objective": {
          "type": "string",
          "description": "The interaction summary.",
          "x-ms-summary": "Summary"
        },
        "status": {
          "type": "string",
          "description": "The interaction status.",
          "x-ms-summary": "Status"
        },
        "interaction_category": {
          "type": "string",
          "description": "The interaction category.",
          "x-ms-summary": "Category"
        },
        "interaction_subcategory": {
          "type": "string",
          "description": "The interaction subcategory.",
          "x-ms-summary": "Subcategory"
        },
        "expected_date": {
          "type": "string",
          "format": "date-time",
          "description": "The expected interaction date.",
          "x-ms-summary": "Expected date"
        },
        "expected_start_time": {
          "type": "object",
          "description": "The expected interaction start time.",
          "x-ms-summary": "Expected start",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        },
        "expected_end_time": {
          "type": "object",
          "description": "The expected interaction end time.",
          "x-ms-summary": "Expected end",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        },
        "actual_date": {
          "type": "string",
          "format": "date-time",
          "description": "The interaction actual date.",
          "x-ms-summary": "Actual date"
        },
        "actual_start_time": {
          "type": "object",
          "description": "The actual interaction start time.",
          "x-ms-summary": "Actual start",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        },
        "actual_end_time": {
          "type": "object",
          "description": "The actual interaction end time.",
          "x-ms-summary": "Actual end",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        },
        "time_zone_entry": {
          "type": "string",
          "description": "The interaction time zone.",
          "x-ms-summary": "Time zone",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "7fba76fa-b1ea-4c01-b841-edb18f03fe8c"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "7fba76fa-b1ea-4c01-b841-edb18f03fe8c"
              }
            }
          }
        },
        "all_day_event": {
          "type": "boolean",
          "description": "Is the interaction an all-day event?",
          "x-ms-summary": "All-day event?"
        },
        "fundraiser_id": {
          "type": "string",
          "description": "The system record ID of the fundraiser that owns the interaction.",
          "x-ms-summary": "Owner ID"
        },
        "interaction_type": {
          "type": "string",
          "description": "The interaction contact method.",
          "x-ms-summary": "Contact method"
        },
        "event_id": {
          "type": "string",
          "description": "The system record ID of the interaction event.",
          "x-ms-summary": "Event ID"
        },
        "comment": {
          "type": "string",
          "description": "The interaction comments.",
          "x-ms-summary": "Comments"
        },
        "participants": {
          "type": "array",
          "description": "The interaction participants.",
          "x-ms-summary": "Participants",
          "items": {
              "$ref": "#/definitions/Conmg.ConstituentInteractionParticipant"
          }
        }
      }
    },
    "Conmg.ConstituentPrimaryContactInfo": {
      "type": "object",
      "description": "Constituent primary contact info",
      "properties": {
        "address_type_label": {
          "type": "string",
          "description": "The primary address type.",
          "x-ms-summary": "Address type"
        },
        "address_type_id": {
          "type": "string",
          "description": "The system record ID of the primary address type.",
          "x-ms-summary": "Address type ID"
        },
        "country_id": {
          "type": "string",
          "description": "The system record ID of the primary address country.",
          "x-ms-summary": "Primary address country ID"
        },
        "address": {
          "type": "string",
          "description": "The primary address.",
          "x-ms-summary": "Primary address"
        },
        "city": {
          "type": "string",
          "description": "The primary address city.",
          "x-ms-summary": "Primary address city"
        },
        "state_id": {
          "type": "string",
          "description": "The system record ID of the primary address state.",
          "x-ms-summary": "Primary address state ID"
        },
        "post_code": {
          "type": "string",
          "description": "The primary address postal code.",
          "x-ms-summary": "Primary address postal code"
        },
        "confidential": {
          "type": "boolean",
          "description": "Is the address confidential?",
          "x-ms-summary": "Is address confidential?"
        },        
        "do_not_mail": {
          "type": "boolean",
          "description": "Do not contact the constituent at this address?",
          "x-ms-summary": "Do not mail?"
        },
        "do_not_mail_reason_code_id": {
          "type": "string",
          "description": "The system record ID of reason for not contacting the constituent at this address.",
          "x-ms-summary": "Do not mail reason ID"
        },
        "phone_type_label": {
          "type": "string",
          "description": "The primary phone type.",
          "x-ms-summary": "Primary phone type"
        },
        "phone_type_id": {
          "type": "string",
          "description": "The system record ID of the primary phone type.",
          "x-ms-summary": "Primary phone type ID"
        },
        "phone": {
          "type": "string",
          "description": "The primary phone number.",
          "x-ms-summary": "Primary phone number"
        },
        "phone_is_confidential": {
          "type": "boolean",
          "description": "Is the phone number confidential?",
          "x-ms-summary": "Is phone confidential?"
        },
        "do_not_call": {
          "type": "boolean",
          "description": "Do not contact the constituent at this number?",
          "x-ms-summary": "Do not call?"
        },
        "do_not_call_reason_code_id": {
          "type": "string",
          "description": "The system record ID of reason for not contacting the constituent at this number.",
          "x-ms-summary": "Do not call reason ID"
        },
        "email_type_label": {
          "type": "string",
          "description": "The primary email address type.",
          "x-ms-summary": "Primary email address type"
        },
        "email_type_id": {
          "type": "string",
          "description": "The system record ID of the primary email address type.",
          "x-ms-summary": "Primary email address type ID"
        },
        "email": {
          "type": "string",
          "description": "The primary email address.",
          "x-ms-summary": "Primary email address"
        },
        "do_not_email": {
          "type": "boolean",
          "description": "Do not contact the constituent at this email address?",
          "x-ms-summary": "Do not email?"
        },
        "web_address": {
          "type": "string",
          "description": "The constituent's website.",
          "x-ms-summary": "Website"
        }        
      }
    },
    "Conmg.ConstituentProfilePicture": {
      "type": "object",
      "description": "Constituent primary contact info",
      "properties": {
        "picture": {
          "type": "string",
          "description": "The contituent profile picture.",
          "x-ms-summary": "Picture"
        },
        "title": {
          "type": "string",
          "description": "The constituent's primary title.",
          "x-ms-summary": "Title"
        },
        "first_name": {
          "type": "string",
          "description": "The constituent's first name.",
          "x-ms-summary": "First name"
        },
        "key_name": {
          "type": "string",
          "description": "The constituent's key name.",
          "x-ms-summary": "Key name"
        },
        "suffix": {
          "type": "string",
          "description": "The constituent's primary suffix.",
          "x-ms-summary": "Suffix"
        },
        "middle_name": {
          "type": "string",
          "description": "The constituent's middle name.",
          "x-ms-summary": "Middle name"
        },
        "nick_name": {
          "type": "string",
          "description": "The constituent's nickname.",
          "x-ms-summary": "Nickname"
        },
        "maiden_name": {
          "type": "string",
          "description": "The constituent's maiden name.",
          "x-ms-summary": "Maiden name"
        },
        "gives_anonymously": {
          "type": "boolean",
          "description": "Does the constituent give anonymously?",
          "x-ms-summary": "Gives anonymously?"
        }
      }
    },
    "Conmg.ConstituentSearchResult": {
      "type": "object",
      "description": "Search result",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the constituent.",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The constituent name. For individuals, this computed field indicates the full name of the constituent based on the target organization's display name settings.",
          "x-ms-summary": "Name"
        },
        "middle_name": {
          "type": "string",
          "description": "The constituent's middle name.",
          "x-ms-summary": "Middle name"
        },
        "suffixcodeid": {
          "type": "string",
          "description": "The system record ID of the constituent's suffix.",
          "x-ms-summary": "Suffix code ID"
        },
        "lookup_id": {
          "type": "string",
          "description": "The user-defined identifier for the constituent.",
          "x-ms-summary": "Lookup ID"
        },
        "sort_constituent_name": {
          "type": "string",
          "description": "The constituent sort name.",
          "x-ms-summary": "Sort name"
        },
        "country_id": {
          "type": "string",
          "description": "The system record ID of the constituent's primary address country.",
          "x-ms-summary": "Country ID"
        },
        "address": {
          "type": "string",
          "description": "The constituent's preferred address.",
          "x-ms-summary": "Address"
        },
        "city": {
          "type": "string",
          "description": "The constituent's preferred address city.",
          "x-ms-summary": "City"
        },
        "state": {
          "type": "string",
          "description": "The constituent's preferred address state.",
          "x-ms-summary": "State"
        },
        "post_code": {
          "type": "string",
          "description": "The constituent's preferred address postcode.",
          "x-ms-summary": "Postcode"
        },
        "phone": {
          "type": "string",
          "description": "The constituent's phone.",
          "x-ms-summary": "Phone"
        },
        "email_address": {
          "type": "string",
          "description": "The constituent's email address.",
          "x-ms-summary": "Email address"
        },
        "classof": {
          "type": "integer",
          "format": "int32",
          "description": "The constituent's primary class year.",
          "x-ms-summary": "Class of"
        },
        "gives_anonymously": {
          "type": "boolean",
          "description": "Does the constituent give anonymously?",
          "x-ms-summary": "Gives anonymously?"
        },
        "organization": {
          "type": "boolean",
          "description": "Is the constituent an organization?",
          "x-ms-summary": "Is organization?"
        },
        "group": {
          "type": "boolean",
          "description": "Is the constituent a group?",
          "x-ms-summary": "Is group?"
        },
        "household": {
          "type": "boolean",
          "description": "Is the constituent a household?",
          "x-ms-summary": "Is household?"
        },
        "prospectmanager": {
          "type": "string",
          "description": "The constituent's prospect manager",
          "x-ms-summary": "Prospect manager"
        }
      }
    },
    "Conmg.ConstituentSearchResultCollection": {
      "type": "object",
      "description": "Search results",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/Conmg.ConstituentSearchResult"
          }
        }
      }
    },
    "Conmg.ConstituentSummaryProfile": {
      "type": "object",
      "description": "Constituent summary profile",
      "properties": {
        "name": {
          "type": "string",
          "description": "The constituent name.",
          "x-ms-summary": "Name"
        },
        "lookup_id": {
          "type": "string",
          "description": "The constituent lookup ID.",
          "x-ms-summary": "Lookup ID"
        },
        "constituent_profile": {
          "type": "boolean",
          "description": "Is a constituent profile?",
          "x-ms-summary": "Is a constituent profile?"
        },
        "organization": {
          "type": "boolean",
          "description": "Is the constituent an organization?",
          "x-ms-summary": "Is organization?"
        },
        "top_parent": {
          "type": "string",
          "description": "The parent organization.",
          "x-ms-summary": "Parent organization"
        },
        "top_parent_id": {
          "type": "string",
          "description": "The system record ID of the parent organization.",
          "x-ms-summary": "Parent organization ID"
        },
        "group": {
          "type": "boolean",
          "description": "Is the constituent a group?",
          "x-ms-summary": "Is group?"
        },
        "dissolved": {
          "type": "boolean",
          "description": "Is the group dissolved?",
          "x-ms-summary": "Is group dissolved?"
        },
        "group_type": {
          "type": "string",
          "description": "The group type.",
          "x-ms-summary": "Group type"
        },
        "group_member_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of group members.",
          "x-ms-summary": "Number of group members"
        },
        "committee_member": {
          "type": "boolean",
          "description": "Is a committee member?",
          "x-ms-summary": "Is committee member?"
        },
        "household": {
          "type": "boolean",
          "description": "Is the constituent a household?",
          "x-ms-summary": "Is household?"
        },
        "household_id": {
          "type": "string",
          "description": "The system record ID of the household.",
          "x-ms-summary": "Household ID"
        },
        "household_text": {
          "type": "string",
          "description": "The household text.",
          "x-ms-summary": "Household text"
        },
        "inactive": {
          "type": "boolean",
          "description": "Is the constituent inactive?",
          "x-ms-summary": "Is inactive?"
        },
        "constituent_inactivity_reason": {
          "type": "string",
          "description": "The cosntituent inactivity reason.",
          "x-ms-summary": "Inactivity reason"
        },
        "deceased": {
          "type": "boolean",
          "description": "Is the constituent deceased?",
          "x-ms-summary": "Is deceased?"
        },
        "deceaseddate": {
          "type": "object",
          "description": "The information source date.",
          "x-ms-summary": "Source date",
          "properties": {
            "year": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            },
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            }
          }
        },
        "spouse_deceased": {
          "type": "boolean",
          "description": "Is the spouse deceased?",
          "x-ms-summary": "Is spouse deceased?"
        },
        "gives_anonymously": {
          "type": "boolean",
          "description": "Does the constituent give anonymously?",
          "x-ms-summary": "Gives anonymously?"
        },
        "declarations_on_file": {
          "type": "boolean",
          "description": "Does the constituent have declarations on file?",
          "x-ms-summary": "Declarations on file?"
        },
        "wealthpoint_update_pending": {
          "type": "boolean",
          "description": "Is a WealthPoint update pending?",
          "x-ms-summary": "WealthPoint update pending?"
        },        
        "picture": {
          "type": "string",
          "description": "The constituent's profile picture.",
          "x-ms-summary": "Profile picture"
        },
        "primary_business": {
          "type": "string",
          "description": "The constituent's primary business.",
          "x-ms-summary": "Primary business"
        },
        "primary_business_id": {
          "type": "string",
          "description": "The system record ID of the primary business.",
          "x-ms-summary": "Primary business ID"
        },
        "primary_education": {
          "type": "string",
          "description": "The constituent's primary education.",
          "x-ms-summary": "Primary education"
        },
        "primary_education_id": {
          "type": "string",
          "description": "The system record ID of the primary education.",
          "x-ms-summary": "Primary education ID"
        },
        "education_attribute_defined": {
          "type": "boolean",
          "description": "Does the constituent have education attributes defined?",
          "x-ms-summary": "Education attributes defined?"
        },
        "related_constituent": {
          "type": "string",
          "description": "The related constituent.",
          "x-ms-summary": "Related constituent"
        },
        "related_constituent_id": {
          "type": "string",
          "description": "The system record ID of the related constituent.",
          "x-ms-summary": "Related constituent ID"
        },
        "solicit_code_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of solicit codes.",
          "x-ms-summary": "Solicit code count"
        },
        "address_id": {
          "type": "string",
          "description": "The system record ID of the primary address.",
          "x-ms-summary": "Primary address ID"
        },
        "address": {
          "type": "string",
          "description": "The primary address.",
          "x-ms-summary": "Primary address"
        },
        "address_is_confidential": {
          "type": "boolean",
          "description": "Is the address confidential?",
          "x-ms-summary": "Is address confidential?"
        },
        "do_not_mail": {
          "type": "boolean",
          "description": "Do not contact the constituent at this address?",
          "x-ms-summary": "Do not mail?"
        },
        "phone_number_id": {
          "type": "string",
          "description": "The system record ID of the primary phone.",
          "x-ms-summary": "Primary phone ID"
        },
        "phone_type": {
          "type": "string",
          "description": "The primary phone type.",
          "x-ms-summary": "Primary phone type"
        },
        "phone_number": {
          "type": "string",
          "description": "The primary phone number.",
          "x-ms-summary": "Primary phone number"
        },
        "phone_is_confidential": {
          "type": "boolean",
          "description": "Is the phone number confidential?",
          "x-ms-summary": "Is phone confidential?"
        },
        "do_not_phone": {
          "type": "boolean",
          "description": "Do not contact the constituent at this number?",
          "x-ms-summary": "Do not call?"
        },
        "email_address_id": {
          "type": "string",
          "description": "The system record ID of the primary email address.",
          "x-ms-summary": "Primary email address ID"
        },
        "email_address": {
          "type": "string",
          "description": "The primary email address.",
          "x-ms-summary": "Primary email address"
        },
        "do_not_email": {
          "type": "boolean",
          "description": "Do not contact the constituent at this email address?",
          "x-ms-summary": "Do not email?"
        },
        "web_address": {
          "type": "string",
          "description": "The constituent's website.",
          "x-ms-summary": "Website"
        },
        "registrant_status_text": {
          "type": "string",
          "description": "The registrant status text.",
          "x-ms-summary": "Registrant status text"
        },
        "vendor_status_text": {
          "type": "string",
          "description": "The vendor status text.",
          "x-ms-summary": "Vendor status text"
        },
        "alumnus_status_text": {
          "type": "string",
          "description": "The alumnus status text.",
          "x-ms-summary": "Alumnus status text"
        },
        "alumnus_enrollment_id": {
          "type": "string",
          "description": "The alumnus enrollment ID.",
          "x-ms-summary": "Alumnus enrollment ID"
        },
        "current_enrollment_id": {
          "type": "string",
          "description": "The current enrollment ID.",
          "x-ms-summary": "Current enrollment ID"
        },
        "current_enrollment_id_2": {
          "type": "string",
          "description": "The current enrollment ID 2.",
          "x-ms-summary": "Current enrollment ID 2"
        },
        "current_enrollment_id_3": {
          "type": "string",
          "description": "The current enrollment ID 3.",
          "x-ms-summary": "Current enrollment ID 3"
        },
        "student_enrollment_id": {
          "type": "string",
          "description": "The student enrollment ID.",
          "x-ms-summary": "Student enrollment ID"
        },
        "current_school": {
          "type": "string",
          "description": "The current school.",
          "x-ms-summary": "Current school"
        },
        "current_school_2": {
          "type": "string",
          "description": "The current school 2.",
          "x-ms-summary": "Current school 2"
        },
        "current_school_3": {
          "type": "string",
          "description": "The current school 3.",
          "x-ms-summary": "Current school 3"
        },
        "lifecycle_stage": {
          "type": "string",
          "description": "The donor lifecycle stage.",
          "x-ms-summary": "Lifecycle stage"
        },
        "lifecycle_stage_as_of": {
          "type": "string",
          "format": "date-time",
          "description": "The donor lifecycle stage as-of date.",
          "x-ms-summary": "Lifecycle stage as of"
        },
        "planned_giver_stage": {
          "type": "string",
          "description": "The planned giver stage.",
          "x-ms-summary": "Planned giver stage"
        },
        "planned_giver_stage_as_of": {
          "type": "string",
          "format": "date-time",
          "description": "The planned giver stage as-of date.",
          "x-ms-summary": "Planned giver stage as of"
        },
        "donor_state": {
          "type": "string",
          "description": "The donor state.",
          "x-ms-summary": "Donor state"
        },
        "donor_state_code": {
          "type": "integer",
          "format": "int32",
          "description": "The donor state code.",
          "x-ms-summary": "Donor state code"
        },
        "sponsor_type_code": {
          "type": "integer",
          "format": "int32",
          "description": "The sponsor type code.",
          "x-ms-summary": "Sponsor type code"
        },
        "last_revenue_date": {
          "type": "string",
          "format": "date-time",
          "description": "The last revenue date.",
          "x-ms-summary": "Last revenue date"
        },
        "alumnus_constituency_text": {
          "type": "string",
          "description": "The alumnus constituency text.",
          "x-ms-summary": "Alumnus constituency text"
        },
        "advocate_constituency_text": {
          "type": "string",
          "description": "The advocate constituency text.",
          "x-ms-summary": "Advocate constituency text"
        },
        "bank_constituency_text": {
          "type": "string",
          "description": "The bank constituency text.",
          "x-ms-summary": "Bank constituency text"
        },
        "board_member_constituency_text": {
          "type": "string",
          "description": "The board member constituency text.",
          "x-ms-summary": "Board member constituency text"
        },
        "committee_constituency_text": {
          "type": "string",
          "description": "The committee constituency text.",
          "x-ms-summary": "Committee constituency text"
        },
        "committee_member_constituency_text": {
          "type": "string",
          "description": "The committee member constituency text.",
          "x-ms-summary": "Committee member constituency text"
        },
        "community_member_constituency_text": {
          "type": "string",
          "description": "The community member constituency text.",
          "x-ms-summary": "Community member constituency text"
        },
        "donor_constituency_text": {
          "type": "string",
          "description": "The donor constituency text.",
          "x-ms-summary": "Donor constituency text"
        },
        "faculty_constituency_text": {
          "type": "string",
          "description": "The faculty constituency text.",
          "x-ms-summary": "Faculty constituency text"
        },
        "fundraiser_constituency_text": {
          "type": "string",
          "description": "The fundraiser constituency text.",
          "x-ms-summary": "Fundraiser constituency text"
        },
        "fundraising_group_constituency_text": {
          "type": "string",
          "description": "The fundraising group constituency text.",
          "x-ms-summary": "Fundraising group constituency text"
        },
        "grantor_constituency_text": {
          "type": "string",
          "description": "The grantor constituency text.",
          "x-ms-summary": "Grantor constituency text"
        },
        "loyal_donor_constituency_text": {
          "type": "string",
          "description": "The loyal donor constituency text.",
          "x-ms-summary": "Loyal donor constituency text"
        },
        "major_donor_constituency_text": {
          "type": "string",
          "description": "The major donor constituency text.",
          "x-ms-summary": "Major donor constituency text"
        },
        "matchfinder_constituency_text": {
          "type": "string",
          "description": "The MatchFinder constituency text.",
          "x-ms-summary": "MatchFinder constituency text"
        },
        "matchfinder_online_record_id": {
          "type": "integer",
          "format": "int32",
          "description": "The MatchFinder online record ID.",
          "x-ms-summary": "MatchFinder online record ID"
        },
        "member_constituency_text": {
          "type": "string",
          "description": "The member constituency text.",
          "x-ms-summary": "Member constituency text"
        },
        "nfg_constituency_text": {
          "type": "string",
          "description": "The NFG constituency text.",
          "x-ms-summary": "NFG constituency text"
        },
        "patron_constituency_text": {
          "type": "string",
          "description": "The patron constituency text.",
          "x-ms-summary": "Patron constituency text"
        },
        "plannedgiverconstituencytext": {
          "type": "string",
          "description": "The planned giver constituency text.",
          "x-ms-summary": "Planned giver constituency text"
        },
        "prospect_constituency_text": {
          "type": "string",
          "description": "The prospect constituency text.",
          "x-ms-summary": "Prospect constituency text"
        },
        "recognition_constituency_text": {
          "type": "string",
          "description": "The recognition constituency text.",
          "x-ms-summary": "Recognition constituency text"
        },
        "relation_constituency_text": {
          "type": "string",
          "description": "The relation constituency text.",
          "x-ms-summary": "Relation constituency text"
        },
        "sponsor_constituency_text": {
          "type": "string",
          "description": "The sponsor constituency text.",
          "x-ms-summary": "Sponsor constituency text"
        },
        "staff_constituency_text": {
          "type": "string",
          "description": "The staff constituency text.",
          "x-ms-summary": "Staff constituency text"
        },
        "student_constituency_text": {
          "type": "string",
          "description": "The student constituency text.",
          "x-ms-summary": "Student constituency text"
        },
        "student_relation_constituency_text": {
          "type": "string",
          "description": "The student relation constituency text.",
          "x-ms-summary": "Student relation constituency text"
        },
        "user_defined_constituency_text": {
          "type": "string",
          "description": "The user-defined constituency text.",
          "x-ms-summary": "User-defined constituency text"
        },
        "volunteer_constituency_text": {
          "type": "string",
          "description": "The volunteer constituency text.",
          "x-ms-summary": "Volunteer constituency text"
        },
        "constituencies_display_order": {
          "type": "array",
          "description": "The display order for constituencies.",
          "x-ms-summary": "Constituencies display order",
          "items": {
            "$ref": "#/definitions/Conmg.ConstituencyDisplayOrder"
          }
        },
        "user_defined_constituencies": {
          "type": "array",
          "description": "The set of user-defined constituencies.",
          "x-ms-summary": "User-defined constituencies",
          "items": {
            "$ref": "#/definitions/Conmg.UserDefinedConstituency"
          }
        },
        "student_relation_constituencies": {
          "type": "array",
          "description": "The set of student relation constituencies.",
          "x-ms-summary": "Student relation constituencies",
          "items": {
            "$ref": "#/definitions/Conmg.StudentRelationConstituency"
          }
        },
        "social_media_accounts": {
          "type": "array",
          "description": "The set of social media accounts for the constituent.",
          "x-ms-summary": "Social media accounts",
          "items": {
            "$ref": "#/definitions/Conmg.ConstituentSocialMediaAccount"
          }
        }
      }
    },

    "Conmg.ConstituencyDisplayOrder": {
      "type": "object",
      "description": "Constituency display order",
      "properties": {
        "id": {
          "type": "string",
          "description": "The constituency ID.",
          "x-ms-summary": "ID"
        },
        "description": {
          "type": "string",
          "description": "The constituency description.",
          "x-ms-summary": "description"
        },
        "sequence": {
          "type": "integer",
          "description": "The constituency sequence.",
          "x-ms-summary": "sequence"
        },
        "system": {
          "type": "boolean",
          "description": "Is the constituent system-defined?",
          "x-ms-summary": "is system?"
        }
      }
    },
    "Conmg.UserDefinedConstituency": {
      "type": "object",
      "description": "User-defined constituency",
      "properties": {
        "description": {
          "type": "string",
          "description": "The constituency description.",
          "x-ms-summary": "description"
        },
        "sequence": {
          "type": "string",
          "description": "The constituency sequence.",
          "x-ms-summary": "sequence"
        }
      }
    },
    "Conmg.StudentRelationConstituency": {
      "type": "object",
      "description": "Student relation constituency",
      "properties": {
        "description": {
          "type": "string",
          "description": "The constituency description.",
          "x-ms-summary": "description"
        },
        "sequence": {
          "type": "string",
          "description": "The constituency sequence.",
          "x-ms-summary": "sequence"
        }
      }
    },
    "Conmg.ConstituentSocialMediaAccount": {
      "type": "object",
      "description": "Constituent social media account",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the social media account.",
          "x-ms-summary": "ID"
        },
        "social_media_service_id": {
          "type": "string",
          "description": "The system record ID of the social media service.",
          "x-ms-summary": "service ID"
        },
        "social_media_service_name": {
          "type": "string",
          "description": "The social media service.",
          "x-ms-summary": "service name"
        },
        "social_media_service_icon": {
          "type": "string",
          "description": "The social media service icon.",
          "x-ms-summary": "icon"
        },
        "social_media_account_type_code_id": {
          "type": "string",
          "description": "The system record ID of the social media service account type.",
          "x-ms-summary": "account type ID"
        },
        "social_media_account_type": {
          "type": "string",
          "description": "The social media service account type.",
          "x-ms-summary": "account type"
        },
        "user_id": {
          "type": "string",
          "description": "The social media account user ID.",
          "x-ms-summary": "user ID"
        },
        "url": {
          "type": "string",
          "description": "The social media url.",
          "x-ms-summary": "url"
        },
        "info_source_code_id": {
          "type": "string",
          "description": "The system record ID of the social media account info source code.",
          "x-ms-summary": "info source code ID"
        },
        "info_source": {
          "type": "string",
          "description": "The social media account info source.",
          "x-ms-summary": "info source"
        },
        "do_not_contact": {
          "type": "boolean",
          "description": "Do not contact the constituent at this account?",
          "x-ms-summary": "do not contact?"
        },
        "sequence": {
          "type": "integer",
          "format": "int32",
          "description": "The social media account sequence.",
          "x-ms-summary": "sequence"
        }
      }
    },

    "Conmg.CreatedConstituentAddress": {
      "type": "object",
      "description": "Created constituent address",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created constituent address.",
          "x-ms-summary": "ID"
        }
      }
    },
    "Conmg.CreatedConstituentAlternateLookupID": {
      "type": "object",
      "description": "Created constituent alternate lookup ID",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created constituent alternate lookup ID.",
          "x-ms-summary": "ID"
        }
      }
    },
    "Conmg.CreatedConstituentAppeal": {
      "type": "object",
      "description": "Created constituent appeal",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created constituent appeal.",
          "x-ms-summary": "ID"
        }
      }
    },
    "Conmg.CreatedConstituentAppealResponse": {
      "type": "object",
      "description": "Created constituent appeal response",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created constituent appeal response.",
          "x-ms-summary": "ID"
        }
      }
    },
    "Conmg.CreatedConstituentEducation": {
      "type": "object",
      "description": "Created constituent education",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created constituent education.",
          "x-ms-summary": "ID"
        }
      }
    },
    "Conmg.CreatedConstituentEmailAddress": {
      "type": "object",
      "description": "Created constituent email address",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created constituent email address.",
          "x-ms-summary": "ID"
        }
      }
    },
    "Conmg.CreatedConstituentEmploymentHistory": {
      "type": "object",
      "description": "Created constituent employment history",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created constituent employment history.",
          "x-ms-summary": "ID"
        }
      }
    },
    "Conmg.CreatedConstituentInteraction": {
      "type": "object",
      "description": "Created constituent interaction",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created constituent interaction.",
          "x-ms-summary": "ID"
        }
      }
    },
    "Conmg.CreatedConstituentNote": {
      "type": "object",
      "description": "Created constituent note",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created constituent note.",
          "x-ms-summary": "ID"
        }
      }
    },
    "Conmg.CreatedConstituentPhone": {
      "type": "object",
      "description": "Created constituent phone",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created constituent phone.",
          "x-ms-summary": "ID"
        }
      }
    },
    "Conmg.CreatedConstituentSolicitCode": {
      "type": "object",
      "description": "Created constituent solicit code",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created constituent solicit code.",
          "x-ms-summary": "ID"
        }
      }
    },
    "Conmg.CreatedFundraiserConstituency": {
      "type": "object",
      "description": "Created fundraiser constituency",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created fundraiser constituency.",
          "x-ms-summary": "ID"
        }
      }
    },
    "Conmg.CreatedIndividualConstituent": {
      "type": "object",
      "description": "Created individual constituent",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created individual constituent.",
          "x-ms-summary": "ID"
        }
      }
    },
    "Conmg.CreatedOrganizationConstituent": {
      "type": "object",
      "description": "Created organization constituent",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the newly created organization constituent.",
          "x-ms-summary": "ID"
        }
      }
    },

    "Conmg.Education": {
      "type": "object",
      "description": "Education",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the constituent education.",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The educational institution.",
          "x-ms-summary": "Educational institution"
        },
        "education_history_status": {
          "type": "string",
          "description": "The status of the education.",
          "x-ms-summary": "Status"
        },
        "primary_record": {
          "type": "boolean",
          "description": "Is this the constituent's primary education?",
          "x-ms-summary": "Primary?"
        },
        "program": {
          "type": "string",
          "description": "The educational program.",
          "x-ms-summary": "Program"
        },
        "degree": {
          "type": "string",
          "description": "The educational degree.",
          "x-ms-summary": "Degree"
        },
        "class_of": {
          "type": "integer",
          "format": "int32",
          "description": "The class of.",
          "x-ms-summary": "Class of"
        },
        "affiliated": {
          "type": "boolean",
          "description": "Is the educational institution affiliated with the organization?",
          "x-ms-summary": "Afflilated?"
        },
        "start_date": {
          "type": "object",
          "description": "The education from date.",
          "x-ms-summary": "From",
          "properties": {
            "year": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            },
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            }
          }
        },
        "end_date": {
          "type": "object",
          "description": "The education to date.",
          "x-ms-summary": "To",
          "properties": {
            "year": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            },
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            }
          }
        }
      }
    },
    "Conmg.EducationCollection": {
      "type": "object",
      "description": "Educations",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/Conmg.Education"
          }
        }
      }
    },
    "Conmg.EmailAddress": {
      "type": "object",
      "description": "Email address",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the email address.",
          "x-ms-summary": "ID"
        },
        "type": {
          "type": "string",
          "description": "The type of email address.",
          "x-ms-summary": "Email type"
        },
        "email_address": {
          "type": "string",
          "description": "The email address.",
          "x-ms-summary": "Email address"
        },
        "primary": {
          "type": "boolean",
          "description": "Is this the constituent's primary email address?",
          "x-ms-summary": "Primary?"
        },
        "start_date": {
          "type": "string",
          "format": "date-time",
          "description": "The email address start date.",
          "x-ms-summary": "Start date"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "The email address end date.",
          "x-ms-summary": "End date"
        },                
        "info_source": {
          "type": "string",
          "description": "The information source.",
          "x-ms-summary": "Info source"
        },
        "info_source_comments": {
          "type": "string",
          "description": "The information source comments.",
          "x-ms-summary": "Info source comments"
        }
      }
    },
    "Conmg.EmailAddressCollection": {
      "type": "object",
      "description": "Email addresses",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/Conmg.EmailAddress"
          }
        }
      }
    },
    "Conmg.EmploymentHistory": {
      "type": "object",
      "description": "Employment history",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the constituent employment history.",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The constituent relationship.",
          "x-ms-summary": "Relationship"
        },
        "job_title": {
          "type": "string",
          "description": "The job title.",
          "x-ms-summary": "Job title"
        },
        "career_level": {
          "type": "string",
          "description": "The career level.",
          "x-ms-summary": "Career level"
        },
        "job_category": {
          "type": "string",
          "description": "The job category.",
          "x-ms-summary": "Category"
        },
        "start_date": {
          "type": "string",
          "format": "date-time",
          "description": "The employment start date.",
          "x-ms-summary": "Start date"
        },
        "end_date": {
          "type": "string",
          "format": "date-time",
          "description": "The employment end date.",
          "x-ms-summary": "End date"
        },
        "job_department": {
          "type": "string",
          "description": "The job department.",
          "x-ms-summary": "Department"
        },
        "job_division": {
          "type": "string",
          "description": "The job division.",
          "x-ms-summary": "Division"
        },
        "job_schedule": {
          "type": "string",
          "description": "The career level.",
          "x-ms-summary": "Career level"
        },
        "job_responsibility": {
          "type": "string",
          "description": "The job responsibilities.",
          "x-ms-summary": "Responsibilities"
        },
        "private_record": {
          "type": "boolean",
          "description": "Is the employment history private?",
          "x-ms-summary": "Is private?"
        }        
      }
    },
    "Conmg.EmploymentHistoryCollection": {
      "type": "object",
      "description": "Employment histories",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/Conmg.EmploymentHistory"
          }
        }
      }
    },
    "Conmg.IndividualConstituent": {
      "type": "object",
      "description": "Individual constituent",
      "properties": {
        "title": {
          "type": "string",
          "description": "The constituent's primary title.",
          "x-ms-summary": "Title"
        },
        "first_name": {
          "type": "string",
          "description": "The constituent's first name.",
          "x-ms-summary": "First name"
        },
        "last_name": {
          "type": "string",
          "description": "The constituent's last name.",
          "x-ms-summary": "Last name"
        },
        "suffix": {
          "type": "string",
          "description": "The constituent's primary suffix.",
          "x-ms-summary": "Suffix"
        },
        "middle_name": {
          "type": "string",
          "description": "The constituent's middle name.",
          "x-ms-summary": "Middle name"
        },
        "nickname": {
          "type": "string",
          "description": "The constituent's nickname.",
          "x-ms-summary": "Nickname"
        },
        "maiden_name": {
          "type": "string",
          "description": "The constituent's maiden name.",
          "x-ms-summary": "Maiden name"
        },
        "marital_status": {
          "type": "string",
          "description": "The marital status.",
          "x-ms-summary": "Marital status"
        },
        "birth_date": {
          "type": "object",
          "description": "The information source date.",
          "x-ms-summary": "Source date",
          "properties": {
            "year": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            },
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            }
          }
        },
        "age": {
          "type": "integer",
          "format": "int32",
          "description": "The constituent's age.",
          "x-ms-summary": "Age"
        },
        "gender_code": {
          "type": "string",
          "description": "The constituent's gender.",
          "x-ms-summary": "Gender"
        },
        "web_address": {
          "type": "string",
          "description": "The constituent's website.",
          "x-ms-summary": "Website"
        },
        "title_2": {
          "type": "string",
          "description": "The constituent's secondary title.",
          "x-ms-summary": "Title 2"
        },
        "suffix_2": {
          "type": "string",
          "description": "The constituent's secondary suffix",
          "x-ms-summary": "Suffix 2"
        },
        "gives_anonymously": {
          "type": "boolean",
          "description": "Does the constituent give anonymously?",
          "x-ms-summary": "Gives anonymously?"
        },
        "deceased": {
          "type": "boolean",
          "description": "Is the constituent deceased?",
          "x-ms-summary": "Deceased?"
        },
        "picture": {
          "type": "string",
          "description": "The constituent's profile picture.",
          "x-ms-summary": "Profile picture"
        },
        "picture_thumbnail": {
          "type": "string",
          "description": "The constituent's profile picture thumbnail.",
          "x-ms-summary": "Profile picture thumbnail"
        }
      }
    },

    "Conmg.MergedConstituent": {
      "type": "object",
      "description": "Merged constituent",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the merged constituent.",
          "x-ms-summary": "ID"
        }
      }
    },

    "Conmg.NewConstituentAddress": {
      "type": "object",
      "description": "Addresses store information about constituent residences and other addresses along with information about where or whether to send mail.",
      "required": [
        "constituent_id",
        "country"
      ],
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent.",
          "x-ms-summary": "Constituent ID"
        },
        "country": {
          "type": "string",
          "description": "The address country.",
          "x-ms-summary": "Country",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "c9649672-353d-42e8-8c25-4d34bbabfbba"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "c9649672-353d-42e8-8c25-4d34bbabfbba"
              }
            }
          }
        },
        "address_type": {
          "type": "string",
          "description": "The address type.",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "ADDRESSTYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "ADDRESSTYPECODE"
              }
            }
          }
        },
        "address_block": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The address block. Character limit: 150.",
          "x-ms-summary": "Address"
        },
        "city": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The address city. Character limit: 50.",
          "x-ms-summary": "City"
        },
        "state": {
          "type": "string",
          "description": "The address state.",
          "x-ms-summary": "State",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "7fa91401-596c-4f7c-936d-6e41683121d7",
              "paramKey1": "countryid",
              "paramValue1": {
                "parameter": "country"
              },
              "paramSourceType1": "SimpleDataList",
              "paramSource1": "c9649672-353d-42e8-8c25-4d34bbabfbba"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "7fa91401-596c-4f7c-936d-6e41683121d7"
              },
              "paramKey1": {
                "value": "countryId"
              },
              "paramValue1": {
                "parameterReference": "body/country"
              },
              "paramSourceType1": {
                "value": "SimpleDataList"
              },
              "paramSource1": {
                "value": "c9649672-353d-42e8-8c25-4d34bbabfbba"
              }
            }
          }
        },
        "postcode": {
          "type": "string",
          "maxLength": 12,
          "minLength": 0,
          "description": "The address potal code. Character limit: 12.",
          "x-ms-summary": "Postal code"
        },
        "primary": {
          "type": "boolean",
          "description": "Is this the constituent's primary address?",
          "x-ms-summary": "Primary?"
        },
        "do_not_mail": {
          "type": "boolean",
          "description": "Do not contact the constituent at this address?",
          "x-ms-summary": "Do not mail?"
        },
        "do_not_mail_reason": {
          "type": "string",
          "description": "The reason for not contacting the constituent at this address.",
          "x-ms-summary": "Do not mail reason",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "DONOTMAILREASONCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "DONOTMAILREASONCODE"
              }
            }
          }
        },
        "confidential": {
          "type": "boolean",
          "description": "Is this address confidential?",
          "x-ms-summary": "Is confidential?"
        },
        "start_date": {
          "type": "object",
          "description": "The seasonal start date.",
          "x-ms-summary": "Seasonal start",
          "x-ms-visibility": "advanced",
          "properties": {
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day.",
              "x-ms-summary": "day"
            }
          }
        },
        "end_date": {
          "type": "object",
          "description": "The seasonal end date.",
          "x-ms-summary": "Seasonal end",
          "x-ms-visibility": "advanced",
          "properties": {
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day.",
              "x-ms-summary": "day"
            }
          }
        },
        "historical_start_date": {
          "type": "string",
          "format": "date",
          "description": "The historical start date (ex: '2005-09-18').",
          "x-ms-summary": "Historical start date",
          "x-ms-visibility": "advanced"
        },
        "county": {
          "type": "string",
          "description": "The address county.",
          "x-ms-summary": "County",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "COUNTYCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "COUNTYCODE"
              }
            }
          }
        },
        "region": {
          "type": "string",
          "description": "The address region.",
          "x-ms-summary": "Region",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "REGIONCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "REGIONCODE"
              }
            }
          }
        },
        "dpc": {
          "type": "string",
          "maxLength": 8,
          "minLength": 0,
          "description": "The address delivery point code. Character limit: 8.",
          "x-ms-summary": "DPC",
          "x-ms-visibility": "advanced"
        },
        "cart": {
          "type": "string",
          "maxLength": 10,
          "minLength": 0,
          "description": "The address carrier route. Character limit: 10.",
          "x-ms-summary": "CART",
          "x-ms-visibility": "advanced"
        },
        "lot": {
          "type": "string",
          "maxLength": 5,
          "minLength": 0,
          "description": "The address lot. Character limit: 5.",
          "x-ms-summary": "LOT",
          "x-ms-visibility": "advanced"
        },
        "congressional_district": {
          "type": "string",
          "description": "The address congressional district.",
          "x-ms-summary": "Congressional district",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "CONGRESSIONALDISTRICTCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "CONGRESSIONALDISTRICTCODE"
              }
            }
          }
        },
        "state_house_district": {
          "type": "string",
          "description": "The address state house district.",
          "x-ms-summary": "State house district",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "STATEHOUSEDISTRICTCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "STATEHOUSEDISTRICTCODE"
              }
            }
          }
        },
        "state_senate_district": {
          "type": "string",
          "description": "The address state senate district.",
          "x-ms-summary": "State senate district",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "STATESENATEDISTRICTCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "STATESENATEDISTRICTCODE"
              }
            }
          }
        },
        "local_precinct": {
          "type": "string",
          "description": "The address local precinct.",
          "x-ms-summary": "Local precinct",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "LOCALPRECINCTCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "LOCALPRECINCTCODE"
              }
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The address origin.",
          "x-ms-summary": "Origin",
          "x-ms-visibility": "advanced",
          "enum": [
            "user",
            "web forms"
          ]
        },
        "info_source": {
          "type": "string",
          "description": "The information source for the address.",
          "x-ms-summary": "Information source",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "INFOSOURCECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "INFOSOURCECODE"
              }
            }
          }
        },
        "info_source_comments": {
          "type": "string",
          "maxLength": 256,
          "minLength": 0,
          "description": "The information source comments. Character limit: 256.",
          "x-ms-summary": "Info source comments",
          "x-ms-visibility": "advanced"
        },
        "recent_move": {
          "type": "boolean",
          "description": "Recently moved/changed from this address?",
          "x-ms-summary": "Recently moved?",
          "x-ms-visibility": "advanced"
        },        
        "old_address": {
          "type": "string",
          "description": "The old address.",
          "x-ms-summary": "Old address",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "bc075172-8103-4ccb-8285-658180e603a1",
              "paramKey1": "constituent_id",
              "paramValue1": {
                "parameter": "constituent_id"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "bc075172-8103-4ccb-8285-658180e603a1"
              },
              "paramKey1": {
                "value": "constituent_id"
              },
              "paramValue1": {
                "parameterReference": "body/constituent_id"
              }
            }
          }
        },        
        "omit_from_validation": {
          "type": "boolean",
          "description": "Omit this address from validation?",
          "x-ms-summary": "Omit from validation?",
          "x-ms-visibility": "advanced"
        },
        "update_matching_spouse_addresses": {
          "type": "boolean",
          "description": "Copy address information to the spouse (only applicable for individual constituents)?",
          "x-ms-summary": "Copy to spouse?",
          "x-ms-visibility" : "advanced"
        },
        "update_matching_household_addresses": {
          "type": "boolean",
          "description": "Copy address information to household members (only applicable for individual constituents)?",
          "x-ms-summary": "Copy to household?",
          "x-ms-visibility" : "advanced"
        }        
      }
    },
    "Conmg.NewConstituentAlternateLookupID": {
      "type": "object",
      "description": "An object that defines a new constituent alternate lookup ID.",
      "required": [
        "constituent_id",
        "alternate_lookup_id_type",
        "alternate_lookup_id"
      ],
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent.",
          "x-ms-summary": "Constituent ID"
        },
        "alternate_lookup_id_type": {
          "type": "string",
          "description": "The alternatle lookup ID type.",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "ALTERNATELOOKUPIDTYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "ALTERNATELOOKUPIDTYPECODE"
              }
            }
          }
        },
        "alternate_lookup_id": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The alternate lookup ID. Character limit: 100.",
          "x-ms-summary": "Alternate lookup ID"
        }
      }
    },
    "Conmg.NewConstituentAppeal": {
      "type": "object",
      "description": "An object that defines a new constituent appeal.",
      "required": [
        "constituent_id",
        "appeal_id"
      ],
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent.",
          "x-ms-summary": "Constituent ID"
        },
        "appeal_id": {
          "type": "string",
          "description": "The system record ID of the appeal.",
          "x-ms-summary": "Appeal ID"
        },
        "mkt_segmentation": {
          "type": "string",
          "description": "The mailing associated with the appeal.",
          "x-ms-summary": "Mailing",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "664c0aa7-9f88-46f6-ba84-7b412e1131b5",
              "paramKey1": "appeal_id",
              "paramValue1": {
                "parameter": "appeal_id"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "664c0aa7-9f88-46f6-ba84-7b412e1131b5"
              },
              "paramKey1": {
                "value": "appeal_id"
              },
              "paramValue1": {
                "parameterReference": "body/appeal_id"
              }
            }
          }
        },
        "date_sent": {
          "type": "string",
          "format": "date",
          "description": "The date sent (ex: '2005-09-18').",
          "x-ms-summary": "Date sent"
        },
        "mkt_package_id": {
          "type": "string",
          "description": "The system record ID of the package.",
          "x-ms-summary": "Package"
        },        
        "source_code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The source code. Character limit: 50.",
          "x-ms-summary": "Source code"
        },
        "comments": {
          "type": "string",
          "maxLength": 255,
          "minLength": 0,
          "description": "The constituent appeal comments. Character limit: 255.",
          "x-ms-summary": "Comments"
        }
      }
    },
    "Conmg.NewConstituentAppealResponse": {
      "type": "object",
      "description": "An object that describes the constituent appeal response to create.",
      "required": [
        "constituent_appeal_id",
        "response_category",
        "response"
      ],
      "properties": {
        "constituent_appeal_id": {
          "type": "string",
          "description": "The system record ID of the constituent appeal.",
          "x-ms-summary": "Constituent appeal ID"
        },
        "response_category": {
          "type": "string",
          "description": "The response category.",
          "x-ms-summary": "Category",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "fa5c3e42-aea6-450c-a66f-e79919df98d8"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "fa5c3e42-aea6-450c-a66f-e79919df98d8"
              }
            }
          }
        },
        "response": {
          "type": "string",
          "description": "The response.",
          "x-ms-summary": "Response",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "e48745a4-b8cd-4e31-885a-3173d7374ea6",
              "paramKey1": "responsecategoryid",
              "paramValue1": {
                "parameter": "response_category"
              },
              "paramSourceType1": "SimpleDataList",
              "paramSource1": "fa5c3e42-aea6-450c-a66f-e79919df98d8"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "e48745a4-b8cd-4e31-885a-3173d7374ea6"
              },
              "paramKey1": {
                "value": "responsecategoryid"
              },
              "paramValue1": {
                "parameterReference": "body/response_category"
              },
              "paramSourceType1": {
                "value": "SimpleDataList"
              },
              "paramSource1": {
                "value": "fa5c3e42-aea6-450c-a66f-e79919df98d8"
              }
            }
          }
        },
        "date": {
          "type": "string",
          "format": "date",
          "description": "The response date (ex: '2005-09-18').",
          "x-ms-summary": "Date"
        }
      }
    },
    "Conmg.NewConstituentEducation": {
      "type": "object",
      "description": "An object that defines a new constituent education.",
      "required": [
        "constituent_id",
        "educational_institution_id",
        "educational_history_status"
      ],
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent.",
          "x-ms-summary": "Constituent ID"
        },
        "educational_institution_id": {
          "type": "string",
          "description": "The educational institution.",
          "x-ms-summary": "Educational institution",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "value",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "0e239b5a-8c99-4e1e-9c10-06adce4b6500"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "value",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "0e239b5a-8c99-4e1e-9c10-06adce4b6500"
              }
            }
          }
        },
        "educational_history_status": {
          "type": "string",
          "description": "The status of the education.",
          "x-ms-summary": "Status",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "086c5bfb-1a80-46cf-a2f5-05ef51120891"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "086c5bfb-1a80-46cf-a2f5-05ef51120891"
              }
            }
          }
        },
        "primary_record": {
          "type": "boolean",
          "description": "Is this the constituent's primary education?",
          "x-ms-summary": "Primary?"
        },
        "educational_program": {
          "type": "string",
          "description": "The educational program.",
          "x-ms-summary": "Program",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "EDUCATIONALPROGRAMCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "EDUCATIONALPROGRAMCODE"
              }
            }
          }
        },
        "educational_degree": {
          "type": "string",
          "description": "The educational degree.",
          "x-ms-summary": "Degree",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "EDUCATIONALDEGREECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "EDUCATIONALDEGREECODE"
              }
            }
          }
        },
        "educational_award": {
          "type": "string",
          "description": "The honor awarded.",
          "x-ms-summary": "Honor awarded",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "EDUCATIONALAWARDCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "EDUCATIONALAWARDCODE"
              }
            }
          }
        },
        "educational_source": {
          "type": "string",
          "description": "The information source.",
          "x-ms-summary": "Source",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "EDUCATIONALSOURCECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "EDUCATIONALSOURCECODE"
              }
            }
          }
        },
        "educational_source_date": {
          "type": "object",
          "description": "The information source date.",
          "x-ms-summary": "Source date",
          "properties": {
            "year": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            },
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            }
          }
        },
        "comment": {
          "type": "string",
          "maxLength": 500,
          "minLength": 0,
          "description": "The education comments. Character limit: 500.",
          "x-ms-summary": "Comments"
        },
        "date_graduated": {
          "type": "object",
          "description": "The date graduated.",
          "x-ms-summary": "Date graduated",
          "properties": {
            "year": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            },
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            }
          }
        },
        "class_year": {
          "type": "integer",
          "format": "int32",
          "description": "The class of.",
          "x-ms-summary": "Class of"
        },
        "preferred_class_year": {
          "type": "integer",
          "format": "int32",
          "description": "The preferred class of.",
          "x-ms-summary": "Preferred class of"
        },
        "affiliated": {
          "type": "boolean",
          "description": "Is the educational institution affiliated with the organization?",
          "x-ms-summary": "Affiliated?",
          "x-ms-visibility": "advanced"
        },
        "start_date": {
          "type": "object",
          "description": "The education from date.",
          "x-ms-summary": "From",
          "x-ms-visibility": "advanced",
          "properties": {
            "year": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            },
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            }
          }
        },
        "date_left": {
          "type": "object",
          "description": "The education to date.",
          "x-ms-summary": "To",
          "x-ms-visibility": "advanced",
          "properties": {
            "year": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            },
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            }
          }
        },
        "educational_history_reason": {
          "type": "string",
          "description": "The educational history reason (only applicable for 'Unknown' education status).",
          "x-ms-summary": "Reason",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "EDUCATIONALHISTORYREASONCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "EDUCATIONALHISTORYREASONCODE"
              }
            }
          }
        },
        "educational_history_level": {
          "type": "string",
          "description": "The educational history level (only applicable for 'Currently attending' education status).",
          "x-ms-summary": "Level",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "EDUCATIONALHISTORYLEVELCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "EDUCATIONALHISTORYLEVELCODE"
              }
            }
          }
        }
      }
    },
    "Conmg.NewConstituentEmailAddress": {
      "type": "object",
      "description": "Email addresses store information about constituent email accounts and where to send email correspondences for individuals and organizations.",
      "required": [
        "constituent_id",
        "email_address"
      ],
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent.",
          "x-ms-summary": "Constituent ID"
        },
        "email_address_type": {
          "type": "string",
          "description": "The email address type.",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "EMAILADDRESSTYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "EMAILADDRESSTYPECODE"
              }
            }
          }
        },        
        "email_address": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The email address. Character limit: 100.",
          "x-ms-summary": "Email address"
        },        
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "The email address start date (ex: '2005-09-18').",
          "x-ms-summary": "Start date"
        },
        "primary": {
          "type": "boolean",
          "description": "Is this the constituent's primary email address?",
          "x-ms-summary": "Primary?"
        },
        "do_not_email": {
          "type": "boolean",
          "description": "Do not contact the constituent at this email address?",
          "x-ms-summary": "Do not email?"
        },
        "origin": {
          "type": "string",
          "description": "The email address origin.",
          "x-ms-summary": "Origin",
          "x-ms-visibility": "advanced",
          "enum": [
            "user",
            "web forms"
          ]
        },
        "info_source": {
          "type": "string",
          "description": "The information source for the email address.",
          "x-ms-summary": "Information source",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "INFOSOURCECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "INFOSOURCECODE"
              }
            }
          }
        },
        "info_source_comments": {
          "type": "string",
          "maxLength": 256,
          "minLength": 0,
          "description": "The information source comments. Character limit: 256.",
          "x-ms-summary": "Info source comments",
          "x-ms-visibility": "advanced"
        },
        "update_matching_spouse_email_address": {
          "type": "boolean",
          "description": "Copy email address information to the spouse (only applicable for individual constituents)?",
          "x-ms-summary": "Copy to spouse?",
          "x-ms-visibility" : "advanced"
        },
        "update_matching_household_email_address": {
          "type": "boolean",
          "description": "Copy email address information to household members (only applicable for individual constituents)?",
          "x-ms-summary": "Copy to household?",
          "x-ms-visibility" : "advanced"
        }        
      }
    },
    "Conmg.NewConstituentEmploymentHistory": {
      "type": "object",
      "description": "An object that defines a new constituent employment history.",
      "required": [
        "context_id",
        "relationship"
      ],
      "properties": {
        "context_id": {
          "type": "string",
          "description": "The system record ID of the constituent.",
          "x-ms-summary": "Constituent ID"
        },
        "relationship": {
          "type": "string",
          "description": "The constituent relationship.",
          "x-ms-summary": "Relationship",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "62083cb6-2a32-4d1d-aace-0ad288292ab7",
              "paramKey1": "constituentid",
              "paramValue1": {
                "parameter": "context_id"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "62083cb6-2a32-4d1d-aace-0ad288292ab7"
              },
              "paramKey1": {
                "value": "constituentid"
              },
              "paramValue1": {
                "parameterReference": "body/context_id"
              }
            }
          }
        },
        "job_title": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The job title. Character limit: 100.",
          "x-ms-summary": "Job title"
        },
        "career_level": {
          "type": "string",
          "description": "The career level.",
          "x-ms-summary": "Career level",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "CAREERLEVELCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "CAREERLEVELCODE"
              }
            }
          }
        },
        "job_category": {
          "type": "string",
          "description": "The job category.",
          "x-ms-summary": "Category",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "JOBCATEGORYCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "JOBCATEGORYCODE"
              }
            }
          }
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "The employment start date (ex: '2005-09-18').",
          "x-ms-summary": "Start date"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "The employment end date (ex: '2005-09-18').",
          "x-ms-summary": "End date"
        },
        "job_department": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The job department. Character limit: 100.",
          "x-ms-summary": "Department"
        },
        "job_division": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The job division. Character limit: 100.",
          "x-ms-summary": "Division"
        },
        "job_schedule": {
          "type": "string",
          "description": "The career level.",
          "x-ms-summary": "Career level",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "JOBSCHEDULECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "JOBSCHEDULECODE"
              }
            }
          }
        },
        "job_responsibility": {
          "type": "string",
          "maxLength": 250,
          "minLength": 0,
          "description": "The job responsibilities. Character limit: 250.",
          "x-ms-summary": "Responsibilities"
        },
        "private_record": {
          "type": "boolean",
          "description": "Is the employment history private?",
          "x-ms-summary": "Is private?"
        }
      }
    },
    "Conmg.NewConstituentInteraction": {
      "type": "object",
      "description": "Notes track helpful or important details about constituents, gifts, or actions, such as specific interests and special instructions for donations. Notes connect you with donors at a more personal level as you cultivate relationships and track lessons learned for more effective fundraising.",
      "required": [
        "constituent_id",
        "interaction_type",
        "objective",
        "expected_date",
        "status"
      ],
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent.",
          "x-ms-summary": "Constituent ID"
        },
        "objective": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The interaction summary. Character limit: 100.",
          "x-ms-summary": "Summary"
        },
        "status": {
          "type": "string",
          "description": "The interaction status.",
          "x-ms-summary": "Status",
          "enum": [
            "Pending",
            "Completed",
            "Canceled",
            "Declined"
          ]
        },
        "interaction_category": {
          "type": "string",
          "description": "The interaction category.",
          "x-ms-summary": "Category",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "cbba7545-b66f-44ac-aa24-d9c2f8cbc4ec"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "cbba7545-b66f-44ac-aa24-d9c2f8cbc4ec"
              }
            }
          }
        },
        "interaction_subcategory": {
          "type": "string",
          "description": "The interaction subcategory.",
          "x-ms-summary": "Subcategory",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "0eacc39b-07d1-4641-8774-e319559535a7",
              "paramKey1": "interactioncategoryid",
              "paramValue1": {
                "parameter": "interaction_category"
              },
              "paramSourceType1": "SimpleDataList",
              "paramSource1": "cbba7545-b66f-44ac-aa24-d9c2f8cbc4ec"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "0eacc39b-07d1-4641-8774-e319559535a7"
              },
              "paramKey1": {
                "value": "interactioncategoryid"
              },
              "paramValue1": {
                "parameterReference": "body/interaction_category"
              },
              "paramSourceType1": {
                "value": "SimpleDataList"
              },
              "paramSource1": {
                "value": "cbba7545-b66f-44ac-aa24-d9c2f8cbc4ec"
              }
            }
          }
        },
        "expected_date": {
          "type": "string",
          "format": "date",
          "description": "The expected interaction date (ex: '2005-09-18').",
          "x-ms-summary": "Expected date"
        },
        "expected_start_time": {
          "type": "object",
          "description": "The expected interaction start time.",
          "x-ms-summary": "Expected start",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        },
        "expected_end_time": {
          "type": "object",
          "description": "The expected interaction end time.",
          "x-ms-summary": "Expected end",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        },
        "actual_date": {
          "type": "string",
          "format": "date",
          "description": "The interaction actual date (ex: '2005-09-18').",
          "x-ms-summary": "Actual date"
        },
        "actual_start_time": {
          "type": "object",
          "description": "The actual interaction start time.",
          "x-ms-summary": "Actual start",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        },
        "actual_end_time": {
          "type": "object",
          "description": "The actual interaction end time.",
          "x-ms-summary": "Actual end",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        },
        "time_zone_entry": {
          "type": "string",
          "description": "The interaction time zone.",
          "x-ms-summary": "Time zone",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "7fba76fa-b1ea-4c01-b841-edb18f03fe8c"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "7fba76fa-b1ea-4c01-b841-edb18f03fe8c"
              }
            }
          }
        },
        "is_all_day_event": {
          "type": "boolean",
          "description": "Is the interaction an all-day event?",
          "x-ms-summary": "All-day event?"
        },
        "fundraiser_id": {
          "type": "string",
          "description": "The system record ID of the fundraiser that owns the interaction.",
          "x-ms-summary": "Owner ID"
        },
        "interaction_type": {
          "type": "string",
          "description": "The interaction contact method.",
          "x-ms-summary": "Contact method",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "INTERACTIONTYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "INTERACTIONTYPECODE"
              }
            }
          }
        },
        "event_id": {
          "type": "string",
          "description": "The system record ID of the interaction event.",
          "x-ms-summary": "Event ID"
        },
        "comment": {
          "type": "string",
          "description": "The interaction comments.",
          "x-ms-summary": "Comments"
        },
        "participants": {
          "type": "array",
          "description": "The interaction participants.",
          "x-ms-summary": "Participants",
          "x-ms-visibility": "advanced",
          "items": {
              "$ref": "#/definitions/Conmg.NewConstituentInteractionParticipant"
          }
        }
      }
    },
    "Conmg.NewConstituentInteractionParticipant": {
      "type": "object",
      "description": "An object representing a constituent interaction participant.",
      "required": [
        "constituent_id"
      ],
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the participating constituent.",
          "x-ms-summary": "constit ID"
        }
      }
    },
    "Conmg.NewConstituentMerge": {
      "type": "object",
      "description": "An object representing the constituent merge parameters.",
      "required": [
        "source_id",
        "target_id",
        "config",
        "delete_source",
        "delete_source_constituent"
      ],
      "properties": {
        "source_id": {
          "type": "string",
          "description": "The system record ID of the source constituent whose data will be merged into the target constituent.",
          "x-ms-summary": "Source constituent ID"
        },
        "target_id": {
          "type": "string",
          "description": "The system record ID of the target constituent that will represent the consolidated view of data after the merge has completed.",
          "x-ms-summary": "Target constituent ID"
        },
        "config": {
          "type": "string",
          "description": "The merge configuration.",
          "x-ms-summary": "Configuration",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "c18b465c-c012-4839-952b-4bb8aae7cb3f"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "c18b465c-c012-4839-952b-4bb8aae7cb3f"
              }
            }
          }
        },
        "delete_source": {
          "type": "boolean",
          "description": "Delete the source constituent after the merge is complete?",
          "x-ms-summary": "Delete source?"
        },
        "delete_source_constituent": {
          "type": "string",
          "description": "The delete source constituent. Available values are <i>delete source constituent</i>, <i>mark source constituent inactive</i>",
          "x-ms-summary": "Delete action",
          "enum": [
            "delete source constituent",
            "mark source constituent inactive"
          ]
        },
        "constituent_inactivity_reason_code": {
          "type": "string",
          "description": "The inactive reason.",
          "x-ms-summary": "Inactive reason",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "71b29b04-d70f-4d38-bab1-e44a2528d0e8"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "71b29b04-d70f-4d38-bab1-e44a2528d0e8"
              }
            }
          }
        },
        "constituent_inactivity_details": {
          "type": "string",
          "maxLength": 300,
          "minLength": 0,
          "description": "The inactive details. Character limit: 300.",
          "x-ms-summary": "Inactivity details",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Conmg.NewConstituentNote": {
      "type": "object",
      "description": "Notes track helpful or important details about constituents, gifts, or actions, such as specific interests and special instructions for donations. Notes connect you with donors at a more personal level as you cultivate relationships and track lessons learned for more effective fundraising.",
      "required": [
        "constituent_id",
        "note_type",
        "date_entered"
      ],
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent.",
          "x-ms-summary": "Constituent ID"
        },
        "note_type": {
          "type": "string",
          "description": "The note type.",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "CONSTITUENTNOTETYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "CONSTITUENTNOTETYPECODE"
              }
            }
          }
        },
        "date_entered": {
          "type": "string",
          "format": "date",
          "description": "The note date (ex: '2005-09-18').",
          "x-ms-summary": "Date"
        },
        "title": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The note title. Character limit: 50.",
          "x-ms-summary": "Title"
        },
        "author_id": {
          "type": "string",
          "description": "The system record ID of the author of the note.",
          "x-ms-summary": "Author ID"
        },
        "text_note": {
          "type": "string",
          "description": "The plain text of the note.",
          "x-ms-summary": "Note"
        },
        "html_note": {
          "type": "string",
          "description": "The html text of the note.",
          "x-ms-summary": "HTML"
        }
      }
    },
    "Conmg.NewConstituentPhone": {
      "type": "object",
      "description": "Phones store information about constituent phone numbers and where to call individuals and organizations.",
      "required": [
        "constituent_id",
        "number"
      ],
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent.",
          "x-ms-summary": "Constituent ID"
        },
        "phone_type": {
          "type": "string",
          "description": "The phone type.",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "PHONETYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "PHONETYPECODE"
              }
            }
          }
        },        
        "number": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The phone number. Character limit: 100.",
          "x-ms-summary": "Number"
        },        
        "country": {
          "type": "string",
          "description": "The phone country.",
          "x-ms-summary": "Country",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "c9649672-353d-42e8-8c25-4d34bbabfbba"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "c9649672-353d-42e8-8c25-4d34bbabfbba"
              }
            }
          }
        },
        "start_time": {
          "type": "object",
          "description": "The call after time.",
          "x-ms-summary": "Call after",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        },
        "end_time": {
          "type": "object",
          "description": "The call before time.",
          "x-ms-summary": "Call before",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "The phone start date (ex: '2005-09-18').",
          "x-ms-summary": "Start date"
        },
        "primary": {
          "type": "boolean",
          "description": "Is this the constituent's primary phone?",
          "x-ms-summary": "Primary?"
        },
        "do_not_call": {
          "type": "boolean",
          "description": "Do not contact the constituent at this number?",
          "x-ms-summary": "Do not call?"
        },
        "do_not_call_reason": {
          "type": "string",
          "description": "The reason for not contacting the constituent at this number.",
          "x-ms-summary": "Do not call reason",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "DONOTCALLREASONCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "DONOTCALLREASONCODE"
              }
            }
          }
        },
        "donottext": {
          "type": "boolean",
          "description": "Do not contact the constituent via text message at this number?",
          "x-ms-summary": "Do not text?"
        },
        "confidential": {
          "type": "boolean",
          "description": "Is this phone number confidential?",
          "x-ms-summary": "Is confidential?"
        },
        "seasonal_start_date": {
          "type": "object",
          "description": "The seasonal start date.",
          "x-ms-summary": "Seasonal start",
          "x-ms-visibility": "advanced",
          "properties": {
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day.",
              "x-ms-summary": "day"
            }
          }
        },
        "seasonal_end_date": {
          "type": "object",
          "description": "The seasonal end date.",
          "x-ms-summary": "Seasonal end",
          "x-ms-visibility": "advanced",
          "properties": {
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day.",
              "x-ms-summary": "day"
            }
          }
        },
        "origin": {
          "type": "string",
          "description": "The phone origin.",
          "x-ms-summary": "Origin",
          "x-ms-visibility": "advanced",
          "enum": [
            "user",
            "web forms"
          ]
        },
        "info_source": {
          "type": "string",
          "description": "The information source for the phone number.",
          "x-ms-summary": "Information source",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "INFOSOURCECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "INFOSOURCECODE"
              }
            }
          }
        },
        "info_source_comments": {
          "type": "string",
          "maxLength": 256,
          "minLength": 0,
          "description": "The information source comments. Character limit: 256.",
          "x-ms-summary": "Info source comments",
          "x-ms-visibility": "advanced"
        },
        "update_matching_spouse_phone": {
          "type": "boolean",
          "description": "Copy phone information to the spouse (only applicable for individual constituents)?",
          "x-ms-summary": "Copy to spouse?",
          "x-ms-visibility" : "advanced"
        },
        "update_matching_household_phone": {
          "type": "boolean",
          "description": "Copy phone information to household members (only applicable for individual constituents)?",
          "x-ms-summary": "Copy to household?",
          "x-ms-visibility" : "advanced"
        }        
      }
    },
    "Conmg.NewConstituentSolicitCode": {
      "type": "object",
      "description": "An object that defines a new constituent solicit code.",
      "required": [
        "constituent_id",
        "solicit_code"
      ],
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent.",
          "x-ms-summary": "Constituent ID"
        },
        "solicit_code": {
          "type": "string",
          "description": "The solicit code.",
          "x-ms-summary": "Solicit code",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "ea7286bd-d27b-4028-b507-4bdb92580499",
              "paramKey1": "feature_id",
              "paramValue1": "b6a5f4eb-adf7-4fa4-a3e0-8cd96e58d8c2",
              "paramKey2": "feature_type",
              "paramValue2": "1"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "ea7286bd-d27b-4028-b507-4bdb92580499"
              },
              "paramKey1": {
                "value": "feature_id"
              },
              "paramValue1": {
                "value": "b6a5f4eb-adf7-4fa4-a3e0-8cd96e58d8c2"
              },
              "paramKey2": {
                "value": "feature_type"
              },
              "paramValue2": {
                "value": "1"
              }
            }
          }
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "The solicit code start date (ex: '2005-09-18').",
          "x-ms-summary": "Start date"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "The solicit code end date (ex: '2005-09-18').",
          "x-ms-summary": "End date"
        },
        "comments": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The solicit code comments. Character limit: 100.",
          "x-ms-summary": "Comments"
        }
      }
    },
    "Conmg.NewFundraiserConstituency": {
      "type": "object",
      "description": "An object that defines a new fundraiser constituency for a constituent.",
      "required": [
        "constituent_id"
      ],
      "properties": {
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the constituent.",
          "x-ms-summary": "Constituent ID"
        },
        "date_from": {
          "type": "string",
          "format": "date",
          "description": "The starting date for the constituency (ex: '2005-09-18').",
          "x-ms-summary": "Date from"
        },
        "date_to": {
          "type": "string",
          "format": "date",
          "description": "The ending date for the constituency (ex: '2005-09-18').",
          "x-ms-summary": "Date to"
        }        
      }
    },
    "Conmg.NewIndividual": {
      "type": "object",
      "description": "Constituents are the individuals and organizations who support your organization by contributing time, money, and resources. The constituent entity stores information about donors, prospects, volunteers, general supporters, and more.",
      "required": [
        "last_name"
      ],
      "properties": {
        "last_name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The constituent's last name. Character limit: 100.",
          "x-ms-summary": "Last name"
        },
        "title": {
          "type": "string",
          "description": "The constituent's primary title.",
          "x-ms-summary": "Title",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "TITLECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "TITLECODE"
              }
            }
          }
        },
        "first_name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The constituent's first name. Character limit: 50.",
          "x-ms-summary": "First name"
        },
        "suffix": {
          "type": "string",
          "description": "The constituent's primary suffix.",
          "x-ms-summary": "Suffix",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "SUFFIXCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "SUFFIXCODE"
              }
            }
          }
        },
        "address_type": {
          "type": "string",
          "description": "The primary address type.",
          "x-ms-summary": "Address type",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "ADDRESSTYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "ADDRESSTYPECODE"
              }
            }
          }
        },
        "address_country": {
          "type": "string",
          "description": "The primary address country.",
          "x-ms-summary": "Country",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "c9649672-353d-42e8-8c25-4d34bbabfbba"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "c9649672-353d-42e8-8c25-4d34bbabfbba"
              }
            }
          }
        },
        "address_block": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The constituent's primary address. Character limit: 150.",
          "x-ms-summary": "Address"
        },
        "address_city": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The primary addres city. Character limit: 50.",
          "x-ms-summary": "City"
        },
        "address_state": {
          "type": "string",
          "description": "The address state.",
          "x-ms-summary": "State",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "7fa91401-596c-4f7c-936d-6e41683121d7",
              "paramKey1": "countryid",
              "paramValue1": {
                "parameter": "address_country"
              },
              "paramSourceType1": "SimpleDataList",
              "paramSource1": "c9649672-353d-42e8-8c25-4d34bbabfbba"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "7fa91401-596c-4f7c-936d-6e41683121d7"
              },
              "paramKey1": {
                "value": "countryId"
              },
              "paramValue1": {
                "parameterReference": "body/address_country"
              },
              "paramSourceType1": {
                "value": "SimpleDataList"
              },
              "paramSource1": {
                "value": "c9649672-353d-42e8-8c25-4d34bbabfbba"
              }
            }
          }
        },
        "address_post_code": {
          "type": "string",
          "maxLength": 12,
          "minLength": 0,
          "description": "The postal code of the primary address. Character limit: 12.",
          "x-ms-summary": "Postal code"
        },
        "address_do_not_mail": {
          "type": "boolean",
          "description": "Do not send mail to this address?",
          "x-ms-summary": "Do not send mail?",
          "x-ms-visibility": "advanced"
        },
        "address_do_not_mail_reason": {
          "type": "string",
          "description": "The reason for not sending mail to this address.",
          "x-ms-summary": "Do not mail reason",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "DONOTMAILREASONCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "DONOTMAILREASONCODE"
              }
            }
          }
        },
        "address_dpc": {
          "type": "string",
          "maxLength": 8,
          "minLength": 0,
          "description": "The address DPC.  Character limit: 8.",
          "x-ms-summary": "DPC",
          "x-ms-visibility": "advanced"
        },
        "address_cart": {
          "type": "string",
          "maxLength": 10,
          "minLength": 0,
          "description": "The address CART.  Character limit: 10.",
          "x-ms-summary": "CART",
          "x-ms-visibility": "advanced"
        },
        "address_lot": {
          "type": "string",
          "maxLength": 5,
          "minLength": 0,
          "description": "The address LOT.  Character limit: 5.",
          "x-ms-summary": "LOT",
          "x-ms-visibility": "advanced"
        },
        "address_county": {
          "type": "string",
          "description": "The address county code.",
          "x-ms-summary": "County",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "COUNTYCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "COUNTYCODE"
              }
            }
          }
        },
        "address_congressional_district": {
          "type": "string",
          "description": "The congressional district code.",
          "x-ms-summary": "Congressional district",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "CONGRESSIONALDISTRICTCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "CONGRESSIONALDISTRICTCODE"
              }
            }
          }
        },
        "phone_type": {
          "type": "string",
          "description": "The phone type.",
          "x-ms-summary": "Phone type",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "PHONETYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "PHONETYPECODE"
              }
            }
          }
        },
        "phone_number": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The phone number. Character limit: 100.",
          "x-ms-summary": "Phone number",
          "x-ms-visibility": "advanced"
        },
        "email_address_type": {
          "type": "string",
          "description": "The email type.",
          "x-ms-summary": "Email type",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "EMAILADDRESSTYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "EMAILADDRESSTYPECODE"
              }
            }
          }
        },
        "email_address": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The email address. Character limit: 100.",
          "x-ms-summary": "Email address",
          "x-ms-visibility": "advanced"
        },
        "middle_name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The constituent's middle name. Character limit: 50.",
          "x-ms-summary": "Middle name",
          "x-ms-visibility": "advanced"
        },
        "title_2": {
          "type": "string",
          "description": "The constituent's secondary title.",
          "x-ms-summary": "Title 2",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "TITLECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "TITLECODE"
              }
            }
          }
        },
        "suffix_2": {
          "type": "string",
          "description": "The constituent's secondary suffix",
          "x-ms-summary": "Suffix 2",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "SUFFIXCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "SUFFIXCODE"
              }
            }
          }
        },
        "nickname": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The constituent's nickname. Character limit: 50.",
          "x-ms-summary": "Nickname",
          "x-ms-visibility": "advanced"
        },
        "maiden_name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The constituent's maiden name. Character limit: 100.",
          "x-ms-summary": "Maiden name",
          "x-ms-visibility": "advanced"
        },
        "marital_status": {
          "type": "string",
          "description": "The marital status.",
          "x-ms-summary": "Marital status",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "MARITALSTATUSCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "MARITALSTATUSCODE"
              }
            }
          }
        },
        "birth_date": {
          "type": "object",
          "description": "The constituent's birth date.",
          "x-ms-summary": "Birthdate",
          "x-ms-visibility": "advanced",
          "properties": {
            "year": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            },
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            }
          }
        },
        "gender_code": {
          "type": "string",
          "description": "The constituent's gender.",
          "x-ms-summary": "Gender",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "GENDERCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "GENDERCODE"
              }
            }
          }
        }
      }
    },
    "Conmg.NewOrganization": {
      "type": "object",
      "description": "Constituents are the individuals and organizations who support your organization by contributing time, money, and resources. The constituent entity stores information about donors, prospects, volunteers, general supporters, and more.",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The organization constituent's name. Character limit: 100.",
          "x-ms-summary": "Name"
        },
        "industry": {
          "type": "string",
          "description": "The industry code.",
          "x-ms-summary": "Industry",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "INDUSTRYCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "INDUSTRYCODE"
              }
            }
          }
        },
        "num_employees": {
          "type": "integer",
          "format": "int32",
          "description": "The number of employees.",
          "x-ms-summary": "No. of employees"
        },
        "num_subsidiaries": {
          "type": "integer",
          "format": "int32",
          "description": "The number of subsidiary organizations.",
          "x-ms-summary": "No. of subsidiary orgs"
        },
        "parent_corp_id": {
          "type": "string",
          "description": "The system record ID of the parent corporation.",
          "x-ms-summary": "Parent org"
        },
        "address_type": {
          "type": "string",
          "description": "The address type.",
          "x-ms-summary": "Address type",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "ADDRESSTYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "ADDRESSTYPECODE"
              }
            }
          }
        },
        "address_country": {
          "type": "string",
          "description": "The address country.",
          "x-ms-summary": "Country",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "c9649672-353d-42e8-8c25-4d34bbabfbba"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "c9649672-353d-42e8-8c25-4d34bbabfbba"
              }
            }
          }
        },
        "address_block": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The address block. Character limit: 150.",
          "x-ms-summary": "Address"
        },
        "address_city": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The city of the address. Character limit: 50.",
          "x-ms-summary": "City"
        },
        "address_state": {
          "type": "string",
          "description": "The address state.",
          "x-ms-summary": "State",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "7fa91401-596c-4f7c-936d-6e41683121d7",
              "paramKey1": "countryid",
              "paramValue1": {
                "parameter": "address_country"
              },
              "paramSourceType1": "SimpleDataList",
              "paramSource1": "c9649672-353d-42e8-8c25-4d34bbabfbba"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "7fa91401-596c-4f7c-936d-6e41683121d7"
              },
              "paramKey1": {
                "value": "countryId"
              },
              "paramValue1": {
                "parameterReference": "body/address_country"
              },
              "paramSourceType1": {
                "value": "SimpleDataList"
              },
              "paramSource1": {
                "value": "c9649672-353d-42e8-8c25-4d34bbabfbba"
              }
            }
          }
        },
        "address_postcode": {
          "type": "string",
          "maxLength": 12,
          "minLength": 0,
          "description": "The postal code of the address. Character limit: 12.",
          "x-ms-summary": "Postal code"
        },
        "address_do_not_mail": {
          "type": "boolean",
          "description": "Do not send mail to this address?",
          "x-ms-summary": "Do not send mail?",
          "x-ms-visibility": "advanced"
        },
        "address_do_not_mail_reason": {
          "type": "string",
          "description": "The reason for not sending mail to this address.",
          "x-ms-summary": "Do not mail reason",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "DONOTMAILREASONCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "DONOTMAILREASONCODE"
              }
            }
          }
        },
        "dpc": {
          "type": "string",
          "maxLength": 8,
          "minLength": 0,
          "description": "The address DPC.  Character limit: 8.",
          "x-ms-summary": "DPC",
          "x-ms-visibility": "advanced"
        },
        "cart": {
          "type": "string",
          "maxLength": 10,
          "minLength": 0,
          "description": "The address CART.  Character limit: 10.",
          "x-ms-summary": "CART",
          "x-ms-visibility": "advanced"
        },
        "lot": {
          "type": "string",
          "maxLength": 5,
          "minLength": 0,
          "description": "The address LOT.  Character limit: 5.",
          "x-ms-summary": "LOT",
          "x-ms-visibility": "advanced"
        },
        "county": {
          "type": "string",
          "description": "The address county code.",
          "x-ms-summary": "County",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "COUNTYCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "COUNTYCODE"
              }
            }
          }
        },
        "congressional_district": {
          "type": "string",
          "description": "The congressional district code.",
          "x-ms-summary": "Congressional district",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "CONGRESSIONALDISTRICTCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "CONGRESSIONALDISTRICTCODE"
              }
            }
          }
        },
        "phone_type": {
          "type": "string",
          "description": "The phone type.",
          "x-ms-summary": "Phone type",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "PHONETYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "PHONETYPECODE"
              }
            }
          }
        },
        "phone_number": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The phone number. Character limit: 100.",
          "x-ms-summary": "Phone number",
          "x-ms-visibility": "advanced"
        },
        "email_address_type": {
          "type": "string",
          "description": "The email type.",
          "x-ms-summary": "Email type",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "EMAILADDRESSTYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "EMAILADDRESSTYPECODE"
              }
            }
          }
        },
        "email_address": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The email address. Character limit: 100.",
          "x-ms-summary": "Email address",
          "x-ms-visibility": "advanced"
        },
        "web_address": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The website. Character limit: 100",
          "x-ms-summary": "Web address",
          "x-ms-visibility": "advanced"
        },
        "is_primary": {
          "type": "boolean",
          "description": "Is this a primary organization?",
          "x-ms-summary": "Is primary organization?",
          "x-ms-visibility": "advanced"
        },
        "info_source": {
          "type": "string",
          "description": "The information source.",
          "x-ms-summary": "Information source",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "INFOSOURCECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "INFOSOURCECODE"
              }
            }
          }
        },
        "picture": {
          "type": "string",
          "description": "The constituent's profile picture.",
          "x-ms-summary": "Profile picture",
          "x-ms-visibility": "advanced"
        },
        "picture_thumbnail": {
          "type": "string",
          "description": "The constituent's profile picture thumbnail.",
          "x-ms-summary": "Profile thumbnail",
          "x-ms-visibility": "advanced"
        }
      }
    },

    "Conmg.OrganizationConstituent": {
      "type": "object",
      "description": "Organization constituent",
      "properties": {
        "organization_name": {
          "type": "string",
          "description": "The organization name.",
          "x-ms-summary": "Name"
        },
        "industry": {
          "type": "string",
          "description": "The industry.",
          "x-ms-summary": "Industry"
        },
        "parent_corp_id": {
          "type": "string",
          "description": "The system record ID of the parent corporation.",
          "x-ms-summary": "Parent corporation"
        },
        "num_employees": {
          "type": "integer",
          "format": "int32",
          "description": "The number of employees.",
          "x-ms-summary": "Number of employees"
        },
        "num_subsidiaries": {
          "type": "integer",
          "format": "int32",
          "description": "The number of subsidiary organizations.",
          "x-ms-summary": "Number of subsidiaries"
        },
        "web_address": {
          "type": "string",
          "description": "The organization website.",
          "x-ms-summary": "Website"
        },
        "is_primary": {
          "type": "boolean",
          "description": "Is the constituent a primary organization?",
          "x-ms-summary": "Is a primary organization?"
        },
        "picture": {
          "type": "string",
          "description": "The organization's profile picture.",
          "x-ms-summary": "Profile picture"
        },
        "picture_thumbnail": {
          "type": "string",
          "description": "The organization's profile picture thumbnail.",
          "x-ms-summary": "Profile picture thumbnail"
        },
        "primary_address_id": {
          "type": "string",
          "description": "The system record ID of the primary address.",
          "x-ms-summary": "Primary address ID"
        },
        "address_type": {
          "type": "string",
          "description": "The primary address type.",
          "x-ms-summary": "Primary address type"
        },
        "address_country": {
          "type": "string",
          "description": "The primary address country.",
          "x-ms-summary": "Primary address country"
        },
        "address_block": {
          "type": "string",
          "description": "The primary address block.",
          "x-ms-summary": "Primary address block"
        },
        "address_city": {
          "type": "string",
          "description": "The primary address city.",
          "x-ms-summary": "Primary address city"
        },
        "address_state": {
          "type": "string",
          "description": "The primary address state.",
          "x-ms-summary": "Primary address state"
        },
        "address_postcode": {
          "type": "string",
          "description": "The primary address postal code.",
          "x-ms-summary": "Primary address postal code"
        },
        "address_do_not_mail": {
          "type": "boolean",
          "description": "Do not contact the constituent at this address?",
          "x-ms-summary": "Do not mail?"
        },
        "address_do_not_mail_reason": {
          "type": "string",
          "description": "The reason for not contacting the constituent at this address.",
          "x-ms-summary": "Do not mail reason"
        },
        "primary_phone_id": {
          "type": "string",
          "description": "The system record ID of the primary phone number.",
          "x-ms-summary": "Primary phone ID"
        },
        "phone_type": {
          "type": "string",
          "description": "The primary phone type.",
          "x-ms-summary": "Primary phone type"
        },
        "phone_number": {
          "type": "string",
          "description": "The primary phone number.",
          "x-ms-summary": "Primary phone number"
        },
        "primary_email_address_id": {
          "type": "string",
          "description": "The system record ID of the primary email address.",
          "x-ms-summary": "Primary email address ID"
        },
        "email_address_type": {
          "type": "string",
          "description": "The primary email address type.",
          "x-ms-summary": "Primary email address type"
        },
        "email_address": {
          "type": "string",
          "description": "The primary email address.",
          "x-ms-summary": "Primary email address"
        }
      }
    },
    "Conmg.Phone": {
      "type": "object",
      "description": "Phone",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the phone.",
          "x-ms-summary": "ID"
        },
        "type": {
          "type": "string",
          "description": "The phone type.",
          "x-ms-summary": "Type"
        },
        "country": {
          "type": "string",
          "description": "The phone country.",
          "x-ms-summary": "Country"
        },
        "phone_number": {
          "type": "string",
          "description": "The phone number.",
          "x-ms-summary": "Number"
        },
        "primary": {
          "type": "boolean",
          "description": "Is this the constituent's primary phone?",
          "x-ms-summary": "Primary?"
        },
        "donotcall": {
          "type": "boolean",
          "description": "Do not contact the constituent at this number?",
          "x-ms-summary": "Do not call?"
        },
        "info_source": {
          "type": "string",
          "description": "The information source.",
          "x-ms-summary": "Info source"
        },
        "info_source_comments": {
          "type": "string",
          "description": "The information source comments.",
          "x-ms-summary": "Info source comments"
        },
        "start_date": {
          "type": "string",
          "format": "date-time",
          "description": "The phone call start date.",
          "x-ms-summary": "Start date"
        },
        "end_date": {
          "type": "string",
          "format": "date-time",
          "description": "The phone call end date.",
          "x-ms-summary": "End date"
        },
        "start_time": {
          "type": "object",
          "description": "The call after time.",
          "x-ms-summary": "Call after",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        },
        "end_time": {
          "type": "object",
          "description": "The call before time.",
          "x-ms-summary": "Call before",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        }
      }
    },
    "Conmg.PhoneCollection": {
      "type": "object",
      "description": "Phones",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/Conmg.Phone"
          }
        }
      }
    },
    "Conmg.SolicitCode": {
      "type": "object",
      "description": "Solicit code",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the solicit code.",
          "x-ms-summary": "ID"
        },
        "description": {
          "type": "string",
          "description": "The solicit code.",
          "x-ms-summary": "Solicit code"
        },
        "start_date": {
          "type": "string",
          "format": "date-time",
          "description": "The solicit code start date.",
          "x-ms-summary": "Start date"
        },
        "end_date": {
          "type": "string",
          "format": "date-time",
          "description": "The solicit code end date.",
          "x-ms-summary": "End date"
        },
        "comments": {
          "type": "string",
          "description": "The solicit code comments.",
          "x-ms-summary": "Comments"
        },
        "expired": {
          "type": "boolean",
          "description": "Is the solicit code expired?",
          "x-ms-summary": "Expired?"
        }        
      }
    },
    "Conmg.SolicitCodeCollection": {
      "type": "object",
      "description": "Solicit codes",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/Conmg.SolicitCode"
          }
        }
      }
    },
    "Conmg.Tribute": {
      "type": "object",
      "description": "Tribute",
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the tribute.",
          "x-ms-summary": "ID"
        },
        "tribute_type": {
          "type": "string",
          "description": "The tribute type.",
          "x-ms-summary": "Tribute type"
        },
        "tribute_text": {
          "type": "string",
          "description": "The tribute text.",
          "x-ms-summary": "Tribute text"
        },
        "tributee": {
          "type": "boolean",
          "description": "Is the constituent the tributee?",
          "x-ms-summary": "Is tributee?"
        },
        "acknowledgee": {
          "type": "boolean",
          "description": "Is the constituent an acknowledgee?",
          "x-ms-summary": "Is acknowledgee?"
        },
        "active": {
          "type": "boolean",
          "description": "Is the tribute active?",
          "x-ms-summary": "Active?"
        },
        "date_created": {
          "type": "string",
          "format": "date-time",
          "description": "The date the tribute was created.",
          "x-ms-summary": "Date created"
        }
      }
    },
    "Conmg.TributeCollection": {
      "type": "object",
      "description": "Tributes",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of items available for retrieval into the collection after applying any request parameters. The limit and offset parameters do not affect the count, but to facilitate paging, they may affect the number of items in the value result set.",
          "x-ms-summary": "Count"
        },
        "value": {
          "type": "array",
          "description": "The set of items included in the response. This may be a subset of the items in the collection.",
          "items": {
            "$ref": "#/definitions/Conmg.Tribute"
          }
        }
      }
    },

    "Conmg.UpdateConstituentAddress": {
      "type": "object",
      "description": "Addresses store information about constituent residences and other addresses along with information about where or whether to send mail.",
      "properties": {
        "country": {
          "type": "string",
          "description": "The address country.",
          "x-ms-summary": "Country",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "c9649672-353d-42e8-8c25-4d34bbabfbba"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "c9649672-353d-42e8-8c25-4d34bbabfbba"
              }
            }
          }
        },
        "address_type": {
          "type": "string",
          "description": "The address type.",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "ADDRESSTYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "ADDRESSTYPECODE"
              }
            }
          }
        },
        "address_block": {
          "type": "string",
          "maxLength": 150,
          "minLength": 0,
          "description": "The address block. Character limit: 150.",
          "x-ms-summary": "Address"
        },
        "city": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The address city. Character limit: 50.",
          "x-ms-summary": "City"
        },
        "state": {
          "type": "string",
          "description": "The address state.",
          "x-ms-summary": "State",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "7fa91401-596c-4f7c-936d-6e41683121d7",
              "paramKey1": "countryid",
              "paramValue1": {
                "parameter": "country"
              },
              "paramSourceType1": "SimpleDataList",
              "paramSource1": "c9649672-353d-42e8-8c25-4d34bbabfbba"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "7fa91401-596c-4f7c-936d-6e41683121d7"
              },
              "paramKey1": {
                "value": "countryId"
              },
              "paramValue1": {
                "parameterReference": "body/country"
              },
              "paramSourceType1": {
                "value": "SimpleDataList"
              },
              "paramSource1": {
                "value": "c9649672-353d-42e8-8c25-4d34bbabfbba"
              }
            }
          }
        },
        "postcode": {
          "type": "string",
          "maxLength": 12,
          "minLength": 0,
          "description": "The address potal code. Character limit: 12.",
          "x-ms-summary": "Postal code"
        },
        "primary": {
          "type": "boolean",
          "description": "Is this the constituent's primary address?",
          "x-ms-summary": "Primary?"
        },
        "do_not_mail": {
          "type": "boolean",
          "description": "Do not contact the constituent at this address?",
          "x-ms-summary": "Do not mail?"
        },
        "do_not_mail_reason": {
          "type": "string",
          "description": "The reason for not contacting the constituent at this address.",
          "x-ms-summary": "Do not mail reason",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "DONOTMAILREASONCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "DONOTMAILREASONCODE"
              }
            }
          }
        },
        "confidential": {
          "type": "boolean",
          "description": "Is this address confidential?",
          "x-ms-summary": "Is confidential?"
        },
        "start_date": {
          "type": "object",
          "description": "The seasonal address start date.",
          "x-ms-summary": "Seasonal start",
          "x-ms-visibility": "advanced",
          "properties": {
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day.",
              "x-ms-summary": "day"
            }
          }
        },
        "end_date": {
          "type": "object",
          "description": "The seasonal address end date.",
          "x-ms-summary": "Seasonal end",
          "x-ms-visibility": "advanced",
          "properties": {
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day.",
              "x-ms-summary": "day"
            }
          }
        },
        "historical_start_date": {
          "type": "string",
          "format": "date",
          "description": "The historical start date (ex: '2005-09-18').",
          "x-ms-summary": "Historical start date",
          "x-ms-visibility": "advanced"
        },
        "historical_end_date": {
          "type": "string",
          "format": "date",
          "description": "The historical end date (ex: '2005-09-18').",
          "x-ms-summary": "Historical end date",
          "x-ms-visibility": "advanced"
        },        
        "county": {
          "type": "string",
          "description": "The address county.",
          "x-ms-summary": "County",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "COUNTYCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "COUNTYCODE"
              }
            }
          }
        },
        "region": {
          "type": "string",
          "description": "The address region.",
          "x-ms-summary": "Region",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "REGIONCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "REGIONCODE"
              }
            }
          }
        },
        "dpc": {
          "type": "string",
          "maxLength": 8,
          "minLength": 0,
          "description": "The address delivery point code. Character limit: 8.",
          "x-ms-summary": "DPC",
          "x-ms-visibility": "advanced"
        },
        "cart": {
          "type": "string",
          "maxLength": 10,
          "minLength": 0,
          "description": "The address carrier route. Character limit: 10.",
          "x-ms-summary": "CART",
          "x-ms-visibility": "advanced"
        },
        "lot": {
          "type": "string",
          "maxLength": 5,
          "minLength": 0,
          "description": "The address lot. Character limit: 5.",
          "x-ms-summary": "LOT",
          "x-ms-visibility": "advanced"
        },
        "congressional_district": {
          "type": "string",
          "description": "The address congressional district.",
          "x-ms-summary": "Congressional district",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "CONGRESSIONALDISTRICTCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "CONGRESSIONALDISTRICTCODE"
              }
            }
          }
        },
        "state_house_district": {
          "type": "string",
          "description": "The address state house district.",
          "x-ms-summary": "State house district",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "STATEHOUSEDISTRICTCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "STATEHOUSEDISTRICTCODE"
              }
            }
          }
        },
        "state_senate_district": {
          "type": "string",
          "description": "The address state senate district.",
          "x-ms-summary": "State senate district",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "STATESENATEDISTRICTCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "STATESENATEDISTRICTCODE"
              }
            }
          }
        },
        "local_precinct": {
          "type": "string",
          "description": "The address local precinct.",
          "x-ms-summary": "Local precinct",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "LOCALPRECINCTCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "LOCALPRECINCTCODE"
              }
            }
          }
        },
        "info_source": {
          "type": "string",
          "description": "The information source for the address.",
          "x-ms-summary": "Information source",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "INFOSOURCECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "INFOSOURCECODE"
              }
            }
          }
        },
        "info_source_comments": {
          "type": "string",
          "maxLength": 256,
          "minLength": 0,
          "description": "The information source comments. Character limit: 256.",
          "x-ms-summary": "Info source comments",
          "x-ms-visibility": "advanced"
        },
        "omit_from_validation": {
          "type": "boolean",
          "description": "Omit this address from validation?",
          "x-ms-summary": "Omit from validation?",
          "x-ms-visibility": "advanced"
        },
        "update_contacts": {
          "type": "boolean",
          "description": "Update contacts that use this address?",
          "x-ms-summary": "Update contacts?",
          "x-ms-visibility" : "advanced"
        },
        "update_matching_household_addresses": {
          "type": "boolean",
          "description": "Copy address information to household members?",
          "x-ms-summary": "Copy to household?",
          "x-ms-visibility" : "advanced"
        }        
      }
    },
    "Conmg.UpdateConstituentAlternateLookupID": {
      "type": "object",
      "description": "An object that defines a new constituent alternate lookup ID.",
      "properties": {
        "alternate_lookup_id_type": {
          "type": "string",
          "description": "The alternatle lookup ID type.",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "ALTERNATELOOKUPIDTYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "ALTERNATELOOKUPIDTYPECODE"
              }
            }
          }
        },
        "alternate_lookup_id": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The alternate lookup ID. Character limit: 100.",
          "x-ms-summary": "Alternate lookup ID"
        }
      }
    },
    "Conmg.UpdateConstituentAppeal": {
      "type": "object",
      "description": "An object that describes the constituent appeal to update.",
      "properties": {
        "appeal_id": {
          "type": "string",
          "description": "The system record ID of the appeal.",
          "x-ms-summary": "Appeal ID"
        },
        "mkt_segmentation": {
          "type": "string",
          "description": "The mailing associated with the appeal.",
          "x-ms-summary": "Mailing",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "664c0aa7-9f88-46f6-ba84-7b412e1131b5",
              "paramKey1": "appeal_id",
              "paramValue1": {
                "parameter": "appeal_id"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "664c0aa7-9f88-46f6-ba84-7b412e1131b5"
              },
              "paramKey1": {
                "value": "appeal_id"
              },
              "paramValue1": {
                "parameterReference": "body/appeal_id"
              }
            }
          }
        },
        "date_sent": {
          "type": "string",
          "format": "date",
          "description": "The date sent (ex: '2005-09-18').",
          "x-ms-summary": "Date sent"
        },
        "mkt_package_id": {
          "type": "string",
          "description": "The system record ID of the package.",
          "x-ms-summary": "Package"
        },        
        "source_code": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The source code. Character limit: 50.",
          "x-ms-summary": "Source code"
        },
        "comments": {
          "type": "string",
          "maxLength": 255,
          "minLength": 0,
          "description": "The constituent appeal comments. Character limit: 255.",
          "x-ms-summary": "Comments"
        }
      }
    },
    "Conmg.UpdateConstituentEducation": {
      "type": "object",
      "description": "An object that describes the constituent education to update.",
      "properties": {
        "educational_institution_id": {
          "type": "string",
          "description": "The educational institution.",
          "x-ms-summary": "Educational institution",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "value",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "0e239b5a-8c99-4e1e-9c10-06adce4b6500"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "value",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "0e239b5a-8c99-4e1e-9c10-06adce4b6500"
              }
            }
          }
        },
        "educational_history_status": {
          "type": "string",
          "description": "The status of the education.",
          "x-ms-summary": "Status",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "086c5bfb-1a80-46cf-a2f5-05ef51120891"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "086c5bfb-1a80-46cf-a2f5-05ef51120891"
              }
            }
          }
        },
        "primary_record": {
          "type": "boolean",
          "description": "Is this the constituent's primary education?",
          "x-ms-summary": "Primary?"
        },
        "educational_program": {
          "type": "string",
          "description": "The educational program.",
          "x-ms-summary": "Program",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "EDUCATIONALPROGRAMCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "EDUCATIONALPROGRAMCODE"
              }
            }
          }
        },
        "educational_degree": {
          "type": "string",
          "description": "The educational degree.",
          "x-ms-summary": "Degree",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "EDUCATIONALDEGREECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "EDUCATIONALDEGREECODE"
              }
            }
          }
        },
        "educational_award": {
          "type": "string",
          "description": "The honor awarded.",
          "x-ms-summary": "Honor awarded",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "EDUCATIONALAWARDCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "EDUCATIONALAWARDCODE"
              }
            }
          }
        },
        "educational_source": {
          "type": "string",
          "description": "The information source.",
          "x-ms-summary": "Source",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "EDUCATIONALSOURCECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "EDUCATIONALSOURCECODE"
              }
            }
          }
        },
        "educational_source_date": {
          "type": "object",
          "description": "The information source date.",
          "x-ms-summary": "Source date",
          "properties": {
            "year": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            },
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            }
          }
        },
        "comment": {
          "type": "string",
          "maxLength": 500,
          "minLength": 0,
          "description": "The education comments. Character limit: 500.",
          "x-ms-summary": "Comments"
        },
        "date_graduated": {
          "type": "object",
          "description": "The date graduated.",
          "x-ms-summary": "Date graduated",
          "properties": {
            "year": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            },
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            }
          }
        },
        "class_year": {
          "type": "integer",
          "format": "int32",
          "description": "The class of.",
          "x-ms-summary": "Class of"
        },
        "preferred_class_year": {
          "type": "integer",
          "format": "int32",
          "description": "The preferred class of.",
          "x-ms-summary": "Preferred class of"
        },
        "affiliated": {
          "type": "boolean",
          "description": "Is the educational institution affiliated with the organization?",
          "x-ms-summary": "Affiliated?",
          "x-ms-visibility": "advanced"
        },
        "start_date": {
          "type": "object",
          "description": "The education from date.",
          "x-ms-summary": "From",
          "x-ms-visibility": "advanced",
          "properties": {
            "year": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            },
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            }
          }
        },
        "date_left": {
          "type": "object",
          "description": "The education to date.",
          "x-ms-summary": "To",
          "x-ms-visibility": "advanced",
          "properties": {
            "year": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            },
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            }
          }
        },
        "educational_history_reason": {
          "type": "string",
          "description": "The educational history reason (only applicable for 'Unknown' education status).",
          "x-ms-summary": "Reason",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "EDUCATIONALHISTORYREASONCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "EDUCATIONALHISTORYREASONCODE"
              }
            }
          }
        },
        "educational_history_level": {
          "type": "string",
          "description": "The educational history level (only applicable for 'Currently attendeing' education status).",
          "x-ms-summary": "Level",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "EDUCATIONALHISTORYLEVELCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "EDUCATIONALHISTORYLEVELCODE"
              }
            }
          }
        }
      }
    },
    "Conmg.UpdateConstituentEmailAddress": {
      "type": "object",
      "description": "Email addresses store information about constituent email accounts and where to send email correspondences for individuals and organizations.",
      "properties": {
        "email_address_type": {
          "type": "string",
          "description": "The email address type.",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "EMAILADDRESSTYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "EMAILADDRESSTYPECODE"
              }
            }
          }
        },        
        "email_address": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The email address. Character limit: 100.",
          "x-ms-summary": "Email address"
        },        
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "The email address start date (ex: '2005-09-18').",
          "x-ms-summary": "Start date"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "The email address end date (ex: '2005-09-18').",
          "x-ms-summary": "End date"
        },        
        "primary": {
          "type": "boolean",
          "description": "Is this the constituent's primary email address?",
          "x-ms-summary": "Primary?"
        },
        "do_not_email": {
          "type": "boolean",
          "description": "Do not contact the constituent at this email address?",
          "x-ms-summary": "Do not email?"
        },
        "info_source": {
          "type": "string",
          "description": "The information source for the email address.",
          "x-ms-summary": "Information source",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "INFOSOURCECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "INFOSOURCECODE"
              }
            }
          }
        },
        "info_source_comments": {
          "type": "string",
          "maxLength": 256,
          "minLength": 0,
          "description": "The information source comments. Character limit: 256.",
          "x-ms-summary": "Info source comments",
          "x-ms-visibility": "advanced"
        },
        "update_matching_spouse_email_address": {
          "type": "boolean",
          "description": "Copy email address information to the spouse (only applicable for individual constituents)?",
          "x-ms-summary": "Copy to spouse?",
          "x-ms-visibility" : "advanced"
        },
        "update_matching_household_email_address": {
          "type": "boolean",
          "description": "Copy email address information to household members (only applicable for individual constituents)?",
          "x-ms-summary": "Copy to household?",
          "x-ms-visibility" : "advanced"
        }        
      }
    },
    "Conmg.UpdateConstituentEmploymentHistory": {
      "type": "object",
      "description": "An object that describes the constituent employment history to update.",
      "properties": {
        "job_title": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The job title. Character limit: 100.",
          "x-ms-summary": "Job title"
        },
        "career_level": {
          "type": "string",
          "description": "The career level.",
          "x-ms-summary": "Career level",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "CAREERLEVELCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "CAREERLEVELCODE"
              }
            }
          }
        },
        "job_category": {
          "type": "string",
          "description": "The job category.",
          "x-ms-summary": "Category",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "JOBCATEGORYCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "JOBCATEGORYCODE"
              }
            }
          }
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "The employment start date (ex: '2005-09-18').",
          "x-ms-summary": "Start date"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "The employment end date (ex: '2005-09-18').",
          "x-ms-summary": "End date"
        },
        "job_department": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The job department. Character limit: 100.",
          "x-ms-summary": "Department"
        },
        "job_division": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The job division. Character limit: 100.",
          "x-ms-summary": "Division"
        },
        "job_schedule": {
          "type": "string",
          "description": "The career level.",
          "x-ms-summary": "Career level",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "JOBSCHEDULECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "JOBSCHEDULECODE"
              }
            }
          }
        },
        "job_responsibility": {
          "type": "string",
          "maxLength": 250,
          "minLength": 0,
          "description": "The job responsibilities. Character limit: 250.",
          "x-ms-summary": "Responsibilities"
        },
        "private_record": {
          "type": "boolean",
          "description": "Is the employment history private?",
          "x-ms-summary": "Is private?"
        }
      }
    },
    "Conmg.UpdateConstituentInteractionParticipant": {
      "type": "object",
      "description": "An object representing a constituent interaction participant.",
      "required": [
        "constituent_id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The system record ID of the interaction participant.",
          "x-ms-summary": "ID"
        },
        "constituent_id": {
          "type": "string",
          "description": "The system record ID of the participating constituent.",
          "x-ms-summary": "constituent ID"
        }
      }
    },
    "Conmg.UpdateConstituentInteraction": {
      "type": "object",
      "description": "An object that describes the constituent interaction to update.",
      "properties": {
        "objective": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The interaction summary. Character limit: 100.",
          "x-ms-summary": "Summary"
        },
        "status": {
          "type": "string",
          "description": "The interaction status.",
          "x-ms-summary": "Status",
          "enum": [
            "Pending",
            "Completed",
            "Canceled",
            "Declined"
          ]
        },
        "interaction_category": {
          "type": "string",
          "description": "The interaction category.",
          "x-ms-summary": "Category",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "cbba7545-b66f-44ac-aa24-d9c2f8cbc4ec"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "cbba7545-b66f-44ac-aa24-d9c2f8cbc4ec"
              }
            }
          }
        },
        "interaction_subcategory": {
          "type": "string",
          "description": "The interaction subcategory.",
          "x-ms-summary": "Subcategory",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "0eacc39b-07d1-4641-8774-e319559535a7",
              "paramKey1": "interactioncategoryid",
              "paramValue1": {
                "parameter": "interaction_category"
              },
              "paramSourceType1": "SimpleDataList",
              "paramSource1": "cbba7545-b66f-44ac-aa24-d9c2f8cbc4ec"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "0eacc39b-07d1-4641-8774-e319559535a7"
              },
              "paramKey1": {
                "value": "interactioncategoryid"
              },
              "paramValue1": {
                "parameterReference": "body/interaction_category"
              },
              "paramSourceType1": {
                "value": "SimpleDataList"
              },
              "paramSource1": {
                "value": "cbba7545-b66f-44ac-aa24-d9c2f8cbc4ec"
              }
            }
          }
        },
        "expected_date": {
          "type": "string",
          "format": "date",
          "description": "The expected interaction date (ex: '2005-09-18').",
          "x-ms-summary": "Expected date"
        },
        "expected_start_time": {
          "type": "object",
          "description": "The expected interaction start time.",
          "x-ms-summary": "Expected start",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        },
        "expected_end_time": {
          "type": "object",
          "description": "The expected interaction end time.",
          "x-ms-summary": "Expected end",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        },
        "actual_date": {
          "type": "string",
          "format": "date",
          "description": "The interaction actual date (ex: '2005-09-18').",
          "x-ms-summary": "Actual date"
        },
        "actual_start_time": {
          "type": "object",
          "description": "The actual interaction start time.",
          "x-ms-summary": "Actual start",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        },
        "actual_end_time": {
          "type": "object",
          "description": "The actual interaction end time.",
          "x-ms-summary": "Actual end",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        },
        "time_zone_entry": {
          "type": "string",
          "description": "The interaction time zone.",
          "x-ms-summary": "Time zone",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "7fba76fa-b1ea-4c01-b841-edb18f03fe8c"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "7fba76fa-b1ea-4c01-b841-edb18f03fe8c"
              }
            }
          }
        },
        "all_day_event": {
          "type": "boolean",
          "description": "Is the interaction an all-day event?",
          "x-ms-summary": "All-day event?"
        },
        "fundraiser_id": {
          "type": "string",
          "description": "The system record ID of the fundraiser that owns the interaction.",
          "x-ms-summary": "Owner ID"
        },
        "interaction_type": {
          "type": "string",
          "description": "The interaction contact method.",
          "x-ms-summary": "Contact method",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "INTERACTIONTYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "INTERACTIONTYPECODE"
              }
            }
          }
        },
        "event_id": {
          "type": "string",
          "description": "The system record ID of the interaction event.",
          "x-ms-summary": "Event ID"
        },
        "comment": {
          "type": "string",
          "description": "The interaction comments.",
          "x-ms-summary": "Comments"
        },
        "participants": {
          "type": "array",
          "description": "The interaction participants.",
          "x-ms-summary": "Participants",
          "x-ms-visibility": "advanced",
          "items": {
              "$ref": "#/definitions/Conmg.UpdateConstituentInteractionParticipant"
          }
        }
      }
    },
    "Conmg.UpdateConstituentNote": {
      "type": "object",
      "description": "Notes track helpful or important details about constituents, gifts, or actions, such as specific interests and special instructions for donations. Notes connect you with donors at a more personal level as you cultivate relationships and track lessons learned for more effective fundraising.",
      "properties": {
        "note_type": {
          "type": "string",
          "description": "The note type.",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "CONSTITUENTNOTETYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "CONSTITUENTNOTETYPECODE"
              }
            }
          }
        },
        "date_entered": {
          "type": "string",
          "format": "date",
          "description": "The note date (ex: '2005-09-18').",
          "x-ms-summary": "Date"
        },
        "title": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The note title. Character limit: 50.",
          "x-ms-summary": "Title"
        },
        "author_id": {
          "type": "string",
          "description": "The system record ID of the author of the note.",
          "x-ms-summary": "Author ID"
        },
        "text_note": {
          "type": "string",
          "description": "The plain text of the note.",
          "x-ms-summary": "Note"
        },
        "html_note": {
          "type": "string",
          "description": "The html text of the note.",
          "x-ms-summary": "HTML"
        }
      }
    },
    "Conmg.UpdateConstituentPhone": {
      "type": "object",
      "description": "Phones store information about constituent phone numbers and where to call individuals and organizations.",
      "properties": {
        "phone_type": {
          "type": "string",
          "description": "The phone type.",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "PHONETYPECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "PHONETYPECODE"
              }
            }
          }
        },        
        "number": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The phone number. Character limit: 100.",
          "x-ms-summary": "Number"
        },        
        "country": {
          "type": "string",
          "description": "The phone country.",
          "x-ms-summary": "Country",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "c9649672-353d-42e8-8c25-4d34bbabfbba"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "c9649672-353d-42e8-8c25-4d34bbabfbba"
              }
            }
          }
        },
        "start_time": {
          "type": "object",
          "description": "The call after time.",
          "x-ms-summary": "Call after",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        },
        "end_time": {
          "type": "object",
          "description": "The call before time.",
          "x-ms-summary": "Call before",
          "properties": {
            "hour": {
              "type": "integer",
              "format": "int32",
              "description": "The hour.",
              "x-ms-summary": "hour"
            },
            "minute": {
              "type": "integer",
              "format": "int32",
              "description": "The minute.",
              "x-ms-summary": "minute"
            }
          }
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "The phone start date (ex: '2005-09-18').",
          "x-ms-summary": "Start date"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "The phone end date (ex: '2005-09-18').",
          "x-ms-summary": "End date"
        },        
        "primary": {
          "type": "boolean",
          "description": "Is this the constituent's primary phone?",
          "x-ms-summary": "Primary?"
        },
        "do_not_call": {
          "type": "boolean",
          "description": "Do not contact the constituent at this number?",
          "x-ms-summary": "Do not call?"
        },
        "do_not_call_reason": {
          "type": "string",
          "description": "The reason for not contacting the constituent at this number.",
          "x-ms-summary": "Do not call reason",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "DONOTCALLREASONCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "DONOTCALLREASONCODE"
              }
            }
          }
        },
        "donottext": {
          "type": "boolean",
          "description": "Do not contact the constituent via text message at this number?",
          "x-ms-summary": "Do not text?"
        },
        "confidential": {
          "type": "boolean",
          "description": "Is this phone number confidential?",
          "x-ms-summary": "Is confidential?"
        },
        "seasonal_start_date": {
          "type": "object",
          "description": "The seasonal start date.",
          "x-ms-summary": "Seasonal start",
          "x-ms-visibility": "advanced",
          "properties": {
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day.",
              "x-ms-summary": "day"
            }
          }
        },
        "seasonal_end_date": {
          "type": "object",
          "description": "The seasonal end date.",
          "x-ms-summary": "Seasonal end",
          "x-ms-visibility": "advanced",
          "properties": {
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day.",
              "x-ms-summary": "day"
            }
          }
        },
        "info_source": {
          "type": "string",
          "description": "The information source for the phone number.",
          "x-ms-summary": "Information source",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "INFOSOURCECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "INFOSOURCECODE"
              }
            }
          }
        },
        "info_source_comments": {
          "type": "string",
          "maxLength": 256,
          "minLength": 0,
          "description": "The information source comments. Character limit: 256.",
          "x-ms-summary": "Info source comments",
          "x-ms-visibility": "advanced"
        },
        "update_matching_spouse_phone": {
          "type": "boolean",
          "description": "Copy phone information to the spouse (only applicable for individual constituents)?",
          "x-ms-summary": "Copy to spouse?",
          "x-ms-visibility" : "advanced"
        },
        "update_matching_household_phone": {
          "type": "boolean",
          "description": "Copy phone information to household members (only applicable for individual constituents)?",
          "x-ms-summary": "Copy to household?",
          "x-ms-visibility" : "advanced"
        }        
      }
    },
    "Conmg.UpdateConstituentSolicitCode": {
      "type": "object",
      "description": "An object that describes the constituent solicit code to update.",
      "properties": {
        "solicit_code": {
          "type": "string",
          "description": "The solicit code.",
          "x-ms-summary": "Solicit code",
          "x-ms-dynamic-values": {
            "operationId": "SimpleListLoad",
            "value-collection": "rows",
            "value-path": "label",
            "value-title": "label",
            "parameters": {
              "simple_list_id": "ea7286bd-d27b-4028-b507-4bdb92580499",
              "paramKey1": "feature_id",
              "paramValue1": "b6a5f4eb-adf7-4fa4-a3e0-8cd96e58d8c2",
              "paramKey2": "feature_type",
              "paramValue2": "1"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "SimpleListLoad",
            "itemsPath": "rows",
            "itemValuePath": "label",
            "itemTitlePath": "label",
            "parameters": {
              "simple_list_id": {
                "value": "ea7286bd-d27b-4028-b507-4bdb92580499"
              },
              "paramKey1": {
                "value": "feature_id"
              },
              "paramValue1": {
                "value": "b6a5f4eb-adf7-4fa4-a3e0-8cd96e58d8c2"
              },
              "paramKey2": {
                "value": "feature_type"
              },
              "paramValue2": {
                "value": "1"
              }
            }
          }
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "description": "The solicit code start date (ex: '2005-09-18').",
          "x-ms-summary": "Start date"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "description": "The solicit code end date (ex: '2005-09-18').",
          "x-ms-summary": "End date"
        },
        "comments": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The solicit code comments. Character limit: 100.",
          "x-ms-summary": "Comments"
        }
      }
    },
    "Conmg.UpdateFundraiserConstituency": {
      "type": "object",
      "description": "An object that describes the fundraiser constituency to update.",
      "properties": {
        "date_from": {
          "type": "string",
          "format": "date",
          "description": "The starting date for the constituency (ex: '2005-09-18').",
          "x-ms-summary": "Date from"
        },
        "date_to": {
          "type": "string",
          "format": "date",
          "description": "The ending date for the constituency (ex: '2005-09-18').",
          "x-ms-summary": "Date to"
        }        
      }
    },
    "Conmg.UpdateIndividual": {
      "type": "object",
      "description": "Constituents are the individuals and organizations who support your organization by contributing time, money, and resources. The constituent entity stores information about donors, prospects, volunteers, general supporters, and more.",
      "properties": {
        "last_name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The constituent's last name. Character limit: 100.",
          "x-ms-summary": "Last name"
        },
        "title": {
          "type": "string",
          "description": "The constituent's primary title.",
          "x-ms-summary": "Title",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "TITLECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "TITLECODE"
              }
            }
          }
        },
        "first_name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The constituent's first name. Character limit: 50.",
          "x-ms-summary": "First name"
        },
        "suffix": {
          "type": "string",
          "description": "The constituent's primary suffix.",
          "x-ms-summary": "Suffix",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "SUFFIXCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "SUFFIXCODE"
              }
            }
          }
        },
        "middle_name": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The constituent's middle name. Character limit: 50.",
          "x-ms-summary": "Middle name",
          "x-ms-visibility": "advanced"
        },
        "title_2": {
          "type": "string",
          "description": "The constituent's secondary title.",
          "x-ms-summary": "Title 2",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "TITLECODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "TITLECODE"
              }
            }
          }
        },
        "suffix_2": {
          "type": "string",
          "description": "The constituent's secondary suffix",
          "x-ms-summary": "Suffix 2",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "SUFFIXCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "SUFFIXCODE"
              }
            }
          }
        },
        "nickname": {
          "type": "string",
          "maxLength": 50,
          "minLength": 0,
          "description": "The constituent's nickname. Character limit: 50.",
          "x-ms-summary": "Nickname",
          "x-ms-visibility": "advanced"
        },
        "maiden_name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The constituent's maiden name. Character limit: 100.",
          "x-ms-summary": "Maiden name",
          "x-ms-visibility": "advanced"
        },
        "marital_status": {
          "type": "string",
          "description": "The marital status.",
          "x-ms-summary": "Marital status",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "MARITALSTATUSCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "MARITALSTATUSCODE"
              }
            }
          }
        },
        "birth_date": {
          "type": "object",
          "description": "The constituent's birth date.",
          "x-ms-summary": "Birthdate",
          "x-ms-visibility": "advanced",
          "properties": {
            "year": {
              "type": "integer",
              "format": "int32",
              "description": "The year in the fuzzy date.",
              "x-ms-summary": "year"
            },
            "month": {
              "type": "integer",
              "format": "int32",
              "description": "The month in the fuzzy date.",
              "x-ms-summary": "month"
            },
            "day": {
              "type": "integer",
              "format": "int32",
              "description": "The day in the fuzzy date.",
              "x-ms-summary": "day"
            }
          }
        },
        "gender_code": {
          "type": "string",
          "description": "The constituent's gender.",
          "x-ms-summary": "Gender",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "GENDERCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "GENDERCODE"
              }
            }
          }
        },
        "web_address": {
          "type": "string",
          "description": "The constituent's website.",
          "x-ms-summary": "Website",
          "x-ms-visibility": "advanced"
        },
        "gives_anonymously": {
          "type": "boolean",
          "description": "Does the constituent give anonymously?",
          "x-ms-summary": "Gives anonymously?"
        },
        "deceased": {
          "type": "boolean",
          "description": "Is the constituent deceased?",
          "x-ms-summary": "Deceased?"
        },
        "picture": {
          "type": "string",
          "description": "The constituent's profile picture.",
          "x-ms-summary": "Profile picture"
        },
        "picture_thumbnail": {
          "type": "string",
          "description": "The constituent's profile picture thumbnail.",
          "x-ms-summary": "Profile thumbnail"
        }
      }
    },
    "Conmg.UpdateOrganization": {
      "type": "object",
      "description": "Constituents are the individuals and organizations who support your organization by contributing time, money, and resources. The constituent entity stores information about donors, prospects, volunteers, general supporters, and more.",
      "properties": {
        "organization_name": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The organization constituent's name. Character limit: 100.",
          "x-ms-summary": "Name"
        },
        "industry": {
          "type": "string",
          "description": "The industry code.",
          "x-ms-summary": "Industry",
          "x-ms-dynamic-values": {
            "operationId": "ListCodeTableEntries",
            "value-collection": "value",
            "value-path": "description",
            "value-title": "description",
            "parameters": {
              "code_table_name": "INDUSTRYCODE"
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListCodeTableEntries",
            "itemsPath": "value",
            "itemValuePath": "description",
            "itemTitlePath": "description",
            "parameters": {
              "code_table_name": {
                "value": "INDUSTRYCODE"
              }
            }
          }
        },
        "num_employees": {
          "type": "integer",
          "format": "int32",
          "description": "The number of employees.",
          "x-ms-summary": "No. of employees",
          "x-ms-visibility": "advanced"
        },
        "num_subsidiaries": {
          "type": "integer",
          "format": "int32",
          "description": "The number of subsidiary organizations.",
          "x-ms-summary": "No. of subsidiary orgs",
          "x-ms-visibility": "advanced"
        },
        "parent_corp_id": {
          "type": "string",
          "description": "The system record ID of the parent corporation.",
          "x-ms-summary": "Parent org"
        },
        "web_address": {
          "type": "string",
          "maxLength": 100,
          "minLength": 0,
          "description": "The website. Character limit: 100",
          "x-ms-summary": "Web address",
          "x-ms-visibility": "advanced"
        },
        "is_primary": {
          "type": "boolean",
          "description": "Is this a primary organization?",
          "x-ms-summary": "Is primary organization?",
          "x-ms-visibility": "advanced"
        },
        "picture": {
          "type": "string",
          "description": "The constituent's profile picture.",
          "x-ms-summary": "Profile picture",
          "x-ms-visibility": "advanced"
        },
        "picture_thumbnail": {
          "type": "string",
          "description": "The constituent's profile picture thumbnail.",
          "x-ms-summary": "Profile thumbnail",
          "x-ms-visibility": "advanced"
        }
      }
    }
  }
}