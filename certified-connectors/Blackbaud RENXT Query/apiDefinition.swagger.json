{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Blackbaud RENXT Query",
    "description": "Blackbaud Raiser's Edge NXT is a comprehensive cloud-based fundraising and donor management software solution built specifically for nonprofits and the entire social good community. Use the Query connector to manage and execute queries.",
    "contact": {
      "name": "Blackbaud Support",
      "url": "https://www.blackbaud.com/support",
      "email": "skyapi@blackbaud.com"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "host": "api.sky.blackbaud.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/query/categories": {
      "get": {
        "operationId": "ListQueryCategories",
        "summary": "List query categories",
        "description": "Lists the query categories.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/product"
          },
          {
            "$ref": "#/parameters/module"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/QueryApi.QueryCategoryCollection"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to view query categories."
          }
        }
      }
    },
    "/query/jobs/{job_id}": {
      "get": {
        "operationId": "GetQueryJobStatus",
        "summary": "Get query job status",
        "description": "Returns information about a background query execution job.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/product"
          },
          {
            "$ref": "#/parameters/module"
          },
          {
            "name": "job_id",
            "in": "path",
            "description": "The system record ID of the query execution job.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Job ID",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "include_read_url",
            "in": "query",
            "description": "Include the URL to the query results file?",
            "type": "string",
            "enum": [
              "Never",
              "OnceRunning",
              "OnceCompleted"
            ],
            "x-ms-enum-values": [
              {
                "value": "Never",
                "displayName": "Never"
              },
              {
                "value": "OnceRunning",
                "displayName": "Once running"
              },
              {
                "value": "OnceCompleted",
                "displayName": "Once completed"
              }
            ],
            "default": "OnceCompleted",
            "x-ms-summary": "Include results URL?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "content_disposition",
            "in": "query",
            "description": "Indicates how the query results will be viewed.",
            "type": "string",
            "enum": [
              "Inline",
              "Attachment"
            ],
            "default": "Attachment",
            "x-ms-summary": "Content disposition",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/QueryApi.QueryExecutionJob"
            }
          },
          "400": {
            "description": "Returned when the specified job ID in the request URL is not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the query execution job."
          },
          "404": {
            "description": "Returned when the specified job is not found."
          }
        }
      }
    },
    "/query/queries": {
      "get": {
        "operationId": "ListQueries",
        "summary": "List queries",
        "description": "Returns a list of queries.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/product"
          },
          {
            "$ref": "#/parameters/module"
          },
          {
            "name": "query_type_id",
            "in": "query",
            "description": "Filter the set of queries to those with a specific query type.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Type",
            "x-ms-dynamic-values": {
              "operationId": "ListQueryTypes",
              "value-collection": "query_types",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-dynamic-list": {
              "operationId": "ListQueryTypes",
              "itemsPath": "query_types",
              "itemValuePath": "id",
              "itemTitlePath": "name"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter the set of queries to those with a specific category.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Category",
            "x-ms-dynamic-values": {
              "operationId": "ListQueryCategories",
              "value-collection": "categories",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-dynamic-list": {
              "operationId": "ListQueryCategories",
              "itemsPath": "categories",
              "itemValuePath": "id",
              "itemTitlePath": "name"
            }
          },
          {
            "name": "query_format",
            "in": "query",
            "description": "Filter the set of queries to those with a specific format.",
            "type": "string",
            "enum": [
              "Dynamic",
              "Static"
            ],
            "x-ms-summary": "Format"
          },
          {
            "name": "search_text",
            "in": "query",
            "description": "The name field search text to filter the results.",
            "type": "string",
            "x-ms-summary": "Search text",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "my_fav_queries_only",
            "in": "query",
            "description": "Include only favorite queries?",
            "type": "boolean",
            "x-ms-summary": "Favorites only?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "my_queries_only",
            "in": "query",
            "description": "Include only queries I created?",
            "type": "boolean",
            "x-ms-summary": "My queries only?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "merged_queries_only",
            "in": "query",
            "description": "Include only merged queries?",
            "type": "boolean",
            "x-ms-summary": "Merged queries only?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "list_queries",
            "in": "query",
            "description": "Exclude Query List queries?",
            "type": "string",
            "enum": [
              "Unset",
              "NoListQueries"
            ],
            "x-ms-enum-values": [
              {
                "value": "Unset",
                "displayName": "Unset"
              },
              {
                "value": "NoListQueries",
                "displayName": "No List Queries"
              }
            ],
            "x-ms-summary": "Exclude list queries?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Sort the results by the specified column.",
            "type": "string",
            "enum": [
              "Name",
              "DateLastRun",
              "DateChanged",
              "ElapsedMs",
              "DateAdded",
              "AddedBy",
              "LastChangedBy",
              "Records"
            ],
            "x-ms-enum-values": [
              {
                "value": "Name",
                "displayName": "Name"
              },
              {
                "value": "DateLastRun",
                "displayName": "Date last run"
              },
              {
                "value": "DateChanged",
                "displayName": "Date changed"
              },
              {
                "value": "ElapsedMs",
                "displayName": "Elapsed ms"
              },
              {
                "value": "DateAdded",
                "displayName": "Date added"
              },
              {
                "value": "AddedBy",
                "displayName": "Added by"
              },
              {
                "value": "LastChangedBy",
                "displayName": "Last changed by"
              },
              {
                "value": "Records",
                "displayName": "Records"
              }
            ],
            "x-ms-summary": "Sort column",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "sort_descending",
            "in": "query",
            "description": "Sort the results in descending order?",
            "type": "boolean",
            "x-ms-summary": "Sort descending?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "date_added",
            "in": "query",
            "description": "Filter the results to queries created on or after the specified date (ex: '2020-09-18T04:13:56Z').",
            "type": "string",
            "format": "date-time",
            "x-ms-summary": "Added on or after",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "added_by",
            "in": "query",
            "description": "Filter the results to queries added by the specified user ID.",
            "type": "string",
            "x-ms-summary": "Added by ID",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Represents the number of records to return. The default is 50. The maximum is 200.",
            "type": "integer",
            "format": "int32",
            "maximum": 200,
            "x-ms-summary": "Limit",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Represents the number of records to skip. For use with pagination.",
            "type": "integer",
            "format": "int32",
            "x-ms-summary": "Offset",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/QueryApi.QuerySummaryCollection"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to view the queries."
          }
        }
      }
    },
    "/query/queries/execute": {
      "post": {
        "operationId": "StartAdHocQueryExecutionJob",
        "summary": "Start an ad hoc query job",
        "description": "Starts a background job to execute the specified ad hoc query definition.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/product"
          },
          {
            "$ref": "#/parameters/module"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/QueryApi.ExecuteAdHocQueryRequest"
            },
            "description": "An object that represents the query to execute.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully starts the query execution job.",
            "schema": {
              "$ref": "#/definitions/QueryApi.ExecuteQueryResponse"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to execute the query."
          }
        }
      }
    },
    "/query/queries/executebyid": {
      "post": {
        "operationId": "StartQueryExecutionJob",
        "summary": "Start a query job",
        "description": "Starts a background job to execute the specified query.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/product"
          },
          {
            "$ref": "#/parameters/module"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/QueryApi.ExecuteQueryRequest"
            },
            "description": "An object that represents the query to execute.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully starts the query execution job.",
            "schema": {
              "$ref": "#/definitions/QueryApi.ExecuteQueryResponse"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to execute the query."
          },
          "404": {
            "description": "Returned when the specified query is not found."
          }
        }
      }
    },
    "/query/queries/refreshstaticquery": {
      "post": {
        "operationId": "StartRefreshStaticQueryExecutionJob",
        "summary": "Start a refresh static query job",
        "description": "Starts a background job to refresh the saved keys for the specified static query.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/product"
          },
          {
            "$ref": "#/parameters/module"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/QueryApi.RefreshStaticQueryRequest"
            },
            "description": "An object that represents the static query to refresh.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation successfully starts the refresh static query execution job.",
            "schema": {
              "$ref": "#/definitions/QueryApi.ExecuteQueryResponse"
            }
          },
          "400": {
            "description": "Returned when the specified request parameters are not in the appropriate format."
          },
          "403": {
            "description": "Returned when the user does not have permission to execute the query."
          },
          "404": {
            "description": "Returned when the specified query is not found."
          }
        }
      }
    },
    "/query/querytypes": {
      "get": {
        "operationId": "ListQueryTypes",
        "summary": "List query types",
        "description": "Lists the query types.",
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/product"
          },
          {
            "$ref": "#/parameters/module"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation succeeds.",
            "schema": {
              "$ref": "#/definitions/QueryApi.QueryTypeCollection"
            }
          },
          "403": {
            "description": "Returned when the user does not have permission to view query types."
          }
        }
      }
    }
  },
  "definitions": {
    "QueryApi.ExecuteAdHocQueryRequest": {
      "type": "object",
      "description": "Describes the request to execute an ad hoc query.",
      "required": [
        "query",
        "ux_mode"
      ],
      "properties": {
        "query": {
          "type": "object",
          "description": "The JSON representation of the query definition.",
          "x-ms-summary": "Query definition"
        },
        "output_format": {
          "type": "string",
          "description": "Indicates the output format for the query results file.",
          "default": "Csv",
          "x-ms-summary": "Output format",
          "enum": [
            "Csv",
            "Json",
            "Jsonl"
          ]
        },
        "formatting_mode": {
          "type": "string",
          "description": "Indicates whether and how formatting should be applied to the query results.",
          "x-ms-summary": "Formatting mode",
          "enum": [
            "None",
            "UI",
            "Export"
          ],
          "default": "None",
          "x-ms-visibility": "advanced"
        },
        "results_file_name": {
          "type": "string",
          "description": "The name of the file to be downloaded, without the file extension.",
          "x-ms-summary": "Filename",
          "x-ms-visibility": "advanced"
        },
        "ux_mode": {
          "type": "string",
          "description": "The user experience behavior mode.  Synchronous mode expects that the caller will poll the job status until completion, at least every 10 seconds.  Asynchronous mode expects the consumer to poll the job status until completion, but has no timing requirement.",
          "x-ms-summary": "UX mode",
          "enum": [
            "Synchronous",
            "Asynchronous"
          ],
          "default": "Asynchronous",
          "x-ms-visibility": "internal"
        }
      }
    },
    "QueryApi.ExecuteQueryRequest": {
      "type": "object",
      "description": "Describes the request to execute a query.",
      "required": [
        "v_query_type_id",
        "id",
        "ux_mode"
      ],
      "properties": {
        "v_query_type_id": {
          "type": "integer",
          "format": "int32",
          "description": "Filter the set of queries to those with a specific query type.",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "ListQueryTypes",
            "value-collection": "query_types",
            "value-path": "id",
            "value-title": "name"
          },
          "x-ms-dynamic-list": {
            "operationId": "ListQueryTypes",
            "itemsPath": "query_types",
            "itemValuePath": "id",
            "itemTitlePath": "name"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The query to execute.",
          "x-ms-summary": "Query",
          "x-ms-dynamic-values": {
            "operationId": "ListQueries",
            "value-collection": "queries",
            "value-path": "id",
            "value-title": "name",
            "parameters": {
              "query_type_id": {
                "parameter": "v_query_type_id"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListQueries",
            "itemsPath": "queries",
            "itemValuePath": "id",
            "itemTitlePath": "name",
            "parameters": {
              "query_type_id": {
                "parameterReference": "body/v_query_type_id"
              }
            }
          }
        },
        "output_format": {
          "type": "string",
          "description": "Indicates the output format for the query results file.",
          "default": "Csv",
          "x-ms-summary": "Output format",
          "enum": [
            "Csv",
            "Json",
            "Jsonl"
          ]
        },
        "formatting_mode": {
          "type": "string",
          "description": "Indicates whether and how formatting should be applied to the query results.",
          "x-ms-summary": "Formatting mode",
          "enum": [
            "None",
            "UI",
            "Export"
          ],
          "default": "None",
          "x-ms-visibility": "advanced"
        },
        "sql_generation_mode": {
          "type": "string",
          "description": "Indicates how query select fields should be handled.  When 'Query' is selected, the output will include the select fields defined for the query plus QRECID.  When 'Export' is selected, the output will include the select fields defined for the query ONLY.  When 'Report' is selected, the output will ONLY include QRECID.",
          "x-ms-summary": "SQL generation mode",
          "enum": [
            "Query",
            "Export",
            "Report"
          ],
          "default": "Query",
          "x-ms-visibility": "advanced"
        },
        "use_static_query_id_set": {
          "type": "boolean",
          "description": "Use the static query as the source of records (if not, the query will be executed dynamically)?",
          "x-ms-summary": "Use static query?",
          "x-ms-visibility": "advanced"
        },
        "results_file_name": {
          "type": "string",
          "description": "The name of the file to be downloaded, without the file extension.",
          "x-ms-summary": "Filename",
          "x-ms-visibility": "advanced"
        },
        "ux_mode": {
          "type": "string",
          "description": "The user experience behavior mode.  Synchronous mode expects that the caller will poll the job status until completion, at least every 10 seconds.  Asynchronous mode expects the consumer to poll the job status until completion, but has no timing requirement.",
          "x-ms-summary": "UX mode",
          "enum": [
            "Synchronous",
            "Asynchronous"
          ],
          "default": "Asynchronous",
          "x-ms-visibility": "internal"
        }
      }
    },
    "QueryApi.ExecuteQueryResponse": {
      "type": "object",
      "description": "Started query job",
      "properties": {
        "id": {
          "type": "string",
          "description": "The query job identifier.",
          "x-ms-summary": "Job ID"
        },
        "status": {
          "type": "string",
          "description": "The resulting query job status. 'Pending' - the job has been queued but has not yet started running. 'Running' - the job is running. 'Completed' - the job completed successfully. 'Failed' - the job failed. 'Cancelling' - job cancellation has been requested (but may still complete successfully). 'Cancelled' - the job was canceled. 'Throttled' - the job has been throttled and will run when space is available.",
          "x-ms-summary": "Status",
          "enum": [
            "Pending",
            "Running",
            "Completed",
            "Failed",
            "Cancelling",
            "Cancelled",
            "Throttled"
          ]
        },
        "message": {
          "type": "string",
          "description": "A message associated with the response.",
          "x-ms-summary": "Message"
        }
      }
    },
    "QueryApi.QueryCategory": {
      "type": "object",
      "description": "Query category",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The system record ID of the query category.",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The display name of the query category.",
          "x-ms-summary": "Name"
        },
        "sequence": {
          "type": "integer",
          "format": "int32",
          "description": "The category sequence.",
          "x-ms-summary": "Sequence"
        }
      }
    },
    "QueryApi.QueryCategoryCollection": {
      "type": "object",
      "description": "Query categories",
      "properties": {
        "categories": {
          "type": "array",
          "description": "The set of items included in the response.",
          "items": {
            "$ref": "#/definitions/QueryApi.QueryCategory"
          }
        }
      }
    },
    "QueryApi.QueryExecutionJob": {
      "type": "object",
      "description": "Query execution job",
      "properties": {
        "id": {
          "type": "string",
          "description": "The query job identifier.",
          "x-ms-summary": "Job ID"
        },
        "status": {
          "type": "string",
          "description": "The resulting query job status. 'Pending' - the job has been queued but has not yet started running. 'Running' - the job is running. 'Completed' - the job completed successfully. 'Failed' - the job failed. 'Cancelling' - job cancellation has been requested (but may still complete successfully). 'Cancelled' - the job was canceled. 'Throttled' - the job has been throttled and will run when space is available.",
          "x-ms-summary": "Status",
          "enum": [
            "Pending",
            "Running",
            "Completed",
            "Failed",
            "Cancelling",
            "Cancelled",
            "Throttled"
          ]
        },
        "row_count": {
          "type": "integer",
          "format": "int32",
          "description": "The number of records in the query.",
          "x-ms-summary": "Row count"
        },
        "sas_uri": {
          "type": "string",
          "description": "The URI for accessing the query results. This URI should be treated as a secure credential to access the query results - the value is considered sensitive, and the URI will expire after 15 minutes.",
          "x-ms-summary": "Query results URI"
        }
      }
    },
    "QueryApi.QuerySummary": {
      "type": "object",
      "description": "Query",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The system record ID of the query.",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The unique name of the query.",
          "x-ms-summary": "Name"
        },
        "description": {
          "type": "string",
          "description": "The description of the query.",
          "x-ms-summary": "Description"
        },
        "type": {
          "type": "string",
          "description": "The type of the query.",
          "x-ms-summary": "Type"
        },
        "type_id": {
          "type": "integer",
          "format": "int32",
          "description": "The system record ID of the query type.",
          "x-ms-summary": "Type ID"
        },
        "category": {
          "type": "string",
          "description": "The category of the query.",
          "x-ms-summary": "Category"
        },
        "category_id": {
          "type": "integer",
          "format": "int32",
          "description": "The system record ID of the query category.",
          "x-ms-summary": "Category ID"
        },
        "format": {
          "type": "string",
          "description": "The query format.",
          "enum": [
            "Dynamic",
            "Static"
          ],
          "x-ms-summary": "Format"
        },
        "view_supported": {
          "type": "boolean",
          "description": "Is the query viewable?",
          "x-ms-summary": "View supported?"
        },
        "edit_supported": {
          "type": "boolean",
          "description": "Is the query editable?",
          "x-ms-summary": "Edit supported?"
        },
        "favorite": {
          "type": "boolean",
          "description": "Is the query a favorite?",
          "x-ms-summary": "Is favorite?"
        },
        "has_ask_fields": {
          "type": "boolean",
          "description": "Does the query include filter fields with the ask operator?",
          "x-ms-summary": "Has ask fields?"
        },
        "created_by_query": {
          "type": "boolean",
          "description": "Was the query was created within the query module?",
          "x-ms-summary": "Created by query?"
        },
        "supported_execution_modes": {
          "type": "string",
          "description": "The supported execution modes.",
          "enum": [
            "None",
            "ById",
            "AdHoc",
            "Both"
          ],
          "x-ms-summary": "Supported execution modes"
        },
        "can_modify": {
          "type": "boolean",
          "description": "Can the user modify the query?",
          "x-ms-summary": "Can modify?"
        },
        "can_execute": {
          "type": "boolean",
          "description": "Can the user execute the query?",
          "x-ms-summary": "Can execute?"
        },
        "others_can_modify": {
          "type": "boolean",
          "description": "Can other users modify the query?",
          "x-ms-summary": "Others can modify?"
        },
        "others_can_execute": {
          "type": "boolean",
          "description": "Can other users execute the query?",
          "x-ms-summary": "Others can execute?"
        },
        "query_list": {
          "type": "boolean",
          "description": "Is the query a Query List query?",
          "x-ms-summary": "Is a query list?"
        },
        "suppress_duplicates": {
          "type": "boolean",
          "description": "Are duplicates suppressed in the query results?",
          "x-ms-summary": "Suppress duplicates?"
        },
        "select_from_query_name": {
          "type": "string",
          "description": "The name of the query used as the base select for the query.",
          "x-ms-summary": "Select from query name"
        },
        "select_from_query_id": {
          "type": "integer",
          "format": "int32",
          "description": "The system record ID of the query used as the base select for the query.",
          "x-ms-summary": "Select from query ID"
        },
        "date_last_run": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the query was last run.",
          "x-ms-summary": "Last run"
        },
        "num_records": {
          "type": "integer",
          "format": "int32",
          "description": "The number of records found the last time the query was run.",
          "x-ms-summary": "Number of records"
        },
        "elapsed_ms": {
          "type": "integer",
          "format": "int32",
          "description": "The elapsed time (in milliseconds) the last time the query was run.",
          "x-ms-summary": "Elapsed time"
        },
        "date_added": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the query was created.",
          "x-ms-summary": "Date created"
        },
        "added_by": {
          "type": "string",
          "description": "The name of the user that created the query.",
          "x-ms-summary": "Created by"
        },
        "date_changed": {
          "type": "string",
          "format": "date-time",
          "description": "The date when the query was last changed.",
          "x-ms-summary": "Date changed"
        },
        "last_changed_by": {
          "type": "string",
          "description": "The name of the user that last changed the query.",
          "x-ms-summary": "Changed by"
        }
      }
    },
    "QueryApi.QuerySummaryCollection": {
      "type": "object",
      "description": "Queries",
      "properties": {
        "queries": {
          "type": "array",
          "description": "The set of items included in the response.",
          "items": {
            "$ref": "#/definitions/QueryApi.QuerySummary"
          }
        }
      }
    },
    "QueryApi.QueryType": {
      "type": "object",
      "description": "Query type",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The query type identifier.",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The display name of the query type.",
          "x-ms-summary": "Name"
        }
      }
    },
    "QueryApi.QueryTypeCollection": {
      "type": "object",
      "description": "Query types",
      "properties": {
        "query_types": {
          "type": "array",
          "description": "The set of items included in the response.",
          "items": {
            "$ref": "#/definitions/QueryApi.QueryType"
          }
        },
        "default_query_type_id": {
          "type": "integer",
          "format": "int32",
          "description": "The ID of the default query type."
        }
      }
    },
    "QueryApi.RefreshStaticQueryRequest": {
      "type": "object",
      "description": "Describes the request to refresh a static query.",
      "required": [
        "v_query_type_id",
        "id",
        "ux_mode"
      ],
      "properties": {
        "v_query_type_id": {
          "type": "integer",
          "format": "int32",
          "description": "Filter the set of queries to those with a specific query type.",
          "x-ms-summary": "Type",
          "x-ms-dynamic-values": {
            "operationId": "ListQueryTypes",
            "value-collection": "query_types",
            "value-path": "id",
            "value-title": "name"
          },
          "x-ms-dynamic-list": {
            "operationId": "ListQueryTypes",
            "itemsPath": "query_types",
            "itemValuePath": "id",
            "itemTitlePath": "name"
          }
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "The query to execute.",
          "x-ms-summary": "Query",
          "x-ms-dynamic-values": {
            "operationId": "ListQueries",
            "value-collection": "queries",
            "value-path": "id",
            "value-title": "name",
            "parameters": {
              "query_type_id": {
                "parameter": "v_query_type_id"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "ListQueries",
            "itemsPath": "queries",
            "itemValuePath": "id",
            "itemTitlePath": "name",
            "parameters": {
              "query_type_id": {
                "parameterReference": "body/v_query_type_id"
              }
            }
          }
        },
        "ux_mode": {
          "type": "string",
          "description": "The user experience behavior mode.  Synchronous mode expects that the caller will poll the job status until completion, at least every 10 seconds.  Asynchronous mode expects the consumer to poll the job status until completion, but has no timing requirement.",
          "x-ms-summary": "UX mode",
          "enum": [
            "Synchronous",
            "Asynchronous"
          ],
          "default": "Asynchronous",
          "x-ms-visibility": "internal"
        }
      }
    }
  },
  "parameters": {
    "product": {
      "name": "product",
      "in": "query",
      "description": "The Blackbaud product for the request.",
      "required": true,
      "type": "string",
      "enum": [
        "RE",
        "FE"
      ],
      "default": "RE",
      "x-ms-summary": "Product",
      "x-ms-visibility": "internal"
    },
    "module": {
      "name": "module",
      "in": "query",
      "description": "The Financial Edge NXT module for the request (for RE requests, use 'None').",
      "required": true,
      "type": "string",
      "enum": [
        "None",
        "GeneralLedger",
        "AccountsPayable",
        "AccountsReceivable",
        "FixedAssets",
        "CashReceipts"
      ],
      "default": "None",
      "x-ms-summary": "Module",
      "x-ms-visibility": "internal"
    }
  },
  "responses": {},
  "securityDefinitions": {
    "oauth2-auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://app.blackbaud.com/oauth/authorize",
      "tokenUrl": "https://oauth2.sky.blackbaud.com/token",
      "scopes": {}
    }
  },
  "security": [
    {
      "oauth2-auth": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.blackbaud.com/products/blackbaud-raisers-edge-nxt"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.blackbaud.com/privacy-shield"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Sales and CRM;Productivity"
    }
  ]
}