{
    "x-generator": "NSwag v14.4.0.0 (NJsonSchema v11.3.2.0 (Newtonsoft.Json v13.0.0.0))",
    "swagger": "2.0",
    "info": {
        "title": "Glaass Pro",
        "version": "v1",
        "description": "Glaass Pro - construction management software",
        "contact": {
            "name": "Glaass Pty Ltd",
            "url": "https://glaass.net",
            "email": "support@glaass.net"
        }
    },
    "host": "api.glaass.net",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/api/me": {
            "get": {
                "tags": [
                    "Account"
                ],
                "operationId": "Account_Get",
                "summary": "Get account information",
                "description": "Retrieves connection account information, i.e. user and project name",
                "x-ms-visibility": "important",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Account and project details",
                        "schema": {
                            "$ref": "#/definitions/AccountResponse"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/s": {
            "get": {
                "tags": [
                    "Templates"
                ],
                "operationId": "CaseType_GetList",
                "summary": "List of templates",
                "description": "Get list of case templates within project",
                "x-ms-visibility": "important",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The list of templates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TemplateResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/t/casecreated": {
            "x-ms-notification-content": {
                "schema": {
                    "$ref": "#/definitions/CaseCreatedNotificationContent"
                },
                "description": "Newly created case"
            },
            "post": {
                "tags": [
                    "Case"
                ],
                "operationId": "Case_Created_Trigger",
                "summary": "New case created",
                "description": "Trigger when new case is created",
                "x-ms-visibility": "important",
                "x-ms-trigger": "single",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "TemplateId": {
                                    "type": "string",
                                    "description": "Template of the case",
                                    "title": "Template ID",
                                    "x-ms-visibility": "important",
                                    "x-ms-dynamic-values": {
                                        "operationId": "CaseType_GetList",
                                        "parameters": {},
                                        "value-path": "Id",
                                        "value-title": "Name"
                                    }
                                },
                                "Scope": {
                                    "type": "string",
                                    "enum": [
                                        "ByMe",
                                        "ForMe",
                                        "All"
                                    ],
                                    "description": "The scope of the trigger (ByMe, ForMe, All)",
                                    "title": "Scope",
                                    "x-ms-visibility": "important"
                                },
                                "Notification": {
                                    "type": "string",
                                    "description": "x-ms-notification-url",
                                    "title": "",
                                    "x-ms-visibility": "internal",
                                    "x-ms-notification-url": true
                                }
                            },
                            "required": [
                                "Notification"
                            ]
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Status code Created (201) and link to deregister web hook",
                        "schema": {
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/t/caseupdated": {
            "x-ms-notification-content": {
                "schema": {
                    "$ref": "#/definitions/CaseUpdatedNotificationContent"
                },
                "description": "Updated case"
            },
            "post": {
                "tags": [
                    "Case"
                ],
                "operationId": "Case_Updated_Trigger",
                "summary": "Case has been updated",
                "description": "Trigger when case is updated",
                "x-ms-visibility": "important",
                "x-ms-trigger": "single",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "TemplateId": {
                                    "type": "string",
                                    "description": "Template of the case",
                                    "title": "Template ID",
                                    "x-ms-visibility": "important",
                                    "x-ms-dynamic-values": {
                                        "operationId": "CaseType_GetList",
                                        "parameters": {},
                                        "value-path": "Id",
                                        "value-title": "Name"
                                    }
                                },
                                "Scope": {
                                    "type": "string",
                                    "enum": [
                                        "ByMe",
                                        "ForMe",
                                        "All"
                                    ],
                                    "description": "The scope of the trigger (ByMe, ForMe, All)",
                                    "title": "Scope",
                                    "x-ms-visibility": "important"
                                },
                                "Notification": {
                                    "type": "string",
                                    "description": "x-ms-notification-url",
                                    "title": "",
                                    "x-ms-visibility": "internal",
                                    "x-ms-notification-url": true
                                }
                            },
                            "required": [
                                "Notification"
                            ]
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Status code Created (201) and link to deregister web hook",
                        "schema": {
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/t/caseclosed": {
            "x-ms-notification-content": {
                "schema": {
                    "$ref": "#/definitions/CaseClosedNotificationContent"
                },
                "description": "Case closed"
            },
            "post": {
                "tags": [
                    "Case"
                ],
                "operationId": "Case_Closed_Trigger",
                "summary": "Case has been closed",
                "description": "Trigger when case is closed",
                "x-ms-visibility": "important",
                "x-ms-trigger": "single",
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "TemplateId": {
                                    "type": "string",
                                    "description": "Template of the case",
                                    "title": "Template ID",
                                    "x-ms-visibility": "important",
                                    "x-ms-dynamic-values": {
                                        "operationId": "CaseType_GetList",
                                        "parameters": {},
                                        "value-path": "Id",
                                        "value-title": "Name"
                                    }
                                },
                                "Scope": {
                                    "type": "string",
                                    "enum": [
                                        "ByMe",
                                        "ForMe",
                                        "All"
                                    ],
                                    "description": "The scope of the trigger (ByMe, ForMe, All)",
                                    "title": "Scope",
                                    "x-ms-visibility": "important"
                                },
                                "Notification": {
                                    "type": "string",
                                    "description": "x-ms-notification-url",
                                    "title": "",
                                    "x-ms-visibility": "internal",
                                    "x-ms-notification-url": true
                                }
                            },
                            "required": [
                                "Notification"
                            ]
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Status code Created (201) and link to deregister web hook",
                        "schema": {
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/q": {
            "get": {
                "tags": [
                    "Search"
                ],
                "operationId": "Search_Get",
                "summary": "Search",
                "description": "Gets a list of the search results based on the query and filter.",
                "x-ms-visibility": "important",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "name": "query",
                        "x-ms-summary": "Query",
                        "in": "query",
                        "required": true,
                        "description": "Query parameter to match (text)",
                        "x-nullable": true
                    },
                    {
                        "type": "string",
                        "enum": [
                            "Location",
                            "Company",
                            "Case",
                            "User",
                            "Group"
                        ],
                        "name": "filter",
                        "x-ms-summary": "Filter",
                        "in": "query",
                        "description": "Filter to limit the search results (Location, Company, Case, User, Group)",
                        "x-nullable": true
                    },
                    {
                        "type": "integer",
                        "name": "take",
                        "x-ms-summary": "Take",
                        "in": "query",
                        "description": "Limit the number of results (max is 10)",
                        "format": "int32",
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "The list of search results",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SearchResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/api/c/{id}": {
            "get": {
                "tags": [
                    "Case"
                ],
                "summary": "Gets case details",
                "description": "Gets case details by technical case ID",
                "operationId": "Case_Get",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "x-ms-summary": "Case ID",
                        "in": "path",
                        "required": true,
                        "description": "The technical case ID",
                        "x-nullable": false,
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Case details",
                        "schema": {
                            "$ref": "#/definitions/CaseResponse"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized"
                    }
                },
                "security": [
                    {
                        "X-Glaass-Token": []
                    }
                ]
            }
        },
        "/api/c/{id}/fields": {
            "get": {
                "tags": [
                    "Case"
                ],
                "summary": "Gets all fields for a case",
                "description": "Gets all sections and fields for a case by technical case ID",
                "operationId": "CaseField_Get",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "x-ms-summary": "Case ID",
                        "in": "path",
                        "required": true,
                        "description": "The technical case ID",
                        "x-nullable": false,
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Case fields",
                        "schema": {
                            "$ref": "#/definitions/CaseFieldsResponse"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized"
                    }
                },
                "security": [
                    {
                        "X-Glaass-Token": []
                    }
                ]
            }
        },
        "/api/c/{id}/print": {
            "post": {
                "tags": [
                    "Case"
                ],
                "summary": "Gets or starts printing of a case",
                "description": "Starts printing of a case by technical case ID. If asynchronous is true, it returns a link to check the progress of the print request.",
                "operationId": "CasePrint_Post",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "x-ms-summary": "Case ID",
                        "in": "path",
                        "required": true,
                        "description": "The technical case ID",
                        "x-nullable": false,
                        "x-ms-url-encoding": "single"
                    },
                   {
                        "name": "body",
                        "in": "body",
                        "description": "Request to initiate or get a case print.",
                        "schema": {
                            "$ref": "#/definitions/CasePrintRequest"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "The link to check the printing progress or binary stream of print result.",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized"
                    }
                },
                "security": [
                    {
                        "X-Glaass-Token": []
                    }
                ]
            }
        },
        "/api/c/{id}/print/{requestId}": {
            "get": {
                "tags": [
                    "Case"
                ],
                "summary": "Gets a progress of the print request or final print result",
                "description": "Gets a progress of the print request or final print result by technical case ID and print request ID. If the print is not ready yet, it returns NoContent (204).",
                "operationId": "CasePrint_Get",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "x-ms-summary": "Case ID",
                        "in": "path",
                        "required": true,
                        "description": "The technical case ID.",
                        "x-nullable": false,
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "type": "string",
                        "name": "requestId",
                        "x-ms-summary": "Print Request ID",
                        "in": "path",
                        "required": true,
                        "description": "The unique identifier of the print request associated with the case.",
                        "x-nullable": false,
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Either NoContent (204) when print is not ready yey, or stream of print result.",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized"
                    }
                },
                "security": [
                    {
                        "X-Glaass-Token": []
                    }
                ]
            }
        },
        "/api/c/{id}/reply": {
            "get": {
                "tags": [
                    "Case"
                ],
                "summary": "Gets a default recipients for the case reply",
                "description": "Gets a list of default recipients for the case reply by technical case ID. This is used to pre-fill the reply form.",
                "operationId": "CaseReply_Get",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "x-ms-summary": "Case ID",
                        "in": "path",
                        "required": true,
                        "description": "The technical case ID",
                        "x-nullable": false,
                        "x-ms-url-encoding": "single"
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Proposed recipients of the reply",
                        "schema": {
                            "$ref": "#/definitions/CaseReplyResponse"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized"
                    }
                },
                "security": [
                    {
                        "X-Glaass-Token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Case"
                ],
                "summary": "Post a reply to the timeline of the case",
                "description": "Posts a reply to the timeline of the case by technical case ID. The reply can be sent with or without notification to default recipients.",
                "operationId": "CaseReply_Post",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "x-ms-summary": "Case ID",
                        "in": "path",
                        "required": true,
                        "description": "The technical case ID",
                        "x-nullable": false,
                        "x-ms-url-encoding": "single"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The reply request",
                        "schema": {
                            "$ref": "#/definitions/CaseReplyRequest"
                        },
                        "x-nullable": true
                    }
                ],
                "responses": {
                    "200": {
                        "x-nullable": true,
                        "description": "Information about reply and list of recipients",
                        "schema": {
                            "$ref": "#/definitions/CaseReplyResponse"
                        }
                    },
                    "401": {
                        "description": "Error: Unauthorized"
                    }
                },
                "security": [
                    {
                        "X-Glaass-Token": []
                    }
                ]
            }
        }
    },
    "definitions": {
        "AccountResponse": {
            "type": "object",
            "description": "Response containing account and project information for the current user.",
            "properties": {
                "ProjectId": {
                    "type": "string",
                    "description": "Unique identifier for the project.",
                    "example": "aceb364e-8f86-4599-90f3-41f77e107117"
                },
                "ProjectName": {
                    "type": "string",
                    "description": "Name of the project.",
                    "example": "Robina Railways"
                },
                "UserId": {
                    "type": "string",
                    "description": "Unique identifier for the user.",
                    "example": "aceb364e-8f86-4599-90f3-41f77e107117"
                },
                "FirstName": {
                    "type": "string",
                    "description": "First name of the user.",
                    "example": "Jane"
                },
                "LastName": {
                    "type": "string",
                    "description": "Last name of the user.",
                    "example": "Doe"
                },
                "ProjectLink": {
                    "type": "string",
                    "description": "ULR of the project environment.",
                    "example": "https://ae.glaass.com/Project/New/aceb364e-8f86-4599-90f3-41f77e107117"
                }
            }
        },
        "TemplateResponse": {
            "type": "object",
            "description": "Response containing information about a template",
            "properties": {
                "Id": {
                    "type": "string",
                    "description": "The technical ID of the template.",
                    "example": "aceb364e-8f86-4599-90f3-41f77e107117"
                },
                "Name": {
                    "type": "string",
                    "description": "Display name of the template.",
                    "example": "Correspondence"
                },
                "Module": {
                    "type": "string",
                    "description": "Module or path associated with the template.",
                    "example": "Quality > Forms"
                }
            }
        },
        "CaseResponse": {
            "type": "object",
            "description": "Response containing summary information about a case.",
            "properties": {
                "Id": {
                    "type": "string",
                    "description": "The technical case ID.",
                    "example": "aceb364e-8f86-4599-90f3-41f77e107117"
                },
                "Title": {
                    "type": "string",
                    "description": "The case title",
                    "example": "My new case"
                },
                "CaseId": {
                    "type": "string",
                    "description": "The case ID",
                    "example": "CORRES-001"
                },
                "Revision": {
                    "type": "string",
                    "description": "The case revision",
                    "example": 1.0
                },
                "CreatedBy": {
                    "$ref": "#/definitions/ProjectUserResponse"
                },
                "Status": {
                    "type": "string",
                    "description": "The status of the case."
                },
                "CreatedAtUtc": {
                    "type": "string",
                    "description": "The time the case was created (in UTC)"
                },
                "CreatedAtLocal": {
                    "type": "string",
                    "description": "The time the case was created (in project time zone)"
                }
            }
        },
        "ProjectUserResponse": {
            "type": "object",
            "description": "Represents a Glaass user within a project.",
            "properties": {
                "Id": {
                    "type": "string",
                    "description": "Unique identifier for the user.",
                    "example": "aceb364e-8f86-4599-90f3-41f77e107117"
                },
                "Name": {
                    "type": "string",
                    "description": "Name of the user.",
                    "example": "Jane Doe"
                }
            }
        },
        "CasePrintRequest": {
            "type": "object",
            "description": "Request to initiate or get a case print",
            "properties": {
                "Asynchronous": {
                    "type": "boolean",
                    "description": "Return either a link to check the printing progress or binary stream of print result."
                },
                "UseCustom": {
                    "type": "boolean",
                    "description": "If configured, use custom print template."
                },
                "DisplayGallery": {
                    "type": "string",
                    "enum": [
                        "Gallery",
                        "List"
                    ],
                    "description": "Display images as \"gallery\" or \"list\"."
                },
                "DisplayText": {
                    "type": "string",
                    "enum": [
                        "Beside",
                        "Below"
                    ],
                    "description": "Display field labels in case form \"beside\" or \"below\""
                }
            }
        },
        "CaseFieldsResponse": {
            "type": "object",
            "description": "Response containing all sections and fields for a case.",
            "properties": {
                "Id": {
                    "type": "string",
                    "description": "The technical case ID.",
                    "example": "aceb364e-8f86-4599-90f3-41f77e107117"
                },
                "Sections": {
                    "type": "array",
                    "description": "List of sections and their fields for the case.",
                    "items": {
                        "$ref": "#/definitions/CaseFieldSectionsResponse"
                    }
                }
            }
        },
        "CaseFieldSectionsResponse": {
            "type": "object",
            "description": "Represents a section containing multiple fields in a case.",
            "properties": {
                "SectionId": {
                    "type": "string",
                    "description": "Unique identifier for the section. Either empty or in a form \"multiline:N\" where N is the item number.",
                    "example": "multiline:3"
                },
                "Fields": {
                    "type": "array",
                    "description": "List of fields and values in this section.",
                    "items": {
                        "$ref": "#/definitions/CaseFieldsFieldResponse"
                    }
                }
            }
        },
        "CaseFieldsFieldResponse": {
            "type": "object",
            "description": "Represents a data of single field in a case section.",
            "properties": {
                "FieldId": {
                    "type": "string",
                    "description": "Unique identifier for the field.",
                    "example": "aceb364e-8f86-4599-90f3-41f77e107117"
                },
                "FieldLabel": {
                    "type": "string",
                    "description": "Display label for the field.",
                    "example": "Project Location"
                },
                "Value": {
                    "description": "Value of the field.",
                    "example": "aceb364e-8f86-4599-90f3-41f77e107117"
                },
                "Text": {
                    "type": "string",
                    "description": "Text representation of the field value.",
                    "example": "Base Level Platform"
                }
            }
        },
        "CaseReplyResponse": {
            "type": "object",
            "description": "Response containing reply information for a case.",
            "properties": {
                "Id": {
                    "type": "string",
                    "description": "The technical case ID.",
                    "example": "aceb364e-8f86-4599-90f3-41f77e107117"
                },
                "Message": {
                    "type": "string",
                    "description": "Message body of the reply.",
                    "example": "Thank you for your update."
                },
                "RecipientsTo": {
                    "type": "array",
                    "description": "List of primary recipients.",
                    "items": {
                        "$ref": "#/definitions/ProjectUserResponse"
                    }
                },
                "RecipientsCc": {
                    "type": "array",
                    "description": "List of carbon copy (CC) recipients.",
                    "items": {
                        "$ref": "#/definitions/ProjectUserResponse"
                    }
                }
            }
        },
        "CaseReplyRequest": {
            "type": "object",
            "description": "Request to add a reply to a case timeline.",
            "required": [
                "WithoutNotification"
            ],
            "properties": {
                "Message": {
                    "type": "string",
                    "description": "The reply message text.",
                    "example": "Thank you for your update."
                },
                "WithoutNotification": {
                    "type": "boolean",
                    "description": "Indicates if the reply should be sent without notifying default recipients.",
                    "example": false
                }
            }
        },
        "SearchResponse": {
            "type": "object",
            "description": "Response containing a single search result item.",
            "properties": {
                "SearchType": {
                    "type": "string",
                    "description": "The type of the search result (e.g., Location, Company, Case, User).",
                    "example": "Location"
                },
                "ItemId": {
                    "type": "string",
                    "description": "The technical identifier of the search result.",
                    "example": "aceb364e-8f86-4599-90f3-41f77e107117"
                },
                "Text": {
                    "type": "string",
                    "description": "Display text for the search result.",
                    "example": "Base Platform Level"
                },
                "Link": {
                    "type": "string",
                    "description": "Link to the search result item.",
                    "example": "https://api.glaass.net/api/l/aceb364e-8f86-4599-90f3-41f77e107117"
                }
            }
        },
        "CaseCreatedNotificationContent": {
            "type": "object",
            "properties": {
                "User": {
                    "type": "string",
                    "description": "User"
                },
                "Project": {
                    "type": "string",
                    "description": "Project"
                },
                "Case": {
                    "type": "string",
                    "description": "Case"
                }
            }
        },
        "CaseClosedNotificationContent": {
            "type": "object",
            "properties": {
                "User": {
                    "type": "string",
                    "description": "User"
                },
                "Project": {
                    "type": "string",
                    "description": "Project"
                },
                "Case": {
                    "type": "string",
                    "description": "Case"
                }
            }
        },
        "CaseUpdatedNotificationContent": {
            "type": "object",
            "properties": {
                "User": {
                    "type": "string",
                    "description": "User"
                },
                "Project": {
                    "type": "string",
                    "description": "Project"
                },
                "Case": {
                    "type": "string",
                    "description": "Case"
                },
                "Fields": {
                    "type": "array",
                    "description": "List of updated fields in the case.",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "description": "API Key Authentication",
            "name": "X-Glaass-Token",
            "in": "header"
        }
    },
    "security": [
        {
            "api_key": []
        }
    ],
    "x-ms-connector-metadata": [
        {
            "propertyName": "Website",
            "propertyValue": "https://glaass.net"
        },
        {
            "propertyName": "Privacy policy",
            "propertyValue": "https://www.glaass.net/privacy-policy/"
        },
        {
            "propertyName": "Categories",
            "propertyValue": "Productivity;Collaboration"
        }
    ]
}