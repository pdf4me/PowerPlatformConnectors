{
  "swagger": "2.0",
  "info": {
    "title": "Riverbed IQ Assist",
    "description": "Riverbed empowers organizations to automate workflows and enhance IT operations by integrating advanced AIOps and observability. Unlock intelligent diagnostics and actionable insights to accelerate issue resolution, optimize performance, and drive greater efficiency across your service desk.",
    "contact": {
      "name": "Riverbed Support",
      "url": "https://support.riverbed.com",
      "email": "support@riverbed.com"
    },
    "version": "1.0"
  },
  "host": "app.cloud.riverbed.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/operations/{operationId}": {
      "get": {
        "tags": [
          "Skill",
          "Operation"
        ],
        "summary": "Retrieve Result or Status of Async Operation",
        "description": "Use this endpoint to get the results of a long running operation returned by http 202",
        "operationId": "GetOperationId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "operationId",
            "description": "Operation ID",
            "required": true,
            "type": "string",
            "x-ms-url-encoding": "single",
            "x-ms-summary": "Operation ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The output generated from the action",
            "schema": {
              "$ref": "#/definitions/SkillOutput"
            }
          },
          "202": {
            "description": "A response indicating a long running operation to be polled for status",
            "schema": {
              "$ref": "#/definitions/LongRunningResponse"
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/skills/findUserEndpoint": {
      "post": {
        "tags": [
          "Skill"
        ],
        "summary": "Find User Endpoint",
        "description": "Find user endpoint or user device hostname based on username, email or display user name.",
        "operationId": "FindUserEndpoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "asynchttp",
            "description": "Expect a 202 response and poll the returned location URI until completion",
            "type": "boolean",
            "x-ms-summary": "Expect a 202 response and poll the returned location URI until completion"
          },
          {
            "in": "body",
            "name": "body",
            "description": "This is the request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FindUserEndpoint"
            },
            "x-ms-summary": "This is the request body"
          }
        ],
        "responses": {
          "200": {
            "description": "The output generated from the action",
            "schema": {
              "$ref": "#/definitions/SkillOutput"
            }
          },
          "202": {
            "description": "A response indicating a long running operation to be polled for status",
            "schema": {
              "$ref": "#/definitions/LongRunningResponse"
            }
          }
        }
      }
    },
    "/skills/createTicket": {
      "post": {
        "tags": [
          "Skill"
        ],
        "summary": "Create a Ticket",
        "description": "Create an incident in ServiceNow for a device and return the sys_id of the incident record for later updates.",
        "operationId": "CreateTicket",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "asynchttp",
            "description": "Expect a 202 response and poll the returned location URI until completion",
            "type": "boolean",
            "x-ms-summary": "Expect a 202 response and poll the returned location URI until completion"
          },
          {
            "in": "body",
            "name": "body",
            "description": "This is the request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTicket"
            },
            "x-ms-summary": "This is the request body"
          }
        ],
        "responses": {
          "200": {
            "description": "The output generated from the action",
            "schema": {
              "$ref": "#/definitions/SkillOutput"
            }
          },
          "202": {
            "description": "A response indicating a long running operation to be polled for status",
            "schema": {
              "$ref": "#/definitions/LongRunningResponse"
            }
          }
        }
      }
    },
    "/skills/getRemediationRunStatus": {
      "post": {
        "tags": [
          "Skill"
        ],
        "summary": "Get Remediation Run Status",
        "description": "Get remediation actions executed on a device by Aternity remediation service in the last 7 days. Remediation name is optional. An error message is returned when unsuccessful.",
        "operationId": "GetRemediationRunStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "asynchttp",
            "description": "Expect a 202 response and poll the returned location URI until completion",
            "type": "boolean",
            "x-ms-summary": "Expect a 202 response and poll the returned location URI until completion"
          },
          {
            "in": "body",
            "name": "body",
            "description": "This is the request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetRemediationRunStatus"
            },
            "x-ms-summary": "This is the request body"
          }
        ],
        "responses": {
          "200": {
            "description": "The output generated from the action",
            "schema": {
              "$ref": "#/definitions/SkillOutput"
            }
          },
          "202": {
            "description": "A response indicating a long running operation to be polled for status",
            "schema": {
              "$ref": "#/definitions/LongRunningResponse"
            }
          }
        }
      }
    },
    "/skills/startRemediationOnUserEndpoint": {
      "post": {
        "tags": [
          "Skill"
        ],
        "summary": "Initiate User Endpoint Remediation",
        "description": "Start remediation on user device.",
        "operationId": "StartRemediationOnUserEndpoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "asynchttp",
            "description": "Expect a 202 response and poll the returned location URI until completion",
            "type": "boolean",
            "x-ms-summary": "Expect a 202 response and poll the returned location URI until completion"
          },
          {
            "in": "body",
            "name": "body",
            "description": "This is the request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartEndpointRemediation"
            },
            "x-ms-summary": "This is the request body"
          }
        ],
        "responses": {
          "200": {
            "description": "The output generated from the action",
            "schema": {
              "$ref": "#/definitions/SkillOutput"
            }
          },
          "202": {
            "description": "A response indicating a long running operation to be polled for status",
            "schema": {
              "$ref": "#/definitions/LongRunningResponse"
            }
          }
        }
      }
    },
    "/skills/diagnoseUserEndpoint": {
      "post": {
        "tags": [
          "Skill"
        ],
        "summary": "Diagnose User Endpoint",
        "description": "Diagnose a device issue.",
        "operationId": "DiagnoseUserEndpoint",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "asynchttp",
            "description": "Expect a 202 response and poll the returned location URI until completion",
            "type": "boolean",
            "x-ms-summary": "Expect a 202 response and poll the returned location URI until completion"
          },
          {
            "in": "body",
            "name": "body",
            "description": "This is the request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DiagnoseEndpoint"
            },
            "x-ms-summary": "This is the request body"
          }
        ],
        "responses": {
          "200": {
            "description": "The output generated from the action",
            "schema": {
              "$ref": "#/definitions/SkillOutput"
            }
          },
          "202": {
            "description": "A response indicating a long running operation to be polled for status",
            "schema": {
              "$ref": "#/definitions/LongRunningResponse"
            }
          }
        }
      }
    },
    "/skills/suggestUserEndpointRemediation": {
      "post": {
        "tags": [
          "Skill"
        ],
        "summary": "Suggest User Endpoint Remediation",
        "description": "Suggest remediations for a device based on diagnosis or symptoms.",
        "operationId": "SuggestEndpointRemediation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "asynchttp",
            "description": "Expect a 202 response and poll the returned location URI until completion",
            "type": "boolean",
            "x-ms-summary": "Expect a 202 response and poll the returned location URI until completion"
          },
          {
            "in": "body",
            "name": "body",
            "description": "This is the request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SuggestEndpointRemediation"
            },
            "x-ms-summary": "This is the request body"
          }
        ],
        "responses": {
          "200": {
            "description": "The output generated from the action",
            "schema": {
              "$ref": "#/definitions/SkillOutput"
            }
          },
          "202": {
            "description": "A response indicating a long running operation to be polled for status",
            "schema": {
              "$ref": "#/definitions/LongRunningResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateTicket": {
      "type": "object",
      "properties": {
        "shortDescription": {
          "description": "Short description of the issue",
          "type": "string"
        },
        "description": {
          "description": "Detailed description of the issue",
          "type": "string"
        },
        "username": {
          "description": "Username related to the issue",
          "type": "string"
        },
        "deviceName": {
          "description": "Device name related to the issue",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DiagnoseEndpoint": {
      "required": [
        "deviceName"
      ],
      "type": "object",
      "properties": {
        "deviceName": {
          "description": "The name of the device experiencing a problem or related to an incident that requires diagnosis.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "FindUserEndpoint": {
      "type": "object",
      "properties": {
        "username": {
          "description": "The username of the user.",
          "type": "string"
        },
        "email": {
          "description": "User email address",
          "type": "string"
        },
        "displayName": {
          "description": "User Display Name",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "GetRemediationRunStatus": {
      "required": [
        "deviceName",
        "runReferenceId"
      ],
      "type": "object",
      "properties": {
        "deviceName": {
          "description": "Device name related to the issue",
          "type": "string"
        },
        "runReferenceId": {
          "description": "Device name related to the issue",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "LongRunningResponse": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string"
        },
        "location": {
          "format": "uri",
          "type": "string"
        },
        "retryAfter": {
          "format": "int32",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "SkillOutput": {
      "description": "This object is used to return the output of a skill.",
      "type": "object",
      "properties": {
        "errorMessage": {
          "description": "If the request fails, then this property will be populated with error details.",
          "type": "string"
        },
        "response": {
          "description": "The result from the tool, action, or skill invocation.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "StartEndpointRemediation": {
      "required": [
        "deviceName",
        "remediationId"
      ],
      "type": "object",
      "properties": {
        "deviceName": {
          "description": "The name of the device experiencing a problem or related to an incident that requires diagnosis.",
          "type": "string"
        },
        "remediationId": {
          "description": "The ID of the remediation action to start.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "SuggestEndpointRemediation": {
      "description": "This object is used to request a suggested remediation action for a device.",
      "required": [
        "deviceName"
      ],
      "type": "object",
      "properties": {
        "deviceName": {
          "description": "The name of the device that the remediation action should be applied to.",
          "type": "string"
        },
        "issue": {
          "description": "The issue experienced by the user that will influence the suggested remediation action.",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.riverbed.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.riverbed.com/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI;IT Operations"
    }
  ]
}