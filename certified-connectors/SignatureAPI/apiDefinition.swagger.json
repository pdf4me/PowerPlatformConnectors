{
                                                                                           
    "swagger": "2.0",
    "info": {
      "title": "SignatureAPI",
      "version": "1.3",
      "description": "Send documents for signing, track their progress, and get work done faster with SignatureAPI, the electronic signature platform built for automation. https://signatureapi.com/docs/integrations/power-automate/getting-started",
      "contact": {
        "name": "Signature API, Inc.",
        "url": "https://signatureapi.com",
        "email": "support@signatureapi.com"
      }
    },
    "x-ms-connector-metadata": [
      {
        "propertyName": "Website",
        "propertyValue": "https://signatureapi.com/power-automate"
      },
      {
        "propertyName": "Privacy policy",
        "propertyValue": "https://signatureapi.com/privacy"
      },
      {
        "propertyName": "Categories",
        "propertyValue": "Collaboration;Productivity"
      }
    ],
    "x-ms-keywords": [
      "SignatureAPI",
      "Signature API",
      "Document",
      "Documents",
      "Doc",
      "Docs",
      "Envelope",
      "Envelopes",
      "Contract",
      "Contracts",
      "Sign",
      "Signs",
      "Signer",
      "Signers",
      "Signature",
      "Signatures",
      "Esignature",
      "Esignatures",
      "E-signature",
      "E-signatures",
      "Esign",
      "Esigns",
      "Esig",
      "esigs",
      "Agreement",
      "Agreements",
      "Digital Signature",
      "Digital Signatures",
      "Electronic Signature",
      "Electronic Signatures",
      "Execute",
      "Executes",
      "Executed",
      "Approval",
      "Approvals"
    ],
    "host": "api.signatureapi.com",
    "basePath": "/v1",
    "schemes": [
      "https"
    ],
    "securityDefinitions": {
      "apiKey": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    },
    "security": [
      {
        "apiKey": []
      }
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
  
                 
  
      "/integrations/power-platform/webhooks/envelope.created": {
        "x-ms-notification-content": {
          "schema": {
            "$ref": "#/definitions/NotificationForEnvelopeCreated"
          }
        },
        "post": {
          "operationId": "CreateEndpointForEnvelopeCreated",
          "summary": "When an envelope is created",
          "description": "This event occurs whenever an Envelope is created.",
          "x-ms-trigger": "single",
          "parameters": [
            {
              "$ref": "#/parameters/EndpointInputBody"
            }
          ],
          "responses": {
            "201": {
              "$ref": "#/responses/WebhookEndpointCreated"
            }
          }
        }
      },
      "/integrations/power-platform/webhooks/envelope.started": {
        "x-ms-notification-content": {
          "schema": {
            "$ref": "#/definitions/NotificationForEnvelopeStarted"
          }
        },
        "post": {
          "operationId": "CreateEndpointForEnvelopeStarted",
          "summary": "When an envelope has started",
          "description": "This event occurs when an envelope status transitions from processing to in_progress, indicating it is ready to be sent to recipients.",
          "x-ms-trigger": "single",
          "parameters": [
            {
              "$ref": "#/parameters/EndpointInputBody"
            }
          ],
          "responses": {
            "201": {
              "$ref": "#/responses/WebhookEndpointCreated"
            }
          }
        }
      },
      "/integrations/power-platform/webhooks/envelope.completed": {
        "x-ms-notification-content": {
          "schema": {
            "$ref": "#/definitions/NotificationForEnvelopeCompleted"
          }
        },
        "post": {
          "operationId": "CreateEndpointForEnvelopeCompleted",
          "summary": "When an envelope is completed",
          "description": "This event occurs when an envelope status transitions from in_progress to completed, indicating it has been completed by all recipients.",
          "x-ms-trigger": "single",
          "parameters": [
            {
              "$ref": "#/parameters/EndpointInputBody"
            }
          ],
          "responses": {
            "201": {
              "$ref": "#/responses/WebhookEndpointCreated"
            }
          }
        }
      },
      "/integrations/power-platform/webhooks/envelope.failed": {
        "x-ms-notification-content": {
          "schema": {
            "$ref": "#/definitions/NotificationForEnvelopeFailed"
          }
        },
        "post": {
          "operationId": "CreateEndpointForEnvelopeFailed",
          "summary": "When an envelope fails",
          "description": "This event occurs when an envelope fails, resulting in an envelope status of failed.",
          "x-ms-trigger": "single",
          "parameters": [
            {
              "$ref": "#/parameters/EndpointInputBody"
            }
          ],
          "responses": {
            "201": {
              "$ref": "#/responses/WebhookEndpointCreated"
            }
          }
        }
      },
      "/integrations/power-platform/webhooks/envelope.canceled": {
        "x-ms-notification-content": {
          "schema": {
            "$ref": "#/definitions/NotificationForEnvelopeCanceled"
          }
        },
        "post": {
          "operationId": "CreateEndpointForEnvelopeCanceled",
          "summary": "When an envelope is canceled",
          "description": "This event occurs when the signing process has been intentionally stopped before completion, resulting in an envelope status of canceled.",
          "x-ms-trigger": "single",
          "parameters": [
            {
              "$ref": "#/parameters/EndpointInputBody"
            }
          ],
          "responses": {
            "201": {
              "$ref": "#/responses/WebhookEndpointCreated"
            }
          }
        }
      },
      "/integrations/power-platform/webhooks/recipient.released": {
        "x-ms-notification-content": {
          "schema": {
            "$ref": "#/definitions/NotificationForRecipientReleased"
          }
        },
        "post": {
          "operationId": "CreateEndpointForRecipientReleased",
          "summary": "When a recipient is released",
          "description": "This event occurs when a recipient is ready to be sent a request to complete an envelope.",
          "x-ms-trigger": "single",
          "parameters": [
            {
              "$ref": "#/parameters/EndpointInputBody"
            }
          ],
          "responses": {
            "201": {
              "$ref": "#/responses/WebhookEndpointCreated"
            }
          }
        }
      },
      "/integrations/power-platform/webhooks/recipient.sent": {
        "x-ms-notification-content": {
          "schema": {
            "$ref": "#/definitions/NotificationForRecipientSent"
          }
        },
        "post": {
          "operationId": "CreateEndpointForRecipientSent",
          "summary": "When a recipient is sent",
          "description": "This event occurs when a request is sent to a recipient.",
          "x-ms-trigger": "single",
          "parameters": [
            {
              "$ref": "#/parameters/EndpointInputBody"
            }
          ],
          "responses": {
            "201": {
              "$ref": "#/responses/WebhookEndpointCreated"
            }
          }
        }
      },
      "/integrations/power-platform/webhooks/recipient.completed": {
        "x-ms-notification-content": {
          "schema": {
            "$ref": "#/definitions/NotificationForRecipientCompleted"
          }
        },
        "post": {
          "operationId": "CreateEndpointForRecipientCompleted",
          "summary": "When a recipient is completed",
          "description": "This event occurs when a recipient has completed their part of the signing process.",
          "x-ms-trigger": "single",
          "parameters": [
            {
              "$ref": "#/parameters/EndpointInputBody"
            }
          ],
          "responses": {
            "201": {
              "$ref": "#/responses/WebhookEndpointCreated"
            }
          }
        }
      },
      "/integrations/power-platform/webhooks/recipient.rejected": {
        "x-ms-notification-content": {
          "schema": {
            "$ref": "#/definitions/NotificationForRecipientRejected"
          }
        },
        "post": {
          "operationId": "CreateEndpointForRecipientRejected",
          "summary": "When a recipient is rejected",
          "description": "This event occurs when a recipient rejects the envelope.",
          "x-ms-trigger": "single",
          "parameters": [
            {
              "$ref": "#/parameters/EndpointInputBody"
            }
          ],
          "responses": {
            "201": {
              "$ref": "#/responses/WebhookEndpointCreated"
            }
          }
        }
      },
      "/integrations/power-platform/webhooks/recipient.bounced": {
        "x-ms-notification-content": {
          "schema": {
            "$ref": "#/definitions/NotificationForRecipientBounced"
          }
        },
        "post": {
          "operationId": "CreateEndpointForRecipientBounced",
          "summary": "When a recipient bounces",
          "description": "This event occurs when an email is undeliverable, either temporarily (soft-bounce) or permanently (hard-bounce).",
          "x-ms-trigger": "single",
          "parameters": [
            {
              "$ref": "#/parameters/EndpointInputBody"
            }
          ],
          "responses": {
            "201": {
              "$ref": "#/responses/WebhookEndpointCreated"
            }
          }
        }
      },
      "/integrations/power-platform/webhooks/recipient.failed": {
        "x-ms-notification-content": {
          "schema": {
            "$ref": "#/definitions/NotificationForRecipientFailed"
          }
        },
        "post": {
          "operationId": "CreateEndpointForRecipientFailed",
          "summary": "When a recipient fails",
          "description": "This event occurs when there is a failure related to a recipient, resulting in a recipient status of failed.",
          "x-ms-trigger": "single",
          "parameters": [
            {
              "$ref": "#/parameters/EndpointInputBody"
            }
          ],
          "responses": {
            "201": {
              "$ref": "#/responses/WebhookEndpointCreated"
            }
          }
        }
      },
      "/integrations/power-platform/webhooks/recipient.replaced": {
        "x-ms-notification-content": {
          "schema": {
            "$ref": "#/definitions/NotificationForRecipientReplaced"
          }
        },
        "post": {
          "operationId": "CreateEndpointForRecipientReplaced",
          "summary": "When a recipient is replaced",
          "description": "This event occurs when a recipient is replaced with a new one.",
          "x-ms-trigger": "single",
          "parameters": [
            {
              "$ref": "#/parameters/EndpointInputBody"
            }
          ],
          "responses": {
            "201": {
              "$ref": "#/responses/WebhookEndpointCreated"
            }
          }
        }
      },
      "/integrations/power-platform/webhooks/recipient.resent": {
        "x-ms-notification-content": {
          "schema": {
            "$ref": "#/definitions/NotificationForRecipientResent"
          }
        },
        "post": {
          "operationId": "CreateEndpointForRecipientResent",
          "summary": "When a recipient is resent",
          "description": "This event occurs when a request is resent to a recipient.",
          "x-ms-trigger": "single",
          "parameters": [
            {
              "$ref": "#/parameters/EndpointInputBody"
            }
          ],
          "responses": {
            "201": {
              "$ref": "#/responses/WebhookEndpointCreated"
            }
          }
        }
      },
      "/integrations/power-platform/webhooks/deliverable.generated": {
        "x-ms-notification-content": {
          "schema": {
            "$ref": "#/definitions/NotificationForDeliverableGenerated"
          }
        },
        "post": {
          "operationId": "CreateEndpointForDeliverableGenerated",
          "summary": "When a deliverable is generated",
          "description": "This event occurs when a deliverable, such as an audit log, is successfully generated.",
          "x-ms-trigger": "single",
          "parameters": [
            {
              "$ref": "#/parameters/EndpointInputBody"
            }
          ],
          "responses": {
            "201": {
              "$ref": "#/responses/WebhookEndpointCreated"
            }
          }
        }
      },
      "/integrations/power-platform/webhooks/deliverable.failed": {
        "x-ms-notification-content": {
          "schema": {
            "$ref": "#/definitions/NotificationForDeliverableFailed"
          }
        },
        "post": {
          "operationId": "CreateEndpointForDeliverableFailed",
          "summary": "When a deliverable fails",
          "description": "This event occurs when the generation of a deliverable fails, resulting in a deliverable status of failed.",
          "x-ms-trigger": "single",
          "parameters": [
            {
              "$ref": "#/parameters/EndpointInputBody"
            }
          ],
          "responses": {
            "201": {
              "$ref": "#/responses/WebhookEndpointCreated"
            }
          }
        }
      },
      "/integrations/power-platform/webhooks/{endpointId}": {
        "delete": {
          "operationId": "DeleteEndpoint",
          "summary": "Delete an Endpoint",
          "description": "Deletes a webhook endpoint",
          "x-ms-visibility": "internal",
          "parameters": [
            {
              "name": "endpointId",
              "in": "path",
              "required": true,
              "type": "string",
              "x-ms-url-encoding": "single"
            }
          ],
          "responses": {
            "204": {
              "description": "Endpoint deleted successfully"
            }
          }
        }
      },
  
                
  
      "/envelopes": {
        "post": {
          "operationId": "CreateEnvelope",
          "summary": "Create an envelope",
          "description": "Creates a new envelope to which you can add recipients and documents. When ready, use the 'Start an envelope' action to initiate the signing process. https://signatureapi.com/docs/integrations/power-automate/actions/create-envelope",
          "x-ms-visibility": "important",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreateEnvelopeInput"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "The envelope was created successfully.",
              "schema": {
                "$ref": "#/definitions/CreateEnvelopeOutput"
              }
            }
          }
        }
      },
      "/envelopes/{envelopeId}": {
        "get": {
          "operationId": "GetEnvelope",
          "summary": "Get an envelope",
          "description": "Retrieves envelope details by its ID. https://signatureapi.com/docs/integrations/power-automate/actions/get-envelope",
          "x-ms-visibility": "important",
          "parameters": [
            {
              "$ref": "#/parameters/EnvelopeId"
            }
          ],
          "responses": {
            "200": {
              "description": "The envelope was retrieved successfully.",
              "schema": {
                "$ref": "#/definitions/Envelope"
              }
            }
          }
        },
        "delete": {
          "operationId": "DeleteEnvelope",
          "summary": "Delete an envelope",
          "description": "Deletes an envelope and all associated information. https://signatureapi.com/docs/integrations/power-automate/actions/delete-envelope",
          "x-ms-visibility": "important",
          "parameters": [
            {
              "$ref": "#/parameters/EnvelopeId"
            }
          ],
          "responses": {
            "204": {
              "description": "The envelope was deleted successfully."
            }
          }
        }
      },
      "/envelopes/{envelopeId}+alias1": {
        "get": {
          "operationId": "GetCapture",
          "summary": "Get a captured value",
          "description": "Retrieves a value entered by a recipient in an input place during signing. https://signatureapi.com/docs/integrations/power-automate/actions/get-capture",
          "x-ms-visibility": "important",
          "parameters": [
            {
              "$ref": "#/parameters/EnvelopeId"
            },
            {
              "$ref": "#/parameters/CaptureKey"
            }
          ],
          "responses": {
            "200": {
              "description": "The capture was retrieved successfully.",
              "schema": {
                "$ref": "#/definitions/Capture"
              }
            }
          }
        }
      },
      "/envelopes/{envelopeId}/start": {
        "post": {
          "operationId": "StartEnvelope",
          "summary": "Start an envelope",
          "description": "Initiates the signing process for an envelope. https://signatureapi.com/docs/integrations/power-automate/actions/start-envelope",
          "x-ms-visibility": "important",
          "parameters": [
            {
              "$ref": "#/parameters/EnvelopeId"
            }
          ],
          "responses": {
            "200": {
              "description": "The envelope started successfully.",
              "schema": {
                "$ref": "#/definitions/StartEnvelopeOutput"
              }
            },
            "422": {
              "description": "Validation Error"
            }
          }
        }
      },
      "/envelopes/{envelopeId}/documents": {
        "post": {
          "operationId": "AddDocument",
          "summary": "Add a document — PDF",
          "description": "Adds a PDF document to an envelope. https://signatureapi.com/docs/integrations/power-automate/actions/add-document",
          "x-ms-visibility": "important",
          "parameters": [
            {
              "$ref": "#/parameters/EnvelopeId"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AddDocumentInputPdf"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Document Created",
              "schema": {
                "$ref": "#/definitions/AddDocumentOutput"
              }
            }
          }
        }
      },
                                                                                                                                  
                               
      "/envelopes/{envelopeId}/documents+alias1": {
        "post": {
          "operationId": "AddDocumentDocx",
          "summary": "Add a document — DOCX",
          "description": "Adds a DOCX document to an envelope. https://signatureapi.com/docs/integrations/power-automate/actions/add-document-docx",
          "x-ms-visibility": "important",
          "parameters": [
            {
              "$ref": "#/parameters/EnvelopeId"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AddDocumentInputDocx"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Document Created",
              "schema": {
                "$ref": "#/definitions/AddDocumentOutput"
              }
            }
          }
        }
      },
      "/envelopes/{envelopeId}/documents+alias2": {
        "post": {
          "operationId": "AddTemplate",
          "summary": "Add a template — DOCX",
          "description": "Adds a DOCX template to an envelope. https://signatureapi.com/docs/integrations/power-automate/actions/add-template",
          "x-ms-visibility": "important",
          "parameters": [
            {
              "$ref": "#/parameters/EnvelopeId"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AddTemplateInput"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Document Created",
              "schema": {
                "$ref": "#/definitions/AddDocumentOutput"
              }
            }
          }
        }
      },
      "/integrations/power-platform/documents/{documentId}/add-data": {
        "post": {
          "operationId": "AddTemplateData",
          "summary": "Add data to template",
          "description": "Adds data to a template. https://signatureapi.com/docs/integrations/power-automate/actions/add-template-data",
          "x-ms-visibility": "important",
          "parameters": [
            {
              "$ref": "#/parameters/DocumentId"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AddTemplateDataInput"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Data Added"
            }
          }
        }
      },
      "/integrations/power-platform/documents/{documentId}/add-signature-place": {
        "post": {
          "operationId": "AddPlaceSignature",
          "summary": "Add a place — Signature",
          "description": "Adds a signature place to a document. https://signatureapi.com/docs/integrations/power-automate/actions/add-signature-place",
          "parameters": [
            {
              "$ref": "#/parameters/DocumentId"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AddSignaturePlaceInput"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Place Added"
            }
          }
        }
      },
      "/integrations/power-platform/documents/{documentId}/add-initials-place": {
        "post": {
          "operationId": "AddPlaceInitials",
          "summary": "Add a place — Initials",
          "description": "Adds an initials place to a document. https://signatureapi.com/docs/integrations/power-automate/actions/add-initials-place",
          "parameters": [
            {
              "$ref": "#/parameters/DocumentId"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AddInitialsPlaceInput"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Place Added"
            }
          }
        }
      },
      "/integrations/power-platform/documents/{documentId}/add-text-input-place": {
        "post": {
          "operationId": "AddPlaceTextInput",
          "summary": "Add a place — Text Input",
          "description": "Adds a text input place to a document. https://signatureapi.com/docs/integrations/power-automate/actions/add-text-input-place",
          "parameters": [
            {
              "$ref": "#/parameters/DocumentId"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AddTextInputPlaceInput"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Place Added"
            }
          }
        }
      },
      "/integrations/power-platform/documents/{documentId}/add-text-place": {
        "post": {
          "operationId": "AddPlaceText",
          "summary": "Add a place — Text",
          "description": "Adds a text place to a document. https://signatureapi.com/docs/integrations/power-automate/actions/add-text-place",
          "parameters": [
            {
              "$ref": "#/parameters/DocumentId"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AddTextPlaceInput"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Place Added"
            }
          }
        }
      },
      "/integrations/power-platform/documents/{documentId}/add-recipient-completed-date-place": {
        "post": {
          "operationId": "AddPlaceRecipientCompletedDate",
          "summary": "Add a place — Recipient completed date",
          "description": "Adds a recipient completed date place to a document. https://signatureapi.com/docs/integrations/power-automate/actions/add-recipient-completed-date-place",
          "parameters": [
            {
              "$ref": "#/parameters/DocumentId"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AddRecipientCompletedDatePlaceInput"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Place Added"
            }
          }
        }
      },
      "/integrations/power-platform/documents/{documentId}/add-envelope-completed-date-place": {
        "post": {
          "operationId": "AddPlaceEnvelopeCompletedDate",
          "summary": "Add a place — Envelope completed date",
          "description": "Adds a envelope completed date place to a document. https://signatureapi.com/docs/integrations/power-automate/actions/add-envelope-completed-date-place",
          "parameters": [
            {
              "$ref": "#/parameters/DocumentId"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AddEnvelopeCompletedDatePlaceInput"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Place Added"
            }
          }
        }
      },
      "/envelopes/{envelopeId}/recipients": {
        "post": {
          "operationId": "AddRecipient",
          "summary": "Add a recipient — Signer",
          "description": "Adds a recipient to an envelope. https://signatureapi.com/docs/integrations/power-automate/actions/add-recipient",
          "x-ms-visibility": "important",
          "parameters": [
            {
              "$ref": "#/parameters/EnvelopeId"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/AddRecipientSignerInput"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Recipient Created",
              "schema": {
                "$ref": "#/definitions/AddRecipientSignerOutput"
              }
            }
          }
        }
      },
      "/recipients/{recipientId}": {
        "get": {
          "operationId": "GetRecipient",
          "summary": "Get a recipient",
          "description": "Retrieves recipient details by their ID. https://signatureapi.com/docs/integrations/power-automate/actions/get-recipient",
          "x-ms-visibility": "important",
          "parameters": [
            {
              "$ref": "#/parameters/RecipientId"
            }
          ],
          "responses": {
            "200": {
              "description": "The recipient was retrieved successfully.",
              "schema": {
                "$ref": "#/definitions/Recipient"
              }
            }
          }
        }
      },
      "/recipients/{recipientId}/ceremony": {
        "post": {
          "operationId": "CreateCeremonyEmailLink",
          "summary": "Create a ceremony — Email link authentication",
          "description": "Creates a ceremony where the recipient is authenticated via a link sent to their email. https://signatureapi.com/docs/integrations/power-automate/actions/create-ceremony-email-link",
          "x-ms-visibility": "important",
          "parameters": [
            {
              "$ref": "#/parameters/RecipientId"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreateCeremonyEmailLinkInput"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Ceremony Created",
              "schema": {
                "$ref": "#/definitions/CreateCeremonyEmailLinkOutput"
              }
            }
          }
        }
      },
      "/recipients/{recipientId}/ceremony+alias1": {
        "post": {
          "operationId": "CreateCeremonyCustom",
          "summary": "Create a ceremony — Custom authentication",
          "description": "Creates a ceremony where the recipient is authenticated externally to SignatureAPI. Use this to obtain a ceremony URL for sharing with recipients. Before using custom authentication read https://signatureapi.com/docs/integrations/power-automate/actions/create-ceremony-custom",
          "x-ms-visibility": "important",
          "parameters": [
            {
              "$ref": "#/parameters/RecipientId"
            },
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreateCeremonyCustomInput"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Ceremony Created",
              "schema": {
                "$ref": "#/definitions/CreateCeremonyCustomOutput"
              }
            }
          }
        }
      },
      "/integrations/power-platform/envelopes/{envelopeId}/wait": {
        "get": {
          "operationId": "WaitEnvelope",
          "summary": "Wait for envelope",
          "description": "Waits for an envelope to reach a completed state or another final status. https://signatureapi.com/docs/integrations/power-automate/actions/wait-envelope",
          "x-ms-visibility": "important",
          "parameters": [
            {
              "$ref": "#/parameters/EnvelopeId"
            }
          ],
          "responses": {
            "202": {
              "description": "Envelope in progress"
            },
            "200": {
              "description": "Envelope is completed",
              "schema": {
                "$ref": "#/definitions/Envelope"
              }
            },
            "400": {
              "description": "The envelope failed"
            }
          }
        }
      },
      "/deliverables/{deliverableId}": {
        "get": {
          "operationId": "GetDeliverable",
          "summary": "Get a deliverable",
          "description": "Retrieves a deliverable using its ID. Use it to download a signed copy of the envelope. https://signatureapi.com/docs/integrations/power-automate/actions/get-deliverable",
          "x-ms-visibility": "important",
          "parameters": [
            {
              "$ref": "#/parameters/DeliverableId"
            }
          ],
          "responses": {
            "200": {
              "description": "Deliverable retrieved",
              "schema": {
                "$ref": "#/definitions/Deliverable"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "EnvelopeId": {
        "name": "envelopeId",
        "x-ms-summary": "Envelope ID",
        "description": "The ID of the envelope.",
        "in": "path",
        "type": "string",
        "required": true,
        "x-ms-url-encoding": "single"
      },
      "DocumentId": {
        "name": "documentId",
        "x-ms-summary": "Document ID",
        "description": "The ID of the document.",
        "in": "path",
        "type": "string",
        "required": true,
        "x-ms-url-encoding": "single"
      },
      "RecipientId": {
        "name": "recipientId",
        "x-ms-summary": "Recipient ID",
        "description": "The ID of the recipient.",
        "in": "path",
        "type": "string",
        "required": true,
        "x-ms-url-encoding": "single"
      },
      "DeliverableId": {
        "name": "deliverableId",
        "x-ms-summary": "Deliverable ID",
        "description": "The ID of the deliverable.",
        "in": "path",
        "type": "string",
        "required": true,
        "x-ms-url-encoding": "single"
      },
      "EndpointInputBody": {
        "name": "body",
        "in": "body",
        "required": true,
        "schema": {
          "$ref": "#/definitions/EndpointInput"
        }
      },
      "CaptureKey": {
        "name": "captureKey",
        "x-ms-summary": "Capture Key",
        "description": "The key of the captured value.",
        "in": "query",
        "type": "string",
        "required": true
      }
    },
    "responses": {
      "WebhookEndpointCreated": {
        "description": "Endpoint Created",
        "headers": {
          "Location": {
            "type": "string",
            "description": "The endpoint URL for internal use"
          }
        }
      }
    },
    "definitions": {
  
                         
  
      "Envelope": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/EnvelopeId"
          },
          "title": {
            "$ref": "#/definitions/EnvelopeTitle"
          },
          "label": {
            "$ref": "#/definitions/EnvelopeLabel"
          },
          "message": {
            "$ref": "#/definitions/EnvelopeMessage"
          },
          "sender": {
            "$ref": "#/definitions/EnvelopeSender"
          },
          "status": {
            "$ref": "#/definitions/EnvelopeStatus"
          },
          "deliverable": {
            "$ref": "#/definitions/EnvelopeDeliverable"
          },
          "completed_at": {
            "$ref": "#/definitions/EnvelopeCompletedAt"
          },
          "mode": {
            "$ref": "#/definitions/EnvelopeMode"
          },
          "routing": {
            "$ref": "#/definitions/EnvelopeRouting"
          },
          "timezone": {
            "$ref": "#/definitions/EnvelopeTimezone"
          },
          "timestamp_format": {
            "$ref": "#/definitions/EnvelopeTimestampFormat"
          },
          "attestation": {
            "$ref": "#/definitions/EnvelopeAttestation"
          },
          "topics": {
            "$ref": "#/definitions/EnvelopeTopics"
          }
        }
      },
      "Recipient": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/RecipientId"
          },
          "envelope_id": {
            "$ref": "#/definitions/EnvelopeId"
          },
          "type": {
            "$ref": "#/definitions/RecipientType"
          },
          "key": {
            "$ref": "#/definitions/RecipientKey"
          },
          "name": {
            "$ref": "#/definitions/RecipientName"
          },
          "email": {
            "$ref": "#/definitions/RecipientEmail"
          },
          "status": {
            "$ref": "#/definitions/RecipientStatus"
          },
          "ceremony_creation": {
            "$ref": "#/definitions/RecipientCeremonyCreation"
          },
          "delivery_type": {
            "$ref": "#/definitions/RecipientDeliveryType"
          },
          "completed_at": {
            "$ref": "#/definitions/RecipientCompletedAt"
          }
        }
      },
      "Deliverable": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/DeliverableId"
          },
          "type": {
            "$ref": "#/definitions/DeliverableType"
          },
          "status": {
            "$ref": "#/definitions/DeliverableStatus"
          },
          "file_content": {
            "$ref": "#/definitions/DeliverableFileContent"
          }
        }
      },
      "Capture": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/definitions/CaptureValue"
          }
        }
      },
  
                                             
  
      "CreateEnvelopeInput": {
        "type": "object",
        "properties": {
          "draft": {
            "type": "boolean",
            "x-ms-summary": "Draft Envelope",
            "description": "Set to true if the envelope is a draft.",
            "default": true,
            "x-ms-visibility": "internal"
          },
          "title": {
            "$ref": "#/definitions/EnvelopeTitle"
          },
          "label": {
            "$ref": "#/definitions/EnvelopeLabel"
          },
          "message": {
            "$ref": "#/definitions/EnvelopeMessage"
          },
          "mode": {
            "$ref": "#/definitions/EnvelopeMode"
          },
          "routing": {
            "$ref": "#/definitions/EnvelopeRouting"
          },
          "language": {
            "$ref": "#/definitions/EnvelopeLanguage"
          },
          "timezone": {
            "$ref": "#/definitions/EnvelopeTimezone"
          },
          "timestamp_format": {
            "$ref": "#/definitions/EnvelopeTimestampFormat"
          },
          "attestation": {
            "$ref": "#/definitions/EnvelopeAttestation"
          },
          "sender": {
            "type": "object",
            "x-ms-summary": "Sender",
            "properties": {
              "name": {
                "type": "string",
                "x-ms-summary": "Name",
                "description": "The name of the sender.",
                "x-ms-visibility": "advanced"
              },
              "email": {
                "type": "string",
                "x-ms-summary": "Email",
                "description": "The email address of the sender.",
                "x-ms-visibility": "advanced"
              }
            }
          },
          "topics": {
            "$ref": "#/definitions/EnvelopeTopics"
          },
          "extra": {
            "$ref": "#/definitions/Extra"
          }
        },
        "required": [
          "title",
          "draft"
        ]
      },
      "CreateEnvelopeOutput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/EnvelopeId"
          },
          "title": {
            "$ref": "#/definitions/EnvelopeTitle"
          },
          "label": {
            "$ref": "#/definitions/EnvelopeLabel"
          },
          "message": {
            "$ref": "#/definitions/EnvelopeMessage"
          },
          "sender": {
            "$ref": "#/definitions/EnvelopeSender"
          },
          "mode": {
            "$ref": "#/definitions/EnvelopeMode"
          },
          "routing": {
            "$ref": "#/definitions/EnvelopeRouting"
          },
          "timezone": {
            "$ref": "#/definitions/EnvelopeTimezone"
          },
          "timestamp_format": {
            "$ref": "#/definitions/EnvelopeTimestampFormat"
          },
          "attestation": {
            "$ref": "#/definitions/EnvelopeAttestation"
          },
          "topics": {
            "$ref": "#/definitions/EnvelopeTopics"
          }
        }
      },
      "StartEnvelopeOutput": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/definitions/EnvelopeStatus"
          }
        }
      },
      "AddDocumentInputPdf": {
        "type": "object",
        "properties": {
          "title": {
            "$ref": "#/definitions/DocumentTitle"
          },
          "file_content": {
            "$ref": "#/definitions/DocumentFileContent"
          },
          "format": {
            "$ref": "#/definitions/DocumentFormatPdf"
          },
          "extra": {
            "$ref": "#/definitions/Extra"
          }
        },
        "required": [
          "file_content",
          "format"
        ]
      },
      "AddDocumentInputDocx": {
        "type": "object",
        "properties": {
          "title": {
            "$ref": "#/definitions/DocumentTitle"
          },
          "file_content": {
            "$ref": "#/definitions/DocumentFileContent"
          },
          "format": {
            "$ref": "#/definitions/DocumentFormatDocx"
          },
          "extra": {
            "$ref": "#/definitions/Extra"
          }
        },
        "required": [
          "file_content",
          "format"
        ]
      },
      "AddTemplateInput": {
        "type": "object",
        "properties": {
          "title": {
            "$ref": "#/definitions/DocumentTitle"
          },
          "file_content": {
            "$ref": "#/definitions/DocumentFileContent"
          },
          "format": {
            "$ref": "#/definitions/DocumentFormatDocx"
          },
          "data": {
            "$ref": "#/definitions/DocumentData"
          },
          "extra": {
            "$ref": "#/definitions/Extra"
          }
        },
        "required": [
          "file_content",
          "format"
        ]
      },
      "AddDocumentOutput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/DocumentId"
          }
        }
      },
      "AddTemplateDataInput": {
        "type": "object",
        "properties": {
          "field_name": {
            "$ref": "#/definitions/DocumentDataFieldName"
          },
          "value": {
            "$ref": "#/definitions/DocumentDataValue"
          }
        },
        "required": [
          "field_name",
          "value"
        ]
      },
      "AddRecipientSignerInput": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/definitions/RecipientTypeSigner"
          },
          "name": {
            "$ref": "#/definitions/RecipientName"
          },
          "email": {
            "$ref": "#/definitions/RecipientEmail"
          },
          "key": {
            "$ref": "#/definitions/RecipientKey"
          },
          "ceremony_creation": {
            "$ref": "#/definitions/RecipientCeremonyCreation"
          },
          "delivery_type": {
            "$ref": "#/definitions/RecipientDeliveryType"
          },
          "extra": {
            "$ref": "#/definitions/Extra"
          }
        },
        "required": [
          "type",
          "name",
          "email",
          "key"
        ]
      },
      "AddRecipientSignerOutput": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/RecipientId"
          },
          "name": {
            "$ref": "#/definitions/RecipientName"
          },
          "email": {
            "$ref": "#/definitions/RecipientEmail"
          },
          "key": {
            "$ref": "#/definitions/RecipientKey"
          },
          "ceremony_creation": {
            "$ref": "#/definitions/RecipientCeremonyCreation"
          },
          "delivery_type": {
            "$ref": "#/definitions/RecipientDeliveryType"
          }
        }
      },
      "AddSignaturePlaceInput": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/definitions/PlaceTypeSignature"
          },
          "key": {
            "$ref": "#/definitions/PlaceKey"
          },
          "recipient_key": {
            "$ref": "#/definitions/PlaceRecipientKey"
          },
          "height": {
            "$ref": "#/definitions/PlaceHeight"
          },
          "page": {
            "$ref": "#/definitions/PlacePage"
          },
          "top": {
            "$ref": "#/definitions/PlaceTop"
          },
          "left": {
            "$ref": "#/definitions/PlaceLeft"
          },
          "extra": {
            "$ref": "#/definitions/Extra"
          }
        },
        "required": [
          "type",
          "key",
          "recipient_key"
        ]
      },
      "AddInitialsPlaceInput": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/definitions/PlaceTypeInitials"
          },
          "key": {
            "$ref": "#/definitions/PlaceKey"
          },
          "recipient_key": {
            "$ref": "#/definitions/PlaceRecipientKey"
          },
          "height": {
            "$ref": "#/definitions/PlaceHeight"
          },
          "page": {
            "$ref": "#/definitions/PlacePage"
          },
          "top": {
            "$ref": "#/definitions/PlaceTop"
          },
          "left": {
            "$ref": "#/definitions/PlaceLeft"
          },
          "extra": {
            "$ref": "#/definitions/Extra"
          }
        },
        "required": [
          "type",
          "key",
          "recipient_key"
        ]
      },
      "AddTextInputPlaceInput": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/definitions/PlaceTypeTextInput"
          },
          "key": {
            "$ref": "#/definitions/PlaceKey"
          },
          "recipient_key": {
            "$ref": "#/definitions/PlaceRecipientKey"
          },
          "capture_as": {
            "$ref": "#/definitions/PlaceCaptureAs"
          },
          "hint": {
            "$ref": "#/definitions/PlaceHint"
          },
          "prompt": {
            "$ref": "#/definitions/PlacePrompt"
          },
          "requirement": {
            "$ref": "#/definitions/PlaceRequirement"
          },
          "format": {
            "$ref": "#/definitions/PlaceFormat"
          },
          "format_message": {
            "$ref": "#/definitions/PlaceFormatMessage"
          },
          "page": {
            "$ref": "#/definitions/PlacePage"
          },
          "top": {
            "$ref": "#/definitions/PlaceTop"
          },
          "left": {
            "$ref": "#/definitions/PlaceLeft"
          },
          "extra": {
            "$ref": "#/definitions/Extra"
          }
        },
        "required": [
          "type",
          "key",
          "recipient_key"
        ]
      },
      "AddTextPlaceInput": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/definitions/PlaceTypeText"
          },
          "key": {
            "$ref": "#/definitions/PlaceKey"
          },
          "value": {
            "$ref": "#/definitions/PlaceValue"
          },
          "font_size": {
            "$ref": "#/definitions/PlaceFontSize"
          },
          "font_color": {
            "$ref": "#/definitions/PlaceFontColor"
          },
          "page": {
            "$ref": "#/definitions/PlacePage"
          },
          "top": {
            "$ref": "#/definitions/PlaceTop"
          },
          "left": {
            "$ref": "#/definitions/PlaceLeft"
          },
          "extra": {
            "$ref": "#/definitions/Extra"
          }
        },
        "required": [
          "type",
          "key",
          "value"
        ]
      },
      "AddRecipientCompletedDatePlaceInput": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/definitions/PlaceTypeRecipientCompletedDate"
          },
          "key": {
            "$ref": "#/definitions/PlaceKey"
          },
          "recipient_key": {
            "$ref": "#/definitions/PlaceRecipientKey"
          },
          "date_format": {
            "$ref": "#/definitions/PlaceDateFormat"
          },
          "page": {
            "$ref": "#/definitions/PlacePage"
          },
          "top": {
            "$ref": "#/definitions/PlaceTop"
          },
          "left": {
            "$ref": "#/definitions/PlaceLeft"
          },
          "extra": {
            "$ref": "#/definitions/Extra"
          }
        },
        "required": [
          "type",
          "key",
          "recipient_key"
        ]
      },
      "AddEnvelopeCompletedDatePlaceInput": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/definitions/PlaceTypeEnvelopeCompletedDate"
          },
          "key": {
            "$ref": "#/definitions/PlaceKey"
          },
          "date_format": {
            "$ref": "#/definitions/PlaceDateFormat"
          },
          "page": {
            "$ref": "#/definitions/PlacePage"
          },
          "top": {
            "$ref": "#/definitions/PlaceTop"
          },
          "left": {
            "$ref": "#/definitions/PlaceLeft"
          },
          "extra": {
            "$ref": "#/definitions/Extra"
          }
        },
        "required": [
          "type",
          "key"
        ]
      },
      "CreateCeremonyEmailLinkInput": {
        "type": "object",
        "properties": {
          "authentication": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/definitions/CeremonyTypeEmailLink"
              }
            },
            "required": [
              "type"
            ]
          },
          "redirect_url": {
            "$ref": "#/definitions/CeremonyRedirectUrl"
          },
          "extra": {
            "$ref": "#/definitions/Extra"
          }
        },
        "required": [
          "authentication"
        ]
      },
      "CreateCeremonyEmailLinkOutput": {
        "type": "object",
        "properties": {
                                                                                 
        }
      },
      "CreateCeremonyCustomInput": {
        "type": "object",
        "properties": {
          "authentication": {
            "type": "object",
            "properties": {
              "type": {
                "$ref": "#/definitions/CeremonyTypeCustom"
              },
              "provider": {
                "$ref": "#/definitions/CeremonyProvider"
              },
              "data": {
                "$ref": "#/definitions/CeremonyData"
              }
            },
            "required": [
              "type",
              "provider",
              "data"
            ]
          },
          "redirect_url": {
            "$ref": "#/definitions/CeremonyRedirectUrl"
          },
          "extra": {
            "$ref": "#/definitions/Extra"
          }
        },
        "required": [
          "authentication"
        ]
      },
      "CreateCeremonyCustomOutput": {
        "type": "object",
        "properties": {
          "url": {
            "$ref": "#/definitions/CeremonyUrl"
          }
        }
      },
  
               
  
      "Extra": {
        "type": "string",
        "x-ms-summary": "Extra Properties",
        "description": "Extra properties for extensibility",
        "x-ms-visibility": "advanced"
      },
  
                 
  
      "EnvelopeId": {
        "type": "string",
        "x-ms-summary": "Envelope ID",
        "description": "The ID of the envelope."
      },
      "EnvelopeTitle": {
        "type": "string",
        "x-ms-summary": "Envelope Title",
        "description": "The title of this envelope. This may be shown to recipients.",
        "x-ms-visibility": "important"
      },
      "EnvelopeLabel": {
        "type": "string",
        "x-ms-summary": "Envelope Label",
        "description": "Custom label given to the envelope for easier identification. Labels are for internal use and are not shown to recipients.",
        "x-ms-visibility": "advanced"
      },
      "EnvelopeMessage": {
        "type": "string",
        "x-ms-summary": "Envelope Message",
        "description": "A message that will be sent to the recipients.",
        "x-ms-visibility": "important"
      },
      "EnvelopeRouting": {
        "type": "string",
        "x-ms-summary": "Envelope Routing",
        "description": "The order in which recipients sign the envelope. It can be parallel, where all recipients can sign simultaneously, or sequential, where recipients sign one after another.",
        "enum": [
          "parallel",
          "sequential"
        ],
        "x-ms-visibility": "advanced"
      },
      "EnvelopeLanguage": {
        "type": "string",
        "x-ms-summary": "Language",
        "description": "The default language to be used in the signing ceremony and deliverables. If not specified, the account's default language is used. https://signatureapi.com/docs/localization/language",
        "x-ms-visibility": "advanced"
      },
      "EnvelopeTimezone": {
        "type": "string",
        "x-ms-summary": "Time Zone",
        "description": "The time zone to be used for timestamps in deliverables. If not specified, the account's default timezone offset is used. https://signatureapi.com/docs/localization/timezone",
        "x-ms-visibility": "advanced"
      },
      "EnvelopeTimestampFormat": {
        "type": "string",
        "x-ms-summary": "Timestamp Format",
        "description": "The date and time format to be used in timestamps for deliverables. If not specified, the account's default timestamp format is used. https://signatureapi.com/docs/localization/timestamp_format",
        "x-ms-visibility": "advanced"
      },
      "EnvelopeSender": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "x-ms-summary": "Sender Name",
            "description": "The name of the sender.",
            "x-ms-visibility": "important"
          },
          "email": {
            "type": "string",
            "x-ms-summary": "Sender Email",
            "description": "The email address of the sender.",
            "x-ms-visibility": "important"
          }
        }
      },
      "EnvelopeStatus": {
        "type": "string",
        "x-ms-summary": "Envelope Status",
        "description": "The status of the envelope.",
        "x-ms-visibility": "important"
      },
      "EnvelopeMode": {
        "type": "string",
        "enum": [
          "live",
          "test"
        ],
        "x-ms-summary": "Envelope Mode",
        "description": "Test mode envelopes are non-binding and not billed."
      },
      "EnvelopeTopics": {
        "type": "array",
        "x-ms-summary": "Envelope Topics",
        "description": "Use to classify envelopes and filter webhook notifications.",
        "items": {
          "type": "string"
        },
        "maxItems": 10
      },
      "EnvelopeAttestation": {
        "type": "string",
        "enum": [
          "mx_nom151"
        ],
        "x-ms-summary": "Envelope Attestation",
        "description": "Regulatory or compliance attestation"
      },
      "EnvelopeDeliverable": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "x-ms-summary": "Deliverable ID",
            "description": "The ID of the deliverable. Use this to download a signed copy of the envelope.",
            "x-ms-visibility": "important"
          }
        }
      },
      "EnvelopeCompletedAt": {
        "type": "string",
        "format": "date-time",
        "x-ms-summary": "Envelope Completed At",
        "description": "Time when all the recipients completed the envelope."
      },
  
                 
  
      "DocumentId": {
        "type": "string",
        "x-ms-summary": "Document ID",
        "description": "The ID of the document"
      },
      "DocumentTitle": {
        "type": "string",
        "x-ms-summary": "Document Title",
        "description": "The title of this document. This may be shown to recipients.",
        "x-ms-visibility": "important"
      },
      "DocumentFileContent": {
        "type": "string",
        "format": "byte",
        "x-ms-summary": "File Content",
        "description": "The content of the document file.",
        "x-ms-visibility": "important"
      },
      "DocumentFormatPdf": {
        "type": "string",
        "x-ms-summary": "File Format",
        "description": "The format of the document file.",
        "x-ms-visibility": "internal",
        "default": "pdf"
      },
      "DocumentFormatDocx": {
        "type": "string",
        "x-ms-summary": "File Format",
        "description": "The format of the document file.",
        "x-ms-visibility": "internal",
        "default": "docx"
      },
      "DocumentData": {
        "type": "array",
        "x-ms-summary": "Template Data",
        "description": "Field: Value pair containing data to fill into the template.",
        "x-ms-visibility": "important",
        "items": {
          "type": "string"
        }
      },
      "DocumentDataFieldName": {
        "type": "string",
        "x-ms-summary": "Field Name",
        "description": "The name of the field in the template.",
        "x-ms-visibility": "important"
      },
      "DocumentDataValue": {
        "type": "string",
        "x-ms-summary": "Value",
        "description": "The value for the field in the template.",
        "x-ms-visibility": "important"
      },
  
              
  
      "PlacePage": {
        "type": "number",
        "x-ms-summary": "Page Number",
        "description": "The page number to position this place.",
        "x-ms-visibility": "advanced"
      },
      "PlaceTop": {
        "type": "number",
        "x-ms-summary": "Distance From Top",
        "description": "The distance (in points) from the top of the page to the bottom of the place.",
        "x-ms-visibility": "advanced"
      },
      "PlaceLeft": {
        "type": "number",
        "x-ms-summary": "Distance From Left",
        "description": "The distance (in points) from the left of the page to the place.",
        "x-ms-visibility": "advanced"
      },
      "PlaceTypeSignature": {
        "type": "string",
        "x-ms-summary": "Place Type",
        "description": "The type of the place.",
        "x-ms-visibility": "internal",
        "default": "signature"
      },
      "PlaceTypeInitials": {
        "type": "string",
        "x-ms-summary": "Place Type",
        "description": "The type of the place.",
        "x-ms-visibility": "internal",
        "default": "initials"
      },
      "PlaceTypeTextInput": {
        "type": "string",
        "x-ms-summary": "Place Type",
        "description": "The type of the place.",
        "x-ms-visibility": "internal",
        "default": "text_input"
      },
      "PlaceTypeText": {
        "type": "string",
        "x-ms-summary": "Place Type",
        "description": "The type of the place.",
        "x-ms-visibility": "internal",
        "default": "text"
      },
      "PlaceTypeRecipientCompletedDate": {
        "type": "string",
        "x-ms-summary": "Place Type",
        "description": "The type of the place.",
        "x-ms-visibility": "internal",
        "default": "recipient_completed_date"
      },
      "PlaceTypeEnvelopeCompletedDate": {
        "type": "string",
        "x-ms-summary": "Place Type",
        "description": "The type of the place.",
        "x-ms-visibility": "internal",
        "default": "envelope_completed_date"
      },
      "PlaceKey": {
        "type": "string",
        "x-ms-summary": "Place Key",
        "description": "A key that identifies this place within the document.",
        "x-ms-visibility": "important"
      },
      "PlaceRecipientKey": {
        "type": "string",
        "x-ms-summary": "Recipient Key",
        "description": "The recipient's key this place refers to.",
        "x-ms-visibility": "important"
      },
      "PlaceHeight": {
        "type": "number",
        "x-ms-summary": "Place Height",
        "description": "Set a custom height, the width adjusts proportionally.",
        "x-ms-visibility": "advanced"
      },
      "PlaceCaptureAs": {
        "type": "string",
        "x-ms-summary": "Capture As",
        "description": "A key that stores the recipient's input and is included in the envelope captures.",
        "x-ms-visibility": "advanced"
      },
      "PlaceHint": {
        "type": "string",
        "x-ms-summary": "Hint",
        "description": "A tooltip message shown over the input field for the recipient.",
        "x-ms-visibility": "important"
      },
      "PlacePrompt": {
        "type": "string",
        "x-ms-summary": "Prompt",
        "description": "A placeholder message shown inside the input text field during the signing ceremony.",
        "x-ms-visibility": "important"
      },
      "PlaceRequirement": {
        "type": "string",
        "x-ms-summary": "Requirement",
        "description": "Specifies whether the recipient must fill this field to complete the signing ceremony.",
        "x-ms-visibility": "important",
        "enum": [
          "required",
          "optional"
        ],
        "default": "required"
      },
      "PlaceFormat": {
        "type": "string",
        "x-ms-summary": "Format",
        "description": "Specifies the valid format for user input. Refer to the documentation for allowed values.",
        "x-ms-visibility": "advanced"
      },
      "PlaceFormatMessage": {
        "type": "string",
        "x-ms-summary": "Format Message",
        "description": "The message displayed when the user’s input does not match the required format.",
        "x-ms-visibility": "advanced"
      },
      "PlaceFontSize": {
        "type": "number",
        "x-ms-summary": "Font Size",
        "description": "The font size in points.",
        "x-ms-visibility": "advanced"
      },
      "PlaceFontColor": {
        "type": "string",
        "x-ms-summary": "Font Color",
        "description": "The font color in hexadecimal notation.",
        "x-ms-visibility": "advanced"
      },
      "PlaceValue": {
        "type": "string",
        "x-ms-summary": "Value",
        "description": "The value for this text place.",
        "x-ms-visibility": "important"
      },
      "PlaceDateFormat": {
        "type": "string",
        "x-ms-summary": "Date Format",
        "description": "Defines the format of the date and time. Refer to the documentation for allowed values.",
        "x-ms-visibility": "advanced"
      },
  
                  
  
      "RecipientId": {
        "type": "string",
        "x-ms-summary": "Recipient Id",
        "description": "The ID of the recipient."
      },
      "RecipientType": {
        "type": "string",
        "x-ms-summary": "Recipient Type",
        "description": "The type of the recipient."
      },
      "RecipientTypeSigner": {
        "type": "string",
        "x-ms-summary": "Recipient Type",
        "description": "The type of the recipient.",
        "x-ms-visibility": "internal",
        "default": "signer"
      },
      "RecipientName": {
        "type": "string",
        "x-ms-summary": "Recipient Name",
        "description": "The name of the recipient.",
        "x-ms-visibility": "important",
        "maxLength": 100
      },
      "RecipientEmail": {
        "type": "string",
        "x-ms-summary": "Recipient Email",
        "description": "The email address of the recipient.",
        "x-ms-visibility": "important",
        "maxLength": 320
      },
      "RecipientKey": {
        "type": "string",
        "x-ms-summary": "Recipient Key",
        "description": "A key that identifies a recipient within an envelope.",
        "x-ms-visibility": "important",
        "maxLength": 32,
        "pattern": "[a-z][a-z0-9_]+"
      },
      "RecipientStatus": {
        "type": "string",
        "x-ms-summary": "Recipient Status",
        "description": "The status of the recipient."
      },
      "RecipientCeremonyCreation": {
        "type": "string",
        "x-ms-summary": "Recipient Ceremony Creation",
        "description": "How the ceremonies for a recipient are created.",
        "enum": [
          "automatic",
          "manual"
        ],
        "x-ms-visibility": "advanced"
      },
      "RecipientDeliveryType": {
        "type": "string",
        "x-ms-summary": "Recipient Delivery Type",
        "description": "How the deliverable is sent to the recipient.",
        "enum": [
          "email",
          "none"
        ],
        "x-ms-visibility": "advanced"
      },
      "RecipientCompletedAt": {
        "type": "string",
        "format": "date-time",
        "x-ms-summary": "Recipient Completed At",
        "description": "Time when the recipient completed the envelope."
      },
  
                    
  
      "DeliverableId": {
        "type": "string",
        "x-ms-summary": "Deliverable Id",
        "description": "The ID of the deliverable."
      },
      "DeliverableType": {
        "type": "string",
        "x-ms-summary": "Deliverable Type",
        "description": "The type of the deliverable.",
        "enum": [
          "audit_log"
        ]
      },
      "DeliverableStatus": {
        "type": "string",
        "x-ms-summary": "Deliverable Status",
        "description": "The status of the deliverable.",
        "enum": [
          "processing",
          "generated",
          "failed"
        ]
      },
      "DeliverableFileContent": {
        "type": "string",
        "format": "byte",
        "x-ms-summary": "File Content",
        "description": "The file content of the deliverable. Use it to save a signed copy of the envelope."
      },
  
                 
  
      "CeremonyTypeEmailLink": {
        "type": "string",
        "x-ms-summary": "Ceremony Type",
        "description": "The type of the ceremony",
        "x-ms-visibility": "internal",
        "default": "email_link"
      },
      "CeremonyTypeCustom": {
        "type": "string",
        "x-ms-summary": "Ceremony Type",
        "description": "The type of the ceremony",
        "x-ms-visibility": "internal",
        "default": "custom"
      },
      "CeremonyProvider": {
        "type": "string",
        "x-ms-summary": "Authentication Provider",
        "description": "The name of the authentication provider. This value is arbitrary and will appear in the audit logs of the envelope.",
        "x-ms-visibility": "important"
      },
      "CeremonyData": {
        "type": "array",
        "x-ms-summary": "Authentication Data",
        "description": "Key: Value pair containing authentication metadata. These details will be included in the envelope's audit logs.",
        "x-ms-visibility": "important",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "CeremonyRedirectUrl": {
        "type": "string",
        "x-ms-summary": "Redirect URL",
        "description": "A URL to redirect the recipient to after a ceremony is finished. Learn more in: https://signatureapi.com/docs/resources/ceremonies/redirect-url",
        "x-ms-visibility": "advanced"
      },
      "CeremonyUrl": {
        "type": "string",
        "x-ms-summary": "Ceremony URL",
        "description": "The URL the recipient must visit to initiate the ceremony"
      },
  
              
  
      "CaptureValue": {
        "type": "string",
        "x-ms-summary": "Capture Value",
        "description": "The value of the recipient input capture"
      },
  
                                 
  
      "EndpointInput": {
        "type": "object",
        "properties": {
          "topics": {
            "$ref": "#/definitions/EndpointTopics"
          },
          "url": {
            "$ref": "#/definitions/EndpointUrl"
          }
        },
        "required": [
          "url"
        ]
      },
      "EndpointUrl": {
        "type": "string",
        "x-ms-summary": "Endpoint URL",
        "x-ms-notification-url": true,
        "x-ms-visibility": "internal"
      },
      "EndpointTopics": {
        "type": "array",
        "x-ms-summary": "Topics",
        "description": "Use to classify envelopes and filter webhook notifications.",
        "items": {
          "type": "string"
        },
        "x-ms-visibility": "important"
      },
      "NotificationForEnvelopeCreated": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/EventId"
          },
          "timestamp": {
            "$ref": "#/definitions/EventTimestamp"
          },
          "type": {
            "$ref": "#/definitions/EventType"
          },
          "data": {
            "type": "object",
            "properties": {
              "envelope_id": {
                "$ref": "#/definitions/EventEnvelopeId"
              }
            }
          }
        }
      },
      "NotificationForEnvelopeStarted": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/EventId"
          },
          "timestamp": {
            "$ref": "#/definitions/EventTimestamp"
          },
          "type": {
            "$ref": "#/definitions/EventType"
          },
          "data": {
            "type": "object",
            "properties": {
              "envelope_id": {
                "$ref": "#/definitions/EventEnvelopeId"
              }
            }
          }
        }
      },
      "NotificationForEnvelopeCompleted": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/EventId"
          },
          "timestamp": {
            "$ref": "#/definitions/EventTimestamp"
          },
          "type": {
            "$ref": "#/definitions/EventType"
          },
          "data": {
            "type": "object",
            "properties": {
              "envelope_id": {
                "$ref": "#/definitions/EventEnvelopeId"
              }
            }
          }
        }
      },
      "NotificationForEnvelopeFailed": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/EventId"
          },
          "timestamp": {
            "$ref": "#/definitions/EventTimestamp"
          },
          "type": {
            "$ref": "#/definitions/EventType"
          },
          "data": {
            "type": "object",
            "properties": {
              "envelope_id": {
                "$ref": "#/definitions/EventEnvelopeId"
              },
              "detail": {
                "type": "string",
                "x-ms-summary": "Detail",
                "description": "Information about the failure."
              }
            }
          }
        }
      },
      "NotificationForEnvelopeCanceled": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/EventId"
          },
          "timestamp": {
            "$ref": "#/definitions/EventTimestamp"
          },
          "type": {
            "$ref": "#/definitions/EventType"
          },
          "data": {
            "type": "object",
            "properties": {
              "envelope_id": {
                "$ref": "#/definitions/EventEnvelopeId"
              }
            }
          }
        }
      },
      "NotificationForRecipientReleased": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/EventId"
          },
          "timestamp": {
            "$ref": "#/definitions/EventTimestamp"
          },
          "type": {
            "$ref": "#/definitions/EventType"
          },
          "data": {
            "type": "object",
            "properties": {
              "envelope_id": {
                "$ref": "#/definitions/EventEnvelopeId"
              },
              "object_id": {
                "$ref": "#/definitions/EventRecipientId"
              },
              "recipient_type": {
                "$ref": "#/definitions/EventRecipientType"
              },
              "recipient_key": {
                "$ref": "#/definitions/EventRecipientKey"
              }
            }
          }
        }
      },
      "NotificationForRecipientSent": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/EventId"
          },
          "timestamp": {
            "$ref": "#/definitions/EventTimestamp"
          },
          "type": {
            "$ref": "#/definitions/EventType"
          },
          "data": {
            "type": "object",
            "properties": {
              "envelope_id": {
                "$ref": "#/definitions/EventEnvelopeId"
              },
              "object_id": {
                "$ref": "#/definitions/EventRecipientId"
              },
              "recipient_type": {
                "$ref": "#/definitions/EventRecipientType"
              },
              "recipient_key": {
                "$ref": "#/definitions/EventRecipientKey"
              }
            }
          }
        }
      },
      "NotificationForRecipientCompleted": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/EventId"
          },
          "timestamp": {
            "$ref": "#/definitions/EventTimestamp"
          },
          "type": {
            "$ref": "#/definitions/EventType"
          },
          "data": {
            "type": "object",
            "properties": {
              "envelope_id": {
                "$ref": "#/definitions/EventEnvelopeId"
              },
              "object_id": {
                "$ref": "#/definitions/EventRecipientId"
              },
              "recipient_type": {
                "$ref": "#/definitions/EventRecipientType"
              },
              "recipient_key": {
                "$ref": "#/definitions/EventRecipientKey"
              }
            }
          }
        }
      },
      "NotificationForRecipientRejected": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/EventId"
          },
          "timestamp": {
            "$ref": "#/definitions/EventTimestamp"
          },
          "type": {
            "$ref": "#/definitions/EventType"
          },
          "data": {
            "type": "object",
            "properties": {
              "envelope_id": {
                "$ref": "#/definitions/EventEnvelopeId"
              },
              "object_id": {
                "$ref": "#/definitions/EventRecipientId"
              },
              "recipient_type": {
                "$ref": "#/definitions/EventRecipientType"
              },
              "recipient_key": {
                "$ref": "#/definitions/EventRecipientKey"
              },
              "reason": {
                "type": "string",
                "x-ms-summary": "Reason",
                "description": "The recipient's explanation for the rejection."
              }
            }
          }
        }
      },
      "NotificationForRecipientBounced": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/EventId"
          },
          "timestamp": {
            "$ref": "#/definitions/EventTimestamp"
          },
          "type": {
            "$ref": "#/definitions/EventType"
          },
          "data": {
            "type": "object",
            "properties": {
              "envelope_id": {
                "$ref": "#/definitions/EventEnvelopeId"
              },
              "object_id": {
                "$ref": "#/definitions/EventRecipientId"
              },
              "recipient_type": {
                "$ref": "#/definitions/EventRecipientType"
              },
              "recipient_key": {
                "$ref": "#/definitions/EventRecipientKey"
              },
              "detail": {
                "type": "string",
                "x-ms-summary": "Detail",
                "description": "Information about the bounce."
              }
            }
          }
        }
      },
      "NotificationForRecipientFailed": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/EventId"
          },
          "timestamp": {
            "$ref": "#/definitions/EventTimestamp"
          },
          "type": {
            "$ref": "#/definitions/EventType"
          },
          "data": {
            "type": "object",
            "properties": {
              "envelope_id": {
                "$ref": "#/definitions/EventEnvelopeId"
              },
              "object_id": {
                "$ref": "#/definitions/EventRecipientId"
              },
              "recipient_type": {
                "$ref": "#/definitions/EventRecipientType"
              },
              "recipient_key": {
                "$ref": "#/definitions/EventRecipientKey"
              },
              "detail": {
                "type": "string",
                "x-ms-summary": "Detail",
                "description": "Information about the failure."
              }
            }
          }
        }
      },
      "NotificationForRecipientReplaced": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/EventId"
          },
          "timestamp": {
            "$ref": "#/definitions/EventTimestamp"
          },
          "type": {
            "$ref": "#/definitions/EventType"
          },
          "data": {
            "type": "object",
            "properties": {
              "envelope_id": {
                "$ref": "#/definitions/EventEnvelopeId"
              },
              "object_id": {
                "$ref": "#/definitions/EventRecipientId"
              },
              "recipient_type": {
                "$ref": "#/definitions/EventRecipientType"
              },
              "recipient_key": {
                "$ref": "#/definitions/EventRecipientKey"
              },
              "new_recipient_id": {
                "type": "string",
                "x-ms-summary": "New Recipient ID",
                "description": "The ID of the new recipient."
              }
            }
          }
        }
      },
      "NotificationForRecipientResent": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/EventId"
          },
          "timestamp": {
            "$ref": "#/definitions/EventTimestamp"
          },
          "type": {
            "$ref": "#/definitions/EventType"
          },
          "data": {
            "type": "object",
            "properties": {
              "envelope_id": {
                "$ref": "#/definitions/EventEnvelopeId"
              },
              "object_id": {
                "$ref": "#/definitions/EventRecipientId"
              },
              "recipient_type": {
                "$ref": "#/definitions/EventRecipientType"
              },
              "recipient_key": {
                "$ref": "#/definitions/EventRecipientKey"
              }
            }
          }
        }
      },
      "NotificationForDeliverableGenerated": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/EventId"
          },
          "timestamp": {
            "$ref": "#/definitions/EventTimestamp"
          },
          "type": {
            "$ref": "#/definitions/EventType"
          },
          "data": {
            "type": "object",
            "properties": {
              "envelope_id": {
                "$ref": "#/definitions/EventEnvelopeId"
              },
              "object_id": {
                "$ref": "#/definitions/EventDeliverableId"
              }
            }
          }
        }
      },
      "NotificationForDeliverableFailed": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/definitions/EventId"
          },
          "timestamp": {
            "$ref": "#/definitions/EventTimestamp"
          },
          "type": {
            "$ref": "#/definitions/EventType"
          },
          "data": {
            "type": "object",
            "properties": {
              "envelope_id": {
                "$ref": "#/definitions/EventEnvelopeId"
              },
              "object_id": {
                "$ref": "#/definitions/EventDeliverableId"
              },
              "detail": {
                "type": "string",
                "x-ms-summary": "Detail",
                "description": "Information about the failure."
              }
            }
          }
        }
      },
      "EventId": {
        "type": "string",
        "x-ms-summary": "Event ID",
        "description": "The ID of the event."
      },
      "EventTimestamp": {
        "type": "string",
        "format": "date-time",
        "x-ms-summary": "Event Timestamp",
        "description": "The date and time of the event, in ISO 8601 format."
      },
      "EventType": {
        "type": "string",
        "x-ms-summary": "Event Type",
        "description": "The type of the event."
      },
      "EventEnvelopeId": {
        "type": "string",
        "x-ms-summary": "Envelope ID",
        "description": "The ID of the envelope this event refers to."
      },
      "EventRecipientId": {
        "type": "string",
        "x-ms-summary": "Recipient ID",
        "description": "The ID of the recipient this event refers to."
      },
      "EventRecipientType": {
        "type": "string",
        "x-ms-summary": "Recipient Type",
        "description": "The type of recipient this event refers to."
      },
      "EventRecipientKey": {
        "type": "string",
        "x-ms-summary": "Recipient Key",
        "description": "The key of recipient this event refers to."
      },
      "EventDeliverableId": {
        "type": "string",
        "x-ms-summary": "Deliverable ID",
        "description": "The ID of the deliverable this event refers to."
      }
  
    }
  }
  