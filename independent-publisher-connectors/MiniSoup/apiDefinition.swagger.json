{
  "swagger": "2.0",
  "info": {
    "title": "MiniSoup HTML Parser",
    "description": "A lightweight HTML parsing library inspired by Beautiful Soup, providing capabilities for HTML element analysis and extraction",
    "version": "1.0",
    "contact": {
      "name": "MiniSoup Support",
      "url": "https://github.com/DEmodoriGatsuO/MiniSoup",
      "email": "demodori.gatsuo@gmail.com"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "host": "api.example.com",
  "basePath": "/api",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/fetch-html": {
      "post": {
        "summary": "Fetch HTML Content",
        "operationId": "FetchHTML",
        "description": "Fetches HTML content from a specified URL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "operation": {
                  "type": "string",
                  "description": "Operation type (internal parameter)",
                  "default": "fetch_html",
                  "x-ms-visibility": "internal"
                },
                "url": {
                  "type": "string",
                  "description": "URL to fetch HTML content from",
                  "x-ms-visibility": "important",
                  "example": "https://example.com"
                }
              },
              "required": [
                "operation",
                "url"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates whether the operation was successful",
                  "example": true
                },
                "html": {
                  "type": "string",
                  "description": "HTML content retrieved from the specified URL",
                  "example": "<html><head><title>Example Domain</title></head><body><h1>Example Domain</h1><p>This domain is for use in illustrative examples in documents.</p></body></html>"
                }
              },
              "required": [
                "success",
                "html"
              ]
            }
          },
          "default": {
            "description": "Error response"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/select": {
      "post": {
        "summary": "Select HTML Elements",
        "operationId": "SelectElements",
        "description": "Selects HTML elements matching the provided selector",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "operation": {
                  "type": "string",
                  "description": "Operation type (internal parameter)",
                  "default": "select",
                  "x-ms-visibility": "internal"
                },
                "html": {
                  "type": "string",
                  "description": "HTML content to be parsed",
                  "x-ms-visibility": "important",
                  "example": "<html><body><div class='content'><h1>Title</h1><p>Paragraph 1</p><p>Paragraph 2</p></div></body></html>"
                },
                "selector": {
                  "type": "string",
                  "description": "CSS selector or XPath for targeting elements",
                  "x-ms-visibility": "important",
                  "example": "p"
                },
                "selector_type": {
                  "type": "string",
                  "description": "Type of selector to use",
                  "enum": [
                    "css",
                    "xpath"
                  ],
                  "default": "css",
                  "x-ms-visibility": "advanced"
                }
              },
              "required": [
                "operation",
                "html",
                "selector"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates whether the operation was successful",
                  "example": true
                },
                "elements": {
                  "type": "array",
                  "description": "Array of HTML elements that match the specified selector",
                  "items": {
                    "$ref": "#/definitions/HtmlElement"
                  },
                  "example": [
                    {
                      "tag": "p",
                      "outerHtml": "<p>Paragraph 1</p>",
                      "innerHtml": "Paragraph 1",
                      "innerText": "Paragraph 1",
                      "attributes": {},
                      "isSelfClosing": false
                    },
                    {
                      "tag": "p",
                      "outerHtml": "<p>Paragraph 2</p>",
                      "innerHtml": "Paragraph 2",
                      "innerText": "Paragraph 2",
                      "attributes": {},
                      "isSelfClosing": false
                    }
                  ]
                },
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of elements found",
                  "example": 2
                }
              },
              "required": [
                "success",
                "elements",
                "count"
              ]
            }
          },
          "default": {
            "description": "Error response"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/extract": {
      "post": {
        "summary": "Extract Values from HTML Elements",
        "operationId": "ExtractValues",
        "description": "Extracts specific attribute values from HTML elements matching the provided selector",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "operation": {
                  "type": "string",
                  "description": "Operation type (internal parameter)",
                  "default": "extract",
                  "x-ms-visibility": "internal"
                },
                "html": {
                  "type": "string",
                  "description": "HTML content to be parsed",
                  "x-ms-visibility": "important",
                  "example": "<html><body><a href='https://example.com' title='Example'>Link 1</a><a href='https://example.org' title='Example 2'>Link 2</a></body></html>"
                },
                "selector": {
                  "type": "string",
                  "description": "CSS selector or XPath for targeting elements",
                  "x-ms-visibility": "important",
                  "example": "a"
                },
                "attribute": {
                  "type": "string",
                  "description": "Attribute to extract from selected elements. Use 'text' for inner text, 'html' for inner HTML, or specific attribute name",
                  "x-ms-visibility": "important",
                  "example": "href"
                },
                "selector_type": {
                  "type": "string",
                  "description": "Type of selector to use",
                  "enum": [
                    "css",
                    "xpath"
                  ],
                  "default": "css",
                  "x-ms-visibility": "advanced"
                }
              },
              "required": [
                "operation",
                "html",
                "selector",
                "attribute"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates whether the operation was successful",
                  "example": true
                },
                "values": {
                  "type": "array",
                  "description": "Array of extracted values from the matching elements",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "https://example.com",
                    "https://example.org"
                  ]
                },
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of values extracted",
                  "example": 2
                }
              },
              "required": [
                "success",
                "values",
                "count"
              ]
            }
          },
          "default": {
            "description": "Error response"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/find-all": {
      "post": {
        "summary": "Find All Matching Elements",
        "operationId": "FindAllElements",
        "description": "Finds all HTML elements matching the specified tag name and optional attributes",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "operation": {
                  "type": "string",
                  "description": "Operation type (internal parameter)",
                  "default": "find_all",
                  "x-ms-visibility": "internal"
                },
                "html": {
                  "type": "string",
                  "description": "HTML content to be parsed",
                  "x-ms-visibility": "important",
                  "example": "<html><body><div class='container'><span class='item'>Item 1</span><span class='item featured'>Item 2</span><span>Item 3</span></div></body></html>"
                },
                "tag_name": {
                  "type": "string",
                  "description": "HTML tag name to search for",
                  "x-ms-visibility": "important",
                  "example": "span"
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Filter by element ID"
                    },
                    "class": {
                      "type": "string",
                      "description": "Filter by element class",
                      "example": "item"
                    }
                  },
                  "additionalProperties": true,
                  "description": "Filter criteria for attributes",
                  "x-ms-visibility": "advanced"
                }
              },
              "required": [
                "operation",
                "html",
                "tag_name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates whether the operation was successful",
                  "example": true
                },
                "elements": {
                  "type": "array",
                  "description": "Array of HTML elements that match the specified tag name and attributes",
                  "items": {
                    "$ref": "#/definitions/HtmlElement"
                  },
                  "example": [
                    {
                      "tag": "span",
                      "outerHtml": "<span class='item'>Item 1</span>",
                      "innerHtml": "Item 1",
                      "innerText": "Item 1",
                      "attributes": {
                        "class": "item"
                      },
                      "isSelfClosing": false
                    },
                    {
                      "tag": "span",
                      "outerHtml": "<span class='item featured'>Item 2</span>",
                      "innerHtml": "Item 2",
                      "innerText": "Item 2",
                      "attributes": {
                        "class": "item featured"
                      },
                      "isSelfClosing": false
                    }
                  ]
                },
                "count": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Number of elements found",
                  "example": 2
                }
              },
              "required": [
                "success",
                "elements",
                "count"
              ]
            }
          },
          "default": {
            "description": "Error response"
          }
        },
        "x-ms-visibility": "important"
      }
    },
    "/parse-table": {
      "post": {
        "summary": "Parse HTML Table",
        "operationId": "ParseTable",
        "description": "Parses an HTML table into structured data with headers and rows",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "operation": {
                  "type": "string",
                  "description": "Operation type (internal parameter)",
                  "default": "parse_table",
                  "x-ms-visibility": "internal"
                },
                "html": {
                  "type": "string",
                  "description": "HTML content containing the table",
                  "x-ms-visibility": "important",
                  "example": "<html><body><table><tr><th>Name</th><th>Age</th><th>City</th></tr><tr><td>John</td><td>30</td><td>New York</td></tr><tr><td>Jane</td><td>25</td><td>Boston</td></tr></table></body></html>"
                },
                "table_selector": {
                  "type": "string",
                  "description": "CSS selector to locate the HTML table element",
                  "default": "table",
                  "x-ms-visibility": "advanced",
                  "example": "table"
                },
                "header_rows_exist": {
                  "type": "boolean",
                  "description": "Whether the table has header rows",
                  "default": true,
                  "x-ms-visibility": "advanced",
                  "example": true
                }
              },
              "required": [
                "operation",
                "html"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean",
                  "description": "Indicates whether the operation was successful",
                  "example": true
                },
                "data": {
                  "type": "object",
                  "description": "Parsed table data structure",
                  "properties": {
                    "Headers": {
                      "type": "array",
                      "description": "Column headers extracted from the table",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Name",
                        "Age",
                        "City"
                      ]
                    },
                    "Rows": {
                      "type": "array",
                      "description": "Table rows, each containing an array of cell values",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "example": [
                        [
                          "John",
                          "30",
                          "New York"
                        ],
                        [
                          "Jane",
                          "25",
                          "Boston"
                        ]
                      ]
                    }
                  },
                  "required": [
                    "Headers",
                    "Rows"
                  ],
                  "example": {
                    "Headers": [
                      "Name",
                      "Age",
                      "City"
                    ],
                    "Rows": [
                      [
                        "John",
                        "30",
                        "New York"
                      ],
                      [
                        "Jane",
                        "25",
                        "Boston"
                      ]
                    ]
                  }
                }
              },
              "required": [
                "success",
                "data"
              ]
            }
          },
          "default": {
            "description": "Error response"
          }
        },
        "x-ms-visibility": "important"
      }
    }
  },
  "definitions": {
    "HtmlElement": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string",
          "description": "The HTML tag name of the element (e.g., 'div', 'span', 'a')",
          "example": "div"
        },
        "outerHtml": {
          "type": "string",
          "description": "The complete HTML of the element including the element itself",
          "example": "<div class='content'>Example text</div>"
        },
        "innerHtml": {
          "type": "string",
          "description": "The HTML content inside the element, which may include other elements",
          "example": "Example text"
        },
        "innerText": {
          "type": "string",
          "description": "The text content inside the element with all HTML tags removed",
          "example": "Example text"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": true,
          "description": "All attributes of the element as name-value pairs",
          "example": {
            "class": "content",
            "id": "main",
            "data-test": "example"
          }
        },
        "isSelfClosing": {
          "type": "boolean",
          "description": "Indicates whether the element is a self-closing tag (e.g., <img>, <br>)",
          "example": false
        }
      },
      "required": [
        "tag",
        "outerHtml",
        "innerHtml",
        "innerText",
        "attributes",
        "isSelfClosing"
      ],
      "description": "Represents an HTML element with its properties and attributes"
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {},
  "security": [],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://github.com/DEmodoriGatsuO/MiniSoup"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://github.com/DEmodoriGatsuO/MiniSoup/blob/main/PRIVACY.md"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data;Website"
    }
  ],
  "x-ms-scriptOperations": ["FetchHTML", "SelectElements", "ExtractValues", "FindAllElements", "ParseTable"]
}
