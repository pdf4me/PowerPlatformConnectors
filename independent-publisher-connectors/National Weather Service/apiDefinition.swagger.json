{
  "swagger": "2.0",
  "info": {
    "title": "National Weather Service",
    "description": "The National Weather Service (NWS) web service allows developers access to critical forecasts, alerts, and observations, along with other weather data. The web service was designed with a cache-friendly approach that expires content based upon the information life cycle.",
    "version": "1.0.0",
    "contact": {
      "name": "Troy Taylor",
      "url": "https://www.hitachisolutions.com",
      "email": "ttaylor@hitachisolutions.com"
    }
  },
  "host": "api.weather.gov",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/alerts": {
      "get": {
        "description": "Retrieve a list of alerts.",
        "summary": "Get all alerts",
        "operationId": "Alerts_query",
        "parameters": [
          {
            "$ref": "#/parameters/QueryStartTime"
          },
          {
            "$ref": "#/parameters/QueryEndTime"
          },
          {
            "$ref": "#/parameters/AlertStatus"
          },
          {
            "$ref": "#/parameters/AlertMessageType"
          },
          {
            "$ref": "#/parameters/AlertEventName"
          },
          {
            "$ref": "#/parameters/AlertCode"
          },
          {
            "$ref": "#/parameters/AlertArea"
          },
          {
            "$ref": "#/parameters/AlertPoint"
          },
          {
            "$ref": "#/parameters/AlertRegion"
          },
          {
            "$ref": "#/parameters/AlertRegionType"
          },
          {
            "$ref": "#/parameters/AlertZone"
          },
          {
            "$ref": "#/parameters/AlertUrgency"
          },
          {
            "$ref": "#/parameters/AlertSeverity"
          },
          {
            "$ref": "#/parameters/AlertCertainty"
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/PaginationCursor"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AlertCollection"
          },
          "301": {
            "description": "Certain common queries may be redirected to discrete URLs."
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/alerts/active": {
      "get": {
        "description": "Retrieve a list of active alerts.",
        "summary": "Get active alerts",
        "operationId": "Alerts_active",
        "parameters": [
          {
            "$ref": "#/parameters/AlertStatus"
          },
          {
            "$ref": "#/parameters/AlertMessageType"
          },
          {
            "$ref": "#/parameters/AlertEventName"
          },
          {
            "$ref": "#/parameters/AlertCode"
          },
          {
            "$ref": "#/parameters/AlertArea"
          },
          {
            "$ref": "#/parameters/AlertPoint"
          },
          {
            "$ref": "#/parameters/AlertRegion"
          },
          {
            "$ref": "#/parameters/AlertRegionType"
          },
          {
            "$ref": "#/parameters/AlertZone"
          },
          {
            "$ref": "#/parameters/AlertUrgency"
          },
          {
            "$ref": "#/parameters/AlertSeverity"
          },
          {
            "$ref": "#/parameters/AlertCertainty"
          },
          {
            "$ref": "#/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AlertCollection"
          },
          "301": {
            "description": "Certain common queries may be redirected to discrete URLs."
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/alerts/active/count": {
      "get": {
        "description": "Retrieve a count of active alerts.",
        "summary": "Get active alert counts",
        "operationId": "Alerts_active_count",
        "responses": {
          "200": {
            "description": "A data structure showing the counts of active alerts broken down by various categories.",
            "schema": {
              "type": "object",
              "properties": {
                "total": {
                  "description": "The total number of active alerts.",
                  "title": "Total",
                  "minimum": 0,
                  "type": "integer"
                },
                "land": {
                  "description": "The total number of active alerts affecting land zones.",
                  "title": "Land",
                  "minimum": 0,
                  "type": "integer"
                },
                "marine": {
                  "description": "The total number of active alerts affecting marine zones.",
                  "title": "Marine",
                  "minimum": 0,
                  "type": "integer"
                },
                "regions": {
                  "description": "Active alerts by marine region.",
                  "title": "Regions",
                  "type": "object",
                  "additionalProperties": {
                    "minimum": 1,
                    "type": "integer"
                  }
                },
                "areas": {
                  "description": "Active alerts by area (state/territory).",
                  "title": "Areas",
                  "type": "object",
                  "additionalProperties": {
                    "minimum": 1,
                    "type": "integer"
                  }
                },
                "zones": {
                  "description": "Active alerts by NWS public zone or county code.",
                  "title": "Zones",
                  "type": "object",
                  "additionalProperties": {
                    "minimum": 1,
                    "type": "integer"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/alerts/active/zone/{zoneId}": {
      "get": {
        "description": "Retrieve a list of active alerts for a zone.",
        "summary": "Get active alerts for a zone",
        "operationId": "Alerts_active_zone",
        "parameters": [
          {
            "in": "path",
            "x-ms-summary": "Zone ID",
            "x-ms-url-encoding": "single",
            "name": "zoneId",
            "description": "NWS public zone/county identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AlertCollection"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/alerts/active/area/{area}": {
      "get": {
        "description": "Retrieve a list of active alerts for an area.",
        "summary": "Get active alerts for an area",
        "operationId": "Alerts_active_area",
        "parameters": [
          {
            "name": "area",
            "in": "path",
            "x-ms-summary": "Area ID",
            "x-ms-url-encoding": "single",
            "type": "string",
            "description": "State/area identifier.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AlertCollection"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/alerts/active/region/{region}": {
      "get": {
        "description": "Retrieve a list of active alerts for a marine region.",
        "summary": "Get active alerts for a marine region",
        "operationId": "Alerts_active_region",
        "parameters": [
          {
            "in": "path",
            "x-ms-summary": "Region ID",
            "x-ms-url-encoding": "single",
            "name": "region",
            "description": "Marine region identifier.",
            "required": true,
            "type": "string",
            "enum": [
              "AL",
              "AT",
              "GL",
              "GM",
              "PA",
              "PI"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AlertCollection"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/alerts/types": {
      "get": {
        "description": "Retrieve a list of alert types.",
        "summary": "Get alert types",
        "operationId": "Alerts_types",
        "responses": {
          "200": {
            "description": "A list of recognized event types.",
            "schema": {
              "type": "object",
              "properties": {
                "eventTypes": {
                  "description": "A list of recognized event types.",
                  "title": "Event Types",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/alerts/{id}": {
      "get": {
        "description": "Retrieve a single alert.",
        "summary": "Get a single alert",
        "operationId": "Alerts_single",
        "parameters": [
          {
            "in": "path",
            "x-ms-summary": "Alert ID",
            "x-ms-url-encoding": "single",
            "name": "id",
            "description": "Alert identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "An alert record.",
            "schema": {
              "$ref": "#/definitions/AlertGeoJson"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/aviation/cwsus/{cwsuId}": {
      "get": {
        "description": "Retrieve metadata about a Center Weather Service Unit.",
        "summary": "Get CWSU metadata",
        "operationId": "Cwsu",
        "parameters": [
          {
            "$ref": "#/parameters/NWSCenterWeatherServiceUnitId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Office"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/aviation/cwsus/{cwsuId}/cwas": {
      "get": {
        "description": "Retrieve a list of Center Weather Advisories from a CWSU.",
        "summary": "Get CWA list",
        "operationId": "Cwas",
        "parameters": [
          {
            "$ref": "#/parameters/NWSCenterWeatherServiceUnitId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CenterWeatherAdvisoryCollectionGeoJson"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/aviation/cwsus/{cwsuId}/cwas/{date}/{sequence}": {
      "get": {
        "description": "Retrieve a specific Center Weather Advisory from a CWSU.",
        "summary": "Get CWA by sequence",
        "operationId": "Cwa",
        "parameters": [
          {
            "$ref": "#/parameters/NWSCenterWeatherServiceUnitId"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "in": "path",
            "x-ms-summary": "Sequence",
            "x-ms-url-encoding": "single",
            "name": "sequence",
            "description": "Sequence number.",
            "required": true,
            "type": "integer",
            "minimum": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CenterWeatherAdvisoryGeoJson"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/aviation/sigmets": {
      "get": {
        "description": "Retrieve a list of SIGMET/AIRMETs.",
        "summary": "Get SIGMETs",
        "operationId": "SigmetQuery",
        "parameters": [
          {
            "$ref": "#/parameters/QueryStartTime"
          },
          {
            "$ref": "#/parameters/QueryEndTime"
          },
          {
            "$ref": "#/parameters/QueryDate"
          },
          {
            "in": "query",
            "x-ms-summary": "ATSU",
            "name": "atsu",
            "description": "ATSU identifier.",
            "type": "string",
            "pattern": "^[A-Z]{3,4}$"
          },
          {
            "in": "query",
            "x-ms-summary": "Sequence",
            "name": "sequence",
            "description": "SIGMET sequence number.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SigmetCollectionGeoJson"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/aviation/sigmets/{atsu}": {
      "get": {
        "description": "Retrieve a list of SIGMET/AIRMETs for a specific ATSU.",
        "summary": "Get SIGMETs by ATSU",
        "operationId": "SigmetsByATSU",
        "parameters": [
          {
            "$ref": "#/parameters/ATSUIdentifier"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SigmetCollectionGeoJson"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/aviation/sigmets/{atsu}/{date}": {
      "get": {
        "description": "Retrieve a list of SIGMET/AIRMETs for a specific ATSU and date.",
        "summary": "Get SIGMETs by ATSU and date",
        "operationId": "SigmetsByATSUByDate",
        "parameters": [
          {
            "$ref": "#/parameters/ATSUIdentifier"
          },
          {
            "$ref": "#/parameters/Date"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SigmetCollectionGeoJson"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/aviation/sigmets/{atsu}/{date}/{time}": {
      "get": {
        "description": "Retrieve a specific SIGMET/AIRMET.",
        "summary": "Get SIGMET by ATSU, date, and time",
        "operationId": "Sigmet",
        "parameters": [
          {
            "$ref": "#/parameters/ATSUIdentifier"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/SigmetGeoJson"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/glossary": {
      "get": {
        "description": "Retrieve a list of glossary terms.",
        "summary": "Get glossary",
        "operationId": "Glossary",
        "responses": {
          "200": {
            "description": "A set of glossary terms.",
            "schema": {
              "type": "object",
              "properties": {
                "@context": {
                  "$ref": "#/definitions/JsonLdContext"
                },
                "glossary": {
                  "title": "Glossary",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "term": {
                        "description": "The glossary term being defined.",
                        "title": "Term",
                        "type": "string"
                      },
                      "definition": {
                        "description": "A definition for the term.",
                        "title": "Definition",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/gridpoints/{wfo}/{x},{y}": {
      "get": {
        "description": "Retrieve a raw numerical forecast data for a 2.5km grid area.",
        "summary": "Get gridpoint forecast",
        "operationId": "Gridpoint",
        "parameters": [
          {
            "$ref": "#/parameters/GridpointWFO"
          },
          {
            "$ref": "#/parameters/GridpointX"
          },
          {
            "$ref": "#/parameters/GridpointY"
          }
        ],
        "responses": {
          "200": {
            "description": "Gridpoint forecast data.",
            "schema": {
              "$ref": "#/definitions/GridpointGeoJson"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/gridpoints/{wfo}/{x},{y}/forecast": {
      "get": {
        "description": "Retrieve a textual forecast for a 2.5km grid area.",
        "summary": "Get textual gridpoint forecast",
        "operationId": "Gridpoint_forecast",
        "parameters": [
          {
            "$ref": "#/parameters/GridpointForecastFeatureFlags"
          },
          {
            "$ref": "#/parameters/GridpointForecastUnits"
          },
          {
            "$ref": "#/parameters/GridpointWFO"
          },
          {
            "$ref": "#/parameters/GridpointX"
          },
          {
            "$ref": "#/parameters/GridpointY"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GridpointForecast"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/gridpoints/{wfo}/{x},{y}/forecast/hourly": {
      "get": {
        "description": "Retrieve an hourly forecast for a 2.5km grid area.",
        "summary": "Get hourly gridpoint forecast",
        "operationId": "Gridpoint_forecast_hourly",
        "parameters": [
          {
            "$ref": "#/parameters/GridpointForecastFeatureFlags"
          },
          {
            "$ref": "#/parameters/GridpointForecastUnits"
          },
          {
            "$ref": "#/parameters/GridpointWFO"
          },
          {
            "$ref": "#/parameters/GridpointX"
          },
          {
            "$ref": "#/parameters/GridpointY"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GridpointForecast"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/gridpoints/{wfo}/{x},{y}/stations": {
      "get": {
        "description": "Retrieve a list of observation stations for a 2.5km grid area.",
        "summary": "Get gridpoint stations",
        "operationId": "Gridpoint_stations",
        "parameters": [
          {
            "$ref": "#/parameters/GridpointWFO"
          },
          {
            "$ref": "#/parameters/GridpointX"
          },
          {
            "$ref": "#/parameters/GridpointY"
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/PaginationCursor"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ObservationStationCollection"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/stations/{stationId}/observations": {
      "get": {
        "description": "Retrieve a list of observations for a station.",
        "summary": "Get station observations",
        "operationId": "Station_observation_list",
        "parameters": [
          {
            "$ref": "#/parameters/QueryStartTime"
          },
          {
            "$ref": "#/parameters/QueryEndTime"
          },
          {
            "$ref": "#/parameters/ObservationStationId"
          },
          {
            "in": "query",
            "x-ms-summary": "Limit",
            "name": "limit",
            "description": "Limit.",
            "type": "integer",
            "maximum": 500,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ObservationCollection"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/stations/{stationId}/observations/latest": {
      "get": {
        "description": "Retrieve the latest observation for a station.",
        "summary": "Get latest station observation",
        "operationId": "Station_observation_latest",
        "parameters": [
          {
            "$ref": "#/parameters/ObservationStationId"
          },
          {
            "in": "query",
            "x-ms-summary": "Require QC",
            "name": "require_qc",
            "description": "Require QC.",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Observation"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/stations/{stationId}/observations/{time}": {
      "get": {
        "description": "Returns a single station observation.",
        "summary": "Get observation by time",
        "operationId": "Station_observation_time",
        "parameters": [
          {
            "$ref": "#/parameters/ObservationStationId"
          },
          {
            "in": "path",
            "x-ms-summary": "Time",
            "x-ms-url-encoding": "single",
            "name": "time",
            "description": "Timestamp of requested observation.",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/Observation"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/stations/{stationId}/tafs": {
      "get": {
        "description": "Retrieve Terminal Aerodrome Forecasts for the specified airport station.",
        "summary": "Get TAFs",
        "operationId": "Tafs",
        "parameters": [
          {
            "$ref": "#/parameters/ObservationStationId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {}
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/stations/{stationId}/tafs/{date}/{time}": {
      "get": {
        "description": "Retrieve a single Terminal Aerodrome Forecast.",
        "summary": "Get TAF by time",
        "operationId": "Taf",
        "parameters": [
          {
            "$ref": "#/parameters/ObservationStationId"
          },
          {
            "$ref": "#/parameters/Date"
          },
          {
            "$ref": "#/parameters/Time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {}
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/stations": {
      "get": {
        "description": "Retrieve a list of observation stations.",
        "summary": "Get observation stations",
        "operationId": "Obs_stations",
        "parameters": [
          {
            "in": "query",
            "x-ms-summary": "Station ID",
            "name": "id",
            "description": "Filter by observation station identifier.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "x-ms-summary": "State",
            "name": "state",
            "description": "Filter by state/marine area code.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "AL",
                "AK",
                "AS",
                "AR",
                "AZ",
                "CA",
                "CO",
                "CT",
                "DE",
                "DC",
                "FL",
                "GA",
                "GU",
                "HI",
                "ID",
                "IL",
                "IN",
                "IA",
                "KS",
                "KY",
                "LA",
                "ME",
                "MD",
                "MA",
                "MI",
                "MN",
                "MS",
                "MO",
                "MT",
                "NE",
                "NV",
                "NH",
                "NJ",
                "NM",
                "NY",
                "NC",
                "ND",
                "OH",
                "OK",
                "OR",
                "PA",
                "PR",
                "RI",
                "SC",
                "SD",
                "TN",
                "TX",
                "UT",
                "VT",
                "VI",
                "VA",
                "WA",
                "WV",
                "WI",
                "WY",
                "MP",
                "PW",
                "FM",
                "MH"
              ]
            }
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/PaginationCursor"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ObservationStationCollection"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/stations/{stationId}": {
      "get": {
        "description": "Retrieve metadata about a given observation station.",
        "summary": "Get observation station",
        "operationId": "Obs_station",
        "parameters": [
          {
            "$ref": "#/parameters/ObservationStationId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ObservationStationGeoJson"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/offices/{officeId}": {
      "get": {
        "description": "Retrieve metadata about a NWS forecast office.",
        "summary": "Get office",
        "operationId": "Office",
        "parameters": [
          {
            "$ref": "#/parameters/NWSOfficeId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/Office"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/offices/{officeId}/headlines/{headlineId}": {
      "get": {
        "description": "Retrieve a specific news headline for a given NWS office.",
        "summary": "Get an office headline",
        "operationId": "Office_headline",
        "parameters": [
          {
            "$ref": "#/parameters/NWSOfficeId"
          },
          {
            "in": "path",
            "x-ms-summary": "Headline ID",
            "x-ms-url-encoding": "single",
            "name": "headlineId",
            "description": "Headline record identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/OfficeHeadline"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/offices/{officeId}/headlines": {
      "get": {
        "description": "Retrieve a list of news headlines for a given NWS office.",
        "summary": "Get office headlines",
        "operationId": "Office_headlines",
        "parameters": [
          {
            "$ref": "#/parameters/NWSOfficeId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/OfficeHeadlineCollection"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/points/{point}": {
      "get": {
        "description": "Retrieve metadata about a given latitude/longitude point.",
        "summary": "Get point",
        "operationId": "Point",
        "parameters": [
          {
            "$ref": "#/parameters/PathPoint"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/PointGeoJson"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/radar/servers": {
      "get": {
        "description": "Retrieve a list of radar servers.",
        "summary": "Get radar servers",
        "operationId": "Radar_servers",
        "parameters": [
          {
            "in": "query",
            "x-ms-summary": "Reporting Host",
            "name": "reportingHost",
            "description": "Show records from specific reporting host.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "type": "object",
              "properties": {
                "@context": {
                  "type": "object",
                  "properties": {
                    "@version": {
                      "type": "string",
                      "description": "The version of the context.",
                      "title": "Version"
                    }
                  },
                  "title": "Context"
                },
                "@graph": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@id": {
                        "type": "string",
                        "description": "The identifier for the context record.",
                        "title": "Context ID"
                      },
                      "@type": {
                        "type": "string",
                        "description": "The type of the context record.",
                        "title": "Context Type"
                      },
                      "id": {
                        "type": "string",
                        "description": "The identifier for the radar server.",
                        "title": "ID"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the radar server.",
                        "title": "Type"
                      },
                      "active": {
                        "type": "boolean",
                        "description": "Whether the radar server is active.",
                        "title": "Active"
                      },
                      "primary": {
                        "type": "boolean",
                        "description": "Whether the radar server is primary.",
                        "title": "Primary"
                      },
                      "aggregate": {
                        "type": "boolean",
                        "description": "Whether the radar server is an aggregate.",
                        "title": "Aggregate"
                      },
                      "locked": {
                        "type": "boolean",
                        "description": "Whether the radar server is locked.",
                        "title": "Locked"
                      },
                      "radarNetworkUp": {
                        "type": "boolean",
                        "description": "Whether the radar network is up.",
                        "title": "Radar Network Up"
                      },
                      "collectionTime": {
                        "type": "string",
                        "description": "The collection time for the radar server.",
                        "title": "Collection Time"
                      },
                      "reportingHost": {
                        "type": "string",
                        "description": "The reporting host for the radar server.",
                        "title": "Reporting Host"
                      },
                      "ping": {
                        "type": "object",
                        "properties": {
                          "targets": {
                            "type": "object",
                            "properties": {
                              "client": {
                                "type": "array",
                                "items": {},
                                "description": "The client target.",
                                "title": "Client"
                              },
                              "ldm": {
                                "type": "object",
                                "properties": {
                                  "ldm4": {
                                    "type": "boolean",
                                    "description": "Whether the LDM4 target is up.",
                                    "title": "LDM4"
                                  },
                                  "tds": {
                                    "type": "boolean",
                                    "description": "Whether the TDS target is up.",
                                    "title": "TDS"
                                  },
                                  "ldm2": {
                                    "type": "boolean",
                                    "description": "Whether the LDM2 target is up.",
                                    "title": "LDM2"
                                  },
                                  "ldm3": {
                                    "type": "boolean",
                                    "description": "Whether the LDM3 target is up.",
                                    "title": "LDM3"
                                  },
                                  "ldm1": {
                                    "type": "boolean",
                                    "description": "Whether the LDM1 target is up.",
                                    "title": "LDM1"
                                  },
                                  "rds": {
                                    "type": "boolean",
                                    "description": "Whether the RDS target is up.",
                                    "title": "RDS"
                                  }
                                },
                                "title": "LDM"
                              },
                              "radar": {
                                "type": "array",
                                "items": {},
                                "description": "The radar target.",
                                "title": "Radar"
                              },
                              "server": {
                                "type": "object",
                                "properties": {
                                  "ldm4": {
                                    "type": "boolean",
                                    "description": "Whether the LDM4 target is up.",
                                    "title": "LDM4"
                                  },
                                  "ldm3": {
                                    "type": "boolean",
                                    "description": "Whether the LDM3 target is up.",
                                    "title": "LDM3"
                                  },
                                  "tds": {
                                    "type": "boolean",
                                    "description": "Whether the TDS target is up.",
                                    "title": "TDS"
                                  },
                                  "ldm2": {
                                    "type": "boolean",
                                    "description": "Whether the LDM2 target is up.",
                                    "title": "LDM2"
                                  },
                                  "ldm1": {
                                    "type": "boolean",
                                    "description": "Whether the LDM1 target is up.",
                                    "title": "LDM1"
                                  },
                                  "rds": {
                                    "type": "boolean",
                                    "description": "Whether the RDS target is up.",
                                    "title": "RDS"
                                  }
                                },
                                "title": "Server"
                              },
                              "misc": {
                                "type": "object",
                                "properties": {
                                  "tocRouter": {
                                    "type": "boolean",
                                    "description": "Whether the TOC router is up.",
                                    "title": "TOC Router"
                                  },
                                  "rocRouter": {
                                    "type": "boolean",
                                    "description": "Whether the ROC router is up.",
                                    "title": "ROC Router"
                                  },
                                  "eth0": {
                                    "type": "boolean",
                                    "description": "Whether the eth0 target is up.",
                                    "title": "Eth0"
                                  },
                                  "eth1": {
                                    "type": "boolean",
                                    "description": "Whether the eth1 target is up.",
                                    "title": "Eth1"
                                  },
                                  "backupIp": {
                                    "type": "boolean",
                                    "description": "Whether the backup IP target is up.",
                                    "title": "BackupIP"
                                  }
                                },
                                "title": "Misc"
                              }
                            },
                            "title": "Targets"
                          },
                          "timestamp": {
                            "type": "string",
                            "description": "The timestamp for the ping.",
                            "title": "Timestamp"
                          }
                        },
                        "title": "Ping"
                      },
                      "command": {
                        "type": "object",
                        "properties": {
                          "lastExecuted": {
                            "type": "string",
                            "description": "The last executed command.",
                            "title": "Last Executed"
                          },
                          "lastExecutedTime": {
                            "type": "string",
                            "description": "The timestamp for the last executed command.",
                            "title": "Last Executed Time"
                          },
                          "lastNexradDataTime": {
                            "type": "string",
                            "description": "The timestamp for the last NEXRAD data.",
                            "title": "Last NEXRAD Data Time"
                          },
                          "lastReceived": {
                            "type": "string",
                            "description": "The last received command.",
                            "title": "Last Received"
                          },
                          "lastReceivedTime": {
                            "type": "string",
                            "description": "The timestamp for the last received command.",
                            "title": "Last Received Time"
                          },
                          "timestamp": {
                            "type": "string",
                            "description": "The timestamp for the command.",
                            "title": "Timestamp"
                          }
                        },
                        "title": "Command"
                      },
                      "hardware": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "The timestamp for the hardware.",
                            "title": "Timestamp"
                          },
                          "cpuIdle": {
                            "type": "number",
                            "format": "float",
                            "description": "The CPU idle percentage.",
                            "title": "CPU Idle"
                          },
                          "ioUtilization": {
                            "type": "number",
                            "format": "float",
                            "description": "The IO utilization percentage.",
                            "title": "IO Utilization"
                          },
                          "disk": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The disk usage in bytes.",
                            "title": "Disk"
                          },
                          "load1": {
                            "type": "number",
                            "format": "float",
                            "description": "The 1 minute load average.",
                            "title": "Load 1"
                          },
                          "load5": {
                            "type": "number",
                            "format": "float",
                            "description": "The 5 minute load average.",
                            "title": "Load 5"
                          },
                          "load15": {
                            "type": "number",
                            "format": "float",
                            "description": "The 15 minute load average.",
                            "title": "Load 15"
                          },
                          "memory": {
                            "type": "number",
                            "format": "float",
                            "description": "The memory usage percentage.",
                            "title": "Memory"
                          },
                          "uptime": {
                            "type": "string",
                            "description": "The uptime.",
                            "title": "Uptime"
                          }
                        },
                        "title": "Hardware"
                      },
                      "ldm": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "The timestamp for the LDM.",
                            "title": "Timestamp"
                          },
                          "latestProduct": {
                            "type": "string",
                            "description": "The latest product.",
                            "title": "Latest Product"
                          },
                          "oldestProduct": {
                            "type": "string",
                            "description": "The oldest product.",
                            "title": "Oldest Product"
                          },
                          "storageSize": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The storage size in bytes.",
                            "title": "Storage Size"
                          },
                          "count": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The count.",
                            "title": "Count"
                          },
                          "active": {
                            "type": "boolean",
                            "description": "Whether the LDM is active.",
                            "title": "Active"
                          }
                        },
                        "title": "LDM"
                      },
                      "network": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "description": "The timestamp for the network.",
                            "title": "Timestamp"
                          },
                          "eth0": {
                            "type": "object",
                            "properties": {
                              "interface": {
                                "type": "string",
                                "description": "The interface.",
                                "title": "Interface"
                              },
                              "active": {
                                "type": "boolean",
                                "description": "Whether the interface is active.",
                                "title": "Active"
                              },
                              "transNoError": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of transmitted packets with no errors.",
                                "title": "Transmissions No Error"
                              },
                              "transError": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of transmitted packets with errors.",
                                "title": "Transmissions Error"
                              },
                              "transDropped": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of transmitted packets dropped.",
                                "title": "Transmissions Dropped"
                              },
                              "transOverrun": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of transmitted packets overrun.",
                                "title": "Transmissions Overrun"
                              },
                              "recvNoError": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of received packets with no errors.",
                                "title": "Receives No Error"
                              },
                              "recvError": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of received packets with errors.",
                                "title": "Receives Error"
                              },
                              "recvDropped": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of received packets dropped.",
                                "title": "Receives Dropped"
                              },
                              "recvOverrun": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of received packets overrun.",
                                "title": "Receives Overrun"
                              }
                            },
                            "title": "Eth0"
                          },
                          "eth1": {
                            "type": "object",
                            "properties": {
                              "interface": {
                                "type": "string",
                                "description": "The interface.",
                                "title": "Interface"
                              },
                              "active": {
                                "type": "boolean",
                                "description": "Whether the interface is active.",
                                "title": "Active"
                              },
                              "transNoError": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of transmitted packets with no errors.",
                                "title": "Transmissions No Error"
                              },
                              "transError": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of transmitted packets with errors.",
                                "title": "Transmissions Error"
                              },
                              "transDropped": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of transmitted packets dropped.",
                                "title": "Transmissions Dropped"
                              },
                              "transOverrun": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of transmitted packets overrun.",
                                "title": "Transmissions Overrun"
                              },
                              "recvNoError": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of received packets with no errors.",
                                "title": "Receives No Error"
                              },
                              "recvError": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of received packets with errors.",
                                "title": "Receives Error"
                              },
                              "recvDropped": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of received packets dropped.",
                                "title": "Receives Dropped"
                              },
                              "recvOverrun": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of received packets overrun.",
                                "title": "Receives Overrun"
                              }
                            },
                            "title": "Eth1"
                          }
                        },
                        "title": "Network"
                      }
                    }
                  },
                  "title": "Context"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/radar/servers/{id}": {
      "get": {
        "description": "Retrieve metadata about a given radar server.",
        "summary": "Get a radar server",
        "operationId": "Radar_server",
        "parameters": [
          {
            "in": "path",
            "x-ms-summary": "Radar Server ID",
            "x-ms-url-encoding": "single",
            "name": "id",
            "description": "Server identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "x-ms-summary": "Reporting Host",
            "name": "reportingHost",
            "description": "Show records from specific reporting host.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "type": "object",
              "properties": {
                "@context": {
                  "type": "object",
                  "properties": {
                    "@version": {
                      "type": "string",
                      "description": "The version of the context.",
                      "title": "Version"
                    }
                  },
                  "title": "Context"
                },
                "@id": {
                  "type": "string",
                  "description": "The identifier for the context.",
                  "title": "Context ID"
                },
                "@type": {
                  "type": "string",
                  "description": "The type of the context.",
                  "title": "Context Type"
                },
                "id": {
                  "type": "string",
                  "description": "The identifier for the radar server.",
                  "title": "Radar Server ID"
                },
                "type": {
                  "type": "string",
                  "description": "The type of the radar server.",
                  "title": "Type"
                },
                "collectionTime": {
                  "type": "string",
                  "description": "The collection time for the radar server.",
                  "title": "Collection Time"
                },
                "reportingHost": {
                  "type": "string",
                  "description": "The reporting host for the radar server.",
                  "title": "Reporting Host"
                },
                "ping": {
                  "type": "object",
                  "properties": {
                    "targets": {
                      "type": "object",
                      "properties": {
                        "client": {
                          "type": "object",
                          "properties": {
                            "universityOfOklahoma": {
                              "type": "boolean",
                              "description": "Whether the University of Oklahoma target is up.",
                              "title": "University of Oklahoma"
                            },
                            "eductionResearchConsortium": {
                              "type": "boolean",
                              "description": "Whether the Education Research Consortium target is up.",
                              "title": "Education Research Consortium"
                            },
                            "unidata": {
                              "type": "boolean",
                              "description": "Whether the Unidata target is up.",
                              "title": "Unidata"
                            },
                            "ncep": {
                              "type": "boolean",
                              "description": "Whether the NCEP target is up.",
                              "title": "NCEP"
                            },
                            "radarOperationsCenter": {
                              "type": "boolean",
                              "description": "Whether the Radar Operations Center target is up.",
                              "title": "Radar Operations Center"
                            },
                            "centralRegionHeadquarters": {
                              "type": "boolean",
                              "description": "Whether the Central Region Headquarters target is up.",
                              "title": "Central Region Headquarters"
                            },
                            "easternRegionHeadquarters": {
                              "type": "boolean",
                              "description": "Whether the Eastern Region Headquarters target is up.",
                              "title": "Eastern Region Headquarters"
                            }
                          },
                          "title": "Client"
                        },
                        "ldm": {
                          "type": "object",
                          "properties": {
                            "ldm4": {
                              "type": "boolean",
                              "description": "Whether the LDM4 target is up.",
                              "title": "LDM4"
                            },
                            "ldm3": {
                              "type": "boolean",
                              "description": "Whether the LDM3 target is up.",
                              "title": "LDM3"
                            }
                          },
                          "title": "LDM"
                        },
                        "radar": {
                          "type": "array",
                          "items": {},
                          "description": "The radar target.",
                          "title": "Radar"
                        },
                        "server": {
                          "type": "object",
                          "properties": {
                            "ldm3": {
                              "type": "boolean",
                              "description": "Whether the LDM3 target is up.",
                              "title": "LDM3"
                            },
                            "ldm4": {
                              "type": "boolean",
                              "description": "Whether the LDM4 target is up.",
                              "title": "LDM4"
                            }
                          },
                          "title": "Server"
                        },
                        "misc": {
                          "type": "object",
                          "properties": {
                            "rocRouter": {
                              "type": "boolean",
                              "description": "Whether the ROC router is up.",
                              "title": "ROC Router"
                            },
                            "eth1": {
                              "type": "boolean",
                              "description": "Whether the eth1 target is up.",
                              "title": "Eth1"
                            },
                            "eth0": {
                              "type": "boolean",
                              "description": "Whether the eth0 target is up.",
                              "title": "Eth0"
                            }
                          },
                          "title": "Misc"
                        }
                      },
                      "title": "Targets"
                    },
                    "timestamp": {
                      "type": "string",
                      "description": "The timestamp for the ping.",
                      "title": "Timestamp"
                    }
                  },
                  "title": "Ping"
                },
                "hardware": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "description": "The timestamp for the hardware.",
                      "title": "Timestamp"
                    },
                    "cpuIdle": {
                      "type": "number",
                      "format": "float",
                      "description": "The CPU idle percentage.",
                      "title": "CPU Idle"
                    },
                    "ioUtilization": {
                      "type": "number",
                      "format": "float",
                      "description": "The IO utilization percentage.",
                      "title": "IO Utilization"
                    },
                    "disk": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The disk usage in bytes.",
                      "title": "Disk"
                    },
                    "load1": {
                      "type": "number",
                      "format": "float",
                      "description": "The 1 minute load average.",
                      "title": "Load 1"
                    },
                    "load5": {
                      "type": "number",
                      "format": "float",
                      "description": "The 5 minute load average.",
                      "title": "Load 5"
                    },
                    "load15": {
                      "type": "number",
                      "format": "float",
                      "description": "The 15 minute load average.",
                      "title": "Load 15"
                    },
                    "memory": {
                      "type": "number",
                      "format": "float",
                      "description": "The memory usage percentage.",
                      "title": "Memory"
                    },
                    "uptime": {
                      "type": "string",
                      "description": "The uptime.",
                      "title": "Uptime"
                    }
                  },
                  "title": "Hardware"
                },
                "ldm": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "description": "The timestamp for the LDM.",
                      "title": "Timestamp"
                    },
                    "latestProduct": {
                      "type": "string",
                      "description": "The latest product.",
                      "title": "Latest Product"
                    },
                    "oldestProduct": {
                      "type": "string",
                      "description": "The oldest product.",
                      "title": "Oldest Product"
                    },
                    "storageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The storage size in bytes.",
                      "title": "Storage Size"
                    },
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The count.",
                      "title": "Count"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Whether the LDM is active.",
                      "title": "Active"
                    }
                  },
                  "title": "LDM"
                },
                "network": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "string",
                      "description": "The timestamp for the network.",
                      "title": "Timestamp"
                    },
                    "eth1": {
                      "type": "object",
                      "properties": {
                        "interface": {
                          "type": "string",
                          "description": "The interface.",
                          "title": "Interface"
                        },
                        "active": {
                          "type": "boolean",
                          "description": "Whether the interface is active.",
                          "title": "Active"
                        },
                        "transNoError": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of transmitted packets with no errors.",
                          "title": "Transmissions No Error"
                        },
                        "transError": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of transmitted packets with errors.",
                          "title": "Transmissions Error"
                        },
                        "transDropped": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of transmitted packets dropped.",
                          "title": "Transmissions Dropped"
                        },
                        "transOverrun": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of transmitted packets overrun.",
                          "title": "Transmissions Overrun"
                        },
                        "recvNoError": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of received packets with no errors.",
                          "title": "Receives No Error"
                        },
                        "recvError": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of received packets with errors.",
                          "title": "Receives Error"
                        },
                        "recvDropped": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of received packets dropped.",
                          "title": "Receives Dropped"
                        },
                        "recvOverrun": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of received packets overrun.",
                          "title": "Receives Overrun"
                        }
                      },
                      "title": "Eth1"
                    },
                    "eth0": {
                      "type": "object",
                      "properties": {
                        "interface": {
                          "type": "string",
                          "description": "The interface.",
                          "title": "Interface"
                        },
                        "active": {
                          "type": "boolean",
                          "description": "Whether the interface is active.",
                          "title": "Active"
                        },
                        "transNoError": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of transmitted packets with no errors.",
                          "title": "Transmissions No Error"
                        },
                        "transError": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of transmitted packets with errors.",
                          "title": "Transmissions Error"
                        },
                        "transDropped": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of transmitted packets dropped.",
                          "title": "Transmissions Dropped"
                        },
                        "transOverrun": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of transmitted packets overrun.",
                          "title": "Transmissions Overrun"
                        },
                        "recvNoError": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of received packets with no errors.",
                          "title": "Receives No Error"
                        },
                        "recvError": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of received packets with errors.",
                          "title": "Receives Error"
                        },
                        "recvDropped": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of received packets dropped.",
                          "title": "Receives Dropped"
                        },
                        "recvOverrun": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of received packets overrun.",
                          "title": "Receives Overrun"
                        }
                      },
                      "title": "Eth0"
                    }
                  },
                  "title": "Network"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/radar/stations": {
      "get": {
        "description": "Retrieve a list of radar stations.",
        "summary": "Get radar stations",
        "operationId": "Radar_stations",
        "parameters": [
          {
            "in": "query",
            "x-ms-summary": "Station Type",
            "name": "stationType",
            "description": "Limit results to a specific station type or types.",
            "type": "array",
            "items": {
              "pattern": "^[A-Za-z0-9-]+$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "x-ms-summary": "Reporting Host",
            "name": "reportingHost",
            "description": "Show RDA and latency info from specific reporting host.",
            "type": "string"
          },
          {
            "in": "query",
            "x-ms-summary": "Host",
            "name": "host",
            "description": "Show latency info from specific LDM host.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "description": "The type of the radar station.",
                  "title": "Type"
                },
                "features": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The identifier for the radar station.",
                        "title": "ID"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the radar station.",
                        "title": "Type"
                      },
                      "geometry": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The type of the geometry.",
                            "title": "Type"
                          },
                          "coordinates": {
                            "type": "array",
                            "items": {
                              "type": "number",
                              "format": "float"
                            },
                            "description": "The coordinates of the geometry.",
                            "title": "Coordinates"
                          }
                        },
                        "title": "Geometry"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {
                          "@id": {
                            "type": "string",
                            "description": "The identifier for the context.",
                            "title": "Context ID"
                          },
                          "@type": {
                            "type": "string",
                            "description": "The type of the context.",
                            "title": "Context Type"
                          },
                          "id": {
                            "type": "string",
                            "description": "The identifier for the radar station.",
                            "title": "Radar Station ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the radar station.",
                            "title": "Name"
                          },
                          "stationType": {
                            "type": "string",
                            "description": "The type of the radar station.",
                            "title": "Station Type"
                          },
                          "elevation": {
                            "type": "object",
                            "properties": {
                              "unitCode": {
                                "type": "string",
                                "description": "The unit code for the elevation.",
                                "title": "Unit Code"
                              },
                              "value": {
                                "type": "number",
                                "format": "float",
                                "description": "The value of the elevation.",
                                "title": "Value"
                              }
                            },
                            "title": "Elevation"
                          },
                          "timeZone": {
                            "type": "string",
                            "description": "The time zone for the radar station.",
                            "title": "Time Zone"
                          },
                          "latency": {
                            "type": "object",
                            "properties": {
                              "current": {
                                "type": "object",
                                "properties": {
                                  "unitCode": {
                                    "type": "string",
                                    "description": "The unit code for the current latency.",
                                    "title": "Unit Code"
                                  },
                                  "value": {
                                    "type": "number",
                                    "format": "float",
                                    "description": "The value of the current latency.",
                                    "title": "Value"
                                  }
                                },
                                "title": "Current"
                              },
                              "average": {
                                "type": "object",
                                "properties": {
                                  "unitCode": {
                                    "type": "string",
                                    "description": "The unit code for the average latency.",
                                    "title": "Unit Code"
                                  },
                                  "value": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The value of the average latency.",
                                    "title": "Value"
                                  }
                                },
                                "title": "Average"
                              },
                              "max": {
                                "type": "object",
                                "properties": {
                                  "unitCode": {
                                    "type": "string",
                                    "description": "The unit code for the maximum latency.",
                                    "title": "Unit Code"
                                  },
                                  "value": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The value of the maximum latency.",
                                    "title": "Value"
                                  }
                                },
                                "title": "Max"
                              },
                              "levelTwoLastReceivedTime": {
                                "type": "string",
                                "description": "The timestamp for the last received level two data.",
                                "title": "Level Two Last Received Time"
                              },
                              "maxLatencyTime": {
                                "type": "string",
                                "description": "The timestamp for the maximum latency.",
                                "title": "Max Latency Time"
                              },
                              "reportingHost": {
                                "type": "string",
                                "description": "The reporting host for the latency.",
                                "title": "Reporting Host"
                              },
                              "host": {
                                "type": "string",
                                "description": "The host for the latency.",
                                "title": "Host"
                              }
                            },
                            "title": "Latency"
                          },
                          "rda": {
                            "type": "object",
                            "properties": {
                              "timestamp": {
                                "type": "string",
                                "description": "The timestamp for the RDA.",
                                "title": "Timestamp"
                              },
                              "reportingHost": {
                                "type": "string",
                                "description": "The reporting host for the RDA.",
                                "title": "Reporting Host"
                              },
                              "properties": {
                                "type": "object",
                                "properties": {
                                  "resolutionVersion": {
                                    "type": "string",
                                    "description": "The resolution version.",
                                    "title": "Resolution Version"
                                  },
                                  "nl2Path": {
                                    "type": "string",
                                    "description": "The NL2 path.",
                                    "title": "NL2 Path"
                                  },
                                  "volumeCoveragePattern": {
                                    "type": "string",
                                    "description": "The volume coverage pattern.",
                                    "title": "Volume Coverage Pattern"
                                  },
                                  "controlStatus": {
                                    "type": "string",
                                    "description": "The control status.",
                                    "title": "Control Status"
                                  },
                                  "buildNumber": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The build number.",
                                    "title": "Build Number"
                                  },
                                  "alarmSummary": {
                                    "type": "string",
                                    "description": "The alarm summary.",
                                    "title": "Alarm Summary"
                                  },
                                  "mode": {
                                    "type": "string",
                                    "description": "The mode.",
                                    "title": "Mode"
                                  },
                                  "generatorState": {
                                    "type": "string",
                                    "description": "The generator state.",
                                    "title": "Generator State"
                                  },
                                  "superResolutionStatus": {
                                    "type": "string",
                                    "description": "The super resolution status.",
                                    "title": "Super Resolution Status"
                                  },
                                  "operabilityStatus": {
                                    "type": "string",
                                    "description": "The operability status.",
                                    "title": "Operability Status"
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "The status.",
                                    "title": "Status"
                                  },
                                  "averageTransmitterPower": {
                                    "type": "object",
                                    "properties": {
                                      "unitCode": {
                                        "type": "string",
                                        "description": "The unit code for the average transmitter power.",
                                        "title": "Unit Code"
                                      },
                                      "value": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The value of the average transmitter power.",
                                        "title": "Value"
                                      }
                                    },
                                    "title": "Average Transmitter Power"
                                  },
                                  "reflectivityCalibrationCorrection": {
                                    "type": "object",
                                    "properties": {
                                      "unitCode": {
                                        "type": "string",
                                        "description": "The unit code for the reflectivity calibration correction.",
                                        "title": "Unit Code"
                                      },
                                      "value": {
                                        "type": "number",
                                        "format": "float",
                                        "description": "The value of the reflectivity calibration correction.",
                                        "title": "Value"
                                      }
                                    },
                                    "title": "Reflectivity Calibration Correction"
                                  }
                                },
                                "title": "Properties"
                              }
                            },
                            "title": "RDA"
                          }
                        },
                        "title": "Properties"
                      }
                    }
                  },
                  "title": "Features"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/radar/stations/{stationId}": {
      "get": {
        "description": "Retrieve metadata about a given radar station.",
        "summary": "Get radar station",
        "operationId": "Radar_station",
        "parameters": [
          {
            "in": "path",
            "x-ms-summary": "Radar Station ID",
            "x-ms-url-encoding": "single",
            "name": "stationId",
            "description": "Radar station identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "x-ms-summary": "Reporting Host",
            "name": "reportingHost",
            "description": "Show RDA and latency info from specific reporting host.",
            "type": "string"
          },
          {
            "in": "query",
            "x-ms-summary": "Host",
            "name": "host",
            "description": "Show latency info from specific LDM host.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier for the radar station.",
                  "title": "ID"
                },
                "type": {
                  "type": "string",
                  "description": "The type of the radar station.",
                  "title": "Type"
                },
                "geometry": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of the geometry.",
                      "title": "Type"
                    },
                    "coordinates": {
                      "type": "array",
                      "items": {
                        "type": "number",
                        "format": "float"
                      },
                      "description": "The coordinates of the geometry.",
                      "title": "Coordinates"
                    }
                  },
                  "title": "Geometry"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "@id": {
                      "type": "string",
                      "description": "The identifier for the context.",
                      "title": "Context ID"
                    },
                    "@type": {
                      "type": "string",
                      "description": "The type of the context.",
                      "title": "Context Type"
                    },
                    "id": {
                      "type": "string",
                      "description": "The identifier for the radar station.",
                      "title": "Radar Station ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the radar station.",
                      "title": "Name"
                    },
                    "stationType": {
                      "type": "string",
                      "description": "The type of the radar station.",
                      "title": "Station Type"
                    },
                    "elevation": {
                      "type": "object",
                      "properties": {
                        "unitCode": {
                          "type": "string",
                          "description": "The unit code for the elevation.",
                          "title": "Unit Code"
                        },
                        "value": {
                          "type": "number",
                          "format": "float",
                          "description": "The value of the elevation.",
                          "title": "Value"
                        }
                      },
                      "title": "Elevation"
                    },
                    "timeZone": {
                      "type": "string",
                      "description": "The time zone for the radar station.",
                      "title": "Time Zone"
                    },
                    "latency": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "type": "object",
                          "properties": {
                            "unitCode": {
                              "type": "string",
                              "description": "The unit code for the current latency.",
                              "title": "Unit Code"
                            },
                            "value": {
                              "type": "number",
                              "format": "float",
                              "description": "The value of the current latency.",
                              "title": "Value"
                            }
                          },
                          "title": "Current"
                        },
                        "average": {
                          "type": "object",
                          "properties": {
                            "unitCode": {
                              "type": "string",
                              "description": "The unit code for the average latency.",
                              "title": "Unit Code"
                            },
                            "value": {
                              "type": "number",
                              "format": "float",
                              "description": "The value of the average latency.",
                              "title": "Value"
                            }
                          },
                          "title": "Average"
                        },
                        "max": {
                          "type": "object",
                          "properties": {
                            "unitCode": {
                              "type": "string",
                              "description": "The unit code for the maximum latency.",
                              "title": "Unit Code"
                            },
                            "value": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The value of the maximum latency.",
                              "title": "Value"
                            }
                          },
                          "title": "Max"
                        },
                        "levelTwoLastReceivedTime": {
                          "type": "string",
                          "description": "The timestamp for the last received level two data.",
                          "title": "Level Two Last Received Time"
                        },
                        "maxLatencyTime": {
                          "type": "string",
                          "description": "The timestamp for the maximum latency.",
                          "title": "Max Latency Time"
                        },
                        "reportingHost": {
                          "type": "string",
                          "description": "The reporting host for the latency.",
                          "title": "Reporting Host"
                        },
                        "host": {
                          "type": "string",
                          "description": "The host for the latency.",
                          "title": "Host"
                        }
                      },
                      "title": "Latency"
                    },
                    "rda": {
                      "type": "object",
                      "properties": {
                        "timestamp": {
                          "type": "string",
                          "description": "The timestamp for the RDA.",
                          "title": "Timestamp"
                        },
                        "reportingHost": {
                          "type": "string",
                          "description": "The reporting host for the RDA.",
                          "title": "Reporting Host"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "resolutionVersion": {
                              "type": "string",
                              "description": "The resolution version.",
                              "title": "Resolution Version"
                            },
                            "nl2Path": {
                              "type": "string",
                              "description": "The NL2 path.",
                              "title": "NL2 Path"
                            },
                            "volumeCoveragePattern": {
                              "type": "string",
                              "description": "The volume coverage pattern.",
                              "title": "Volume Coverage Pattern"
                            },
                            "controlStatus": {
                              "type": "string",
                              "description": "The control status.",
                              "title": "Control Status"
                            },
                            "buildNumber": {
                              "type": "number",
                              "format": "float",
                              "description": "The build number.",
                              "title": "Build Number"
                            },
                            "alarmSummary": {
                              "type": "string",
                              "description": "The alarm summary.",
                              "title": "Alarm Summary"
                            },
                            "mode": {
                              "type": "string",
                              "description": "The mode.",
                              "title": "Mode"
                            },
                            "generatorState": {
                              "type": "string",
                              "description": "The generator state.",
                              "title": "Generator State"
                            },
                            "superResolutionStatus": {
                              "type": "string",
                              "description": "The super resolution status.",
                              "title": "Super Resolution Status"
                            },
                            "operabilityStatus": {
                              "type": "string",
                              "description": "The operability status.",
                              "title": "Operability Status"
                            },
                            "status": {
                              "type": "string",
                              "description": "The status.",
                              "title": "Status"
                            },
                            "averageTransmitterPower": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the average transmitter power.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The value of the average transmitter power.",
                                  "title": "Value"
                                }
                              },
                              "title": "Average Transmitter Power"
                            },
                            "reflectivityCalibrationCorrection": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the reflectivity calibration correction.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the reflectivity calibration correction.",
                                  "title": "Value"
                                }
                              },
                              "title": "Reflectivity Calibration Correction"
                            }
                          },
                          "title": "Properties"
                        }
                      },
                      "title": "RDA"
                    },
                    "performance": {
                      "type": "object",
                      "properties": {
                        "timestamp": {
                          "type": "string",
                          "description": "The timestamp for the performance.",
                          "title": "Timestamp"
                        },
                        "reportingHost": {
                          "type": "string",
                          "description": "The reporting host for the performance.",
                          "title": "Reporting Host"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "ntp_status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The NTP status.",
                              "title": "NTP Status"
                            },
                            "commandChannel": {
                              "type": "string",
                              "description": "The command channel.",
                              "title": "Command Channel"
                            },
                            "radomeAirTemperature": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the radome air temperature.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the radome air temperature.",
                                  "title": "Value"
                                }
                              },
                              "title": "Radome Air Temperature"
                            },
                            "transitionalPowerSource": {
                              "type": "string",
                              "description": "The transitional power source.",
                              "title": "Transitional Power Source"
                            },
                            "horizontalShortPulseNoise": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the horizontal short pulse noise.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the horizontal short pulse noise.",
                                  "title": "Value"
                                }
                              },
                              "title": "Horizontal Short Pulse Noise"
                            },
                            "elevationEncoderLight": {
                              "type": "string",
                              "description": "The elevation encoder light.",
                              "title": "Elevation Encoder Light"
                            },
                            "horizontalLongPulseNoise": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the horizontal long pulse noise.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the horizontal long pulse noise.",
                                  "title": "Value"
                                }
                              },
                              "title": "Horizontal Long Pulse Noise"
                            },
                            "azimuthEncoderLight": {
                              "type": "string",
                              "description": "The azimuth encoder light.",
                              "title": "Azimuth Encoder Light"
                            },
                            "horizontalNoiseTemperature": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the horizontal noise temperature.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the horizontal noise temperature.",
                                  "title": "Value"
                                }
                              },
                              "title": "Horizontal Noise Temperature"
                            },
                            "linearity": {
                              "type": "number",
                              "format": "float",
                              "description": "The linearity.",
                              "title": "Linearity"
                            },
                            "transmitterPeakPower": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the transmitter peak power.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the transmitter peak power.",
                                  "title": "Value"
                                }
                              },
                              "title": "Transmitter Peak Power"
                            },
                            "horizontalDeltadBZ0": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the horizontal delta dBZ0.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the horizontal delta dBZ0.",
                                  "title": "Value"
                                }
                              },
                              "title": "Horizontal Delta dBZ0"
                            },
                            "transmitterRecycleCount": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The transmitter recycle count.",
                              "title": "Transmitter Recycle Count"
                            },
                            "verticalDeltadBZ0": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the vertical delta dBZ0.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the vertical delta dBZ0.",
                                  "title": "Value"
                                }
                              },
                              "title": "Vertical Delta dBZ0"
                            },
                            "receiverBias": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the receiver bias.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the receiver bias.",
                                  "title": "Value"
                                }
                              },
                              "title": "Receiver Bias"
                            },
                            "shortPulseHorizontaldBZ0": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the short pulse horizontal dBZ0.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the short pulse horizontal dBZ0.",
                                  "title": "Value"
                                }
                              },
                              "title": "Short Pulse Horizontal dBZ0"
                            },
                            "transmitterImbalance": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the transmitter imbalance.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the transmitter imbalance.",
                                  "title": "Value"
                                }
                              },
                              "title": "Transmitter Imbalance"
                            },
                            "longPulseHorizontaldBZ0": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the long pulse horizontal dBZ0.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the long pulse horizontal dBZ0.",
                                  "title": "Value"
                                }
                              },
                              "title": "Long Pulse Horizontal dBZ0"
                            },
                            "performanceCheckTime": {
                              "type": "string",
                              "description": "The timestamp for the performance check.",
                              "title": "Performance Check Time"
                            },
                            "transmitterLeavingAirTemperature": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the transmitter leaving air temperature.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the transmitter leaving air temperature.",
                                  "title": "Value"
                                }
                              },
                              "title": "Transmitter Leaving Air Temperature"
                            },
                            "shelterTemperature": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the shelter temperature.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the shelter temperature.",
                                  "title": "Value"
                                }
                              },
                              "title": "Shelter Temperature"
                            },
                            "powerSource": {
                              "type": "string",
                              "description": "The power source.",
                              "title": "Power Source"
                            },
                            "dynamicRange": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the dynamic range.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The value of the dynamic range.",
                                  "title": "Value"
                                }
                              },
                              "title": "Dynamic Range"
                            },
                            "fuelLevel": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the fuel level.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The value of the fuel level.",
                                  "title": "Value"
                                }
                              },
                              "title": "Fuel Level"
                            }
                          },
                          "title": "Properties"
                        }
                      },
                      "title": "Performance"
                    },
                    "adaptation": {
                      "type": "object",
                      "properties": {
                        "timestamp": {
                          "type": "string",
                          "description": "The timestamp for the adaptation.",
                          "title": "Timestamp"
                        },
                        "reportingHost": {
                          "type": "string",
                          "description": "The reporting host for the adaptation.",
                          "title": "Reporting Host"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "transmitterFrequency": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the transmitter frequency.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The value of the transmitter frequency.",
                                  "title": "Value"
                                }
                              },
                              "title": "Transmitter Frequency"
                            },
                            "pathLossWG04Circulator": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the path loss WG04 circulator.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the path loss WG04 circulator.",
                                  "title": "Value"
                                }
                              },
                              "title": "Path Loss WG04 Circulator"
                            },
                            "antennaGainIncludingRadome": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the antenna gain including radome.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the antenna gain including radome.",
                                  "title": "Value"
                                }
                              },
                              "title": "Antenna Gain Including Radome"
                            },
                            "pathLossA6ArcDetector": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the path loss A6 arc detector.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the path loss A6 arc detector.",
                                  "title": "Value"
                                }
                              },
                              "title": "Path Loss A6 Arc Detector"
                            },
                            "cohoPowerAtA1J4": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the coho power at A1J4.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the coho power at A1J4.",
                                  "title": "Value"
                                }
                              },
                              "title": "Coho Power At A1J4"
                            },
                            "ameHorzizontalTestSignalPower": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the ame horzizontal test signal power.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the ame horzizontal test signal power.",
                                  "title": "Value"
                                }
                              },
                              "title": "Ame Horzizontal Test Signal Power"
                            },
                            "pathLossTransmitterCouplerCoupling": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the path loss transmitter coupler coupling.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the path loss transmitter coupler coupling.",
                                  "title": "Value"
                                }
                              },
                              "title": "Path Loss Transmitter Coupler Coupling"
                            },
                            "staloPowerAtA1J2": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the stalo power at A1J2.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the stalo power at A1J2.",
                                  "title": "Value"
                                }
                              },
                              "title": "Stalo Power At A1J2"
                            },
                            "ameNoiseSourceHorizontalExcessNoiseRatio": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the ame noise source horizontal excess noise ratio.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the ame noise source horizontal excess noise ratio.",
                                  "title": "Value"
                                }
                              },
                              "title": "Ame Noise Source Horizontal Excess Noise Ratio"
                            },
                            "pathLossVerticalIFHeliaxTo4AT16": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the path loss vertical IF heliax to 4AT16.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the path loss vertical IF heliax to 4AT16.",
                                  "title": "Value"
                                }
                              },
                              "title": "Path Loss Vertical IF Heliax To 4AT16"
                            },
                            "pathLossAT4Attenuator": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the path loss AT4 attenuator.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the path loss AT4 attenuator.",
                                  "title": "Value"
                                }
                              },
                              "title": "Path Loss AT4 Attenuator"
                            },
                            "pathLossHorzontalIFHeliaxTo4AT17": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the path loss horzontal IF heliax to 4AT17.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The value of the path loss horzontal IF heliax to 4AT17.",
                                  "title": "Value"
                                }
                              },
                              "title": "Path Loss Horzontal IF Heliax To 4AT17"
                            },
                            "pathLossIFDRIFAntiAliasFilter": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the path loss IFDRIF anti alias filter.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the path loss IFDRIF anti alias filter.",
                                  "title": "Value"
                                }
                              },
                              "title": "Path Loss IFDRIF Anti Alias Filter"
                            },
                            "pathLossIFDBurstAntiAliasFilter": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the path loss IFDBurst anti alias filter.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the path loss IFDBurst anti alias filter.",
                                  "title": "Value"
                                }
                              },
                              "title": "Path Loss IFDBurst Anti Alias Filter"
                            },
                            "pathLossWG02HarmonicFilter": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the path loss WG02 harmonic filter.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the path loss WG02 harmonic filter.",
                                  "title": "Value"
                                }
                              },
                              "title": "Path Loss WG02 Harmonic Filter"
                            },
                            "transmitterPowerDataWattsFactor": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the transmitter power data watts factor.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the transmitter power data watts factor.",
                                  "title": "Value"
                                }
                              },
                              "title": "Transmitter Power Data Watts Factor"
                            },
                            "pathLossWaveguideKlystronToSwitch": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the path loss waveguide klystron to switch.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the path loss waveguide klystron to switch.",
                                  "title": "Value"
                                }
                              },
                              "title": "Path Loss Waveguide Klystron To Switch"
                            },
                            "pulseWidthTransmitterOutputShortPulse": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the pulse width transmitter output short pulse.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The value of the pulse width transmitter output short pulse.",
                                  "title": "Value"
                                }
                              },
                              "title": "Pulse Width Transmitter Output Short Pulse"
                            },
                            "pulseWidthTransmitterOutputLongPulse": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the pulse width transmitter output long pulse.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The value of the pulse width transmitter output long pulse.",
                                  "title": "Value"
                                }
                              },
                              "title": "Pulse Width Transmitter Output Long Pulse"
                            },
                            "pathLossWG06SpectrumFilter": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the path loss WG06 spectrum filter.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the path loss WG06 spectrum filter.",
                                  "title": "Value"
                                }
                              },
                              "title": "Path Loss WG06 Spectrum Filter"
                            },
                            "horizontalReceiverNoiseShortPulse": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the horizontal receiver noise short pulse.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the horizontal receiver noise short pulse.",
                                  "title": "Value"
                                }
                              },
                              "title": "Horizontal Receiver Noise Short Pulse"
                            },
                            "horizontalReceiverNoiseLongPulse": {
                              "type": "object",
                              "properties": {
                                "unitCode": {
                                  "type": "string",
                                  "description": "The unit code for the horizontal receiver noise long pulse.",
                                  "title": "Unit Code"
                                },
                                "value": {
                                  "type": "number",
                                  "format": "float",
                                  "description": "The value of the horizontal receiver noise long pulse.",
                                  "title": "Value"
                                }
                              },
                              "title": "Horizontal Receiver Noise Long Pulse"
                            },
                            "transmitterSpectrumFilterInstalled": {
                              "type": "string",
                              "description": "The transmitter spectrum filter installed.",
                              "title": "Transmitter Spectrum Filter Installed"
                            }
                          },
                          "title": "Properties"
                        }
                      },
                      "title": "Adaptation"
                    }
                  },
                  "title": "Properties"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/radar/stations/{stationId}/alarms": {
      "get": {
        "description": "Retrieve a list of alarms for a radar station.",
        "summary": "Get radar station alarms",
        "operationId": "Radar_station_alarms",
        "parameters": [
          {
            "in": "path",
            "x-ms-summary": "Staton ID",
            "x-ms-url-encoding": "single",
            "name": "stationId",
            "description": "Radar station identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "type": "object",
              "properties": {
                "@context": {
                  "type": "object",
                  "properties": {
                    "@version": {
                      "type": "string",
                      "description": "The context version.",
                      "title": "Version"
                    }
                  },
                  "title": "Context"
                },
                "@id": {
                  "type": "string",
                  "description": "The context identifier.",
                  "title": "ID"
                },
                "@graph": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "description": "The type of the alarm.",
                        "title": "Type"
                      },
                      "stationId": {
                        "type": "string",
                        "description": "The station identifier.",
                        "title": "Station ID"
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the alarm.",
                        "title": "Status"
                      },
                      "activeChannel": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The active channel.",
                        "title": "Active Channel"
                      },
                      "message": {
                        "type": "string",
                        "description": "The message.",
                        "title": "Message"
                      },
                      "timestamp": {
                        "type": "string",
                        "description": "The timestamp for the alarm.",
                        "title": "Timestamp"
                      }
                    }
                  },
                  "title": "Graph"
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/radar/queues/{host}": {
      "get": {
        "description": "Retrieve a list of radar queue records.",
        "summary": "Get radar queue",
        "operationId": "Radar_queue",
        "parameters": [
          {
            "in": "path",
            "x-ms-summary": "Host",
            "x-ms-url-encoding": "single",
            "name": "host",
            "description": "LDM host.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "x-ms-summary": "Limit",
            "name": "limit",
            "description": "Record limit.",
            "type": "integer",
            "maximum": 500,
            "minimum": 1
          },
          {
            "in": "query",
            "x-ms-summary": "Arrived",
            "name": "arrived",
            "type": "string",
            "description": "Range for arrival time."
          },
          {
            "in": "query",
            "x-ms-summary": "Created",
            "name": "created",
            "type": "string",
            "description": "Range for creation time."
          },
          {
            "in": "query",
            "x-ms-summary": "Published",
            "name": "published",
            "type": "string",
            "description": "Range for publish time."
          },
          {
            "in": "query",
            "x-ms-summary": "Station ID",
            "name": "station",
            "description": "Station identifier.",
            "type": "string"
          },
          {
            "in": "query",
            "x-ms-summary": "Type",
            "name": "type",
            "description": "Record type.",
            "type": "string"
          },
          {
            "in": "query",
            "x-ms-summary": "Feed",
            "name": "feed",
            "description": "Originating product feed.",
            "type": "string"
          },
          {
            "in": "query",
            "x-ms-summary": "Resolution",
            "name": "resolution",
            "description": "Resolution version.",
            "type": "integer",
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {}
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/radar/profilers/{stationId}": {
      "get": {
        "description": "Retrieve metadata about a profiler station.",
        "summary": "Get profiler metadata",
        "operationId": "Radar_profiler",
        "parameters": [
          {
            "in": "path",
            "x-ms-summary": "Station ID",
            "x-ms-url-encoding": "single",
            "name": "stationId",
            "description": "Profiler station identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "x-ms-summary": "Time",
            "name": "time",
            "type": "string",
            "description": "Time interval."
          },
          {
            "in": "query",
            "x-ms-summary": "Interval",
            "name": "interval",
            "description": "Averaging interval.",
            "type": "string",
            "pattern": "^P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {}
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/products": {
      "get": {
        "description": "Retrieve a list of text products.",
        "summary": "Get text products",
        "operationId": "Products_query",
        "parameters": [
          {
            "in": "query",
            "x-ms-summary": "Location",
            "name": "location",
            "description": "Location identifier.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "x-ms-summary": "Start",
            "name": "start",
            "description": "Start time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "x-ms-summary": "End",
            "name": "end",
            "description": "End time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "x-ms-summary": "Office",
            "name": "office",
            "description": "Issuing office.",
            "type": "array",
            "items": {
              "pattern": "^[A-Z]{4}$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "x-ms-summary": "WMO ID",
            "name": "wmoid",
            "description": "WMO identifier code.",
            "type": "array",
            "items": {
              "pattern": "^[A-Z]{4}\\d{2}$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "x-ms-summary": "Type",
            "name": "type",
            "description": "Product code.",
            "type": "array",
            "items": {
              "pattern": "^\\w{3}$",
              "type": "string"
            }
          },
          {
            "in": "query",
            "x-ms-summary": "Limit",
            "name": "limit",
            "description": "Limit.",
            "type": "integer",
            "maximum": 500,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/TextProductCollection"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/products/locations": {
      "get": {
        "description": "Retrieve a list of valid text product issuance locations.",
        "summary": "Get text product locations",
        "operationId": "Product_locations",
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/TextProductLocationCollection"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/products/types": {
      "get": {
        "description": "Retrieve a list of valid text product types.",
        "summary": "Get text product types",
        "operationId": "Product_types",
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/TextProductTypeCollection"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "description": "Retrieve a specific text product.",
        "summary": "Get text product",
        "operationId": "Product",
        "parameters": [
          {
            "in": "path",
            "x-ms-summary": "Product ID",
            "x-ms-url-encoding": "single",
            "name": "productId",
            "description": "Product identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/TextProduct"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/products/types/{typeId}": {
      "get": {
        "description": "Retrieve a list of text products by type.",
        "summary": "Get text products by type",
        "operationId": "Products_type",
        "parameters": [
          {
            "in": "path",
            "x-ms-summary": "Type ID",
            "x-ms-url-encoding": "single",
            "name": "typeId",
            "description": "Product type identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/TextProductCollection"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/products/types/{typeId}/locations": {
      "get": {
        "description": "Retrieve a list of valid text product issuance locations for a given type.",
        "summary": "Get text product locations by type",
        "operationId": "Products_type_locations",
        "parameters": [
          {
            "in": "path",
            "x-ms-summary": "Type ID",
            "x-ms-url-encoding": "single",
            "name": "typeId",
            "description": "Product type identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/TextProductLocationCollection"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/products/locations/{locationId}/types": {
      "get": {
        "description": "Retrieve a list of valid text product types for a given location.",
        "summary": "Get text product types by location",
        "operationId": "Location_products",
        "parameters": [
          {
            "in": "path",
            "x-ms-summary": "Location ID",
            "x-ms-url-encoding": "single",
            "name": "locationId",
            "description": "Product location identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/TextProductTypeCollection"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/products/types/{typeId}/locations/{locationId}": {
      "get": {
        "description": "Retrieve a list of text products for a given type and location.",
        "summary": "Get text products by type and location",
        "operationId": "Products_type_location",
        "parameters": [
          {
            "in": "path",
            "x-ms-summary": "Type ID",
            "x-ms-url-encoding": "single",
            "name": "typeId",
            "description": "Product type identifier.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "x-ms-summary": "Location ID",
            "x-ms-url-encoding": "single",
            "name": "locationId",
            "description": "Product location identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/TextProductCollection"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/zones": {
      "get": {
        "description": "Retrieve a list of zones.",
        "summary": "Get zones",
        "operationId": "Zone_list",
        "parameters": [
          {
            "in": "query",
            "x-ms-summary": "ID",
            "name": "id",
            "description": "Zone ID (forecast or county).",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[A-Z]{2}[CZ]\\d{3}$"
            }
          },
          {
            "in": "query",
            "x-ms-summary": "Area",
            "name": "area",
            "description": "State/marine area code.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "AL",
                "AK",
                "AS",
                "AR",
                "AZ",
                "CA",
                "CO",
                "CT",
                "DE",
                "DC",
                "FL",
                "GA",
                "GU",
                "HI",
                "ID",
                "IL",
                "IN",
                "IA",
                "KS",
                "KY",
                "LA",
                "ME",
                "MD",
                "MA",
                "MI",
                "MN",
                "MS",
                "MO",
                "MT",
                "NE",
                "NV",
                "NH",
                "NJ",
                "NM",
                "NY",
                "NC",
                "ND",
                "OH",
                "OK",
                "OR",
                "PA",
                "PR",
                "RI",
                "SC",
                "SD",
                "TN",
                "TX",
                "UT",
                "VT",
                "VI",
                "VA",
                "WA",
                "WV",
                "WI",
                "WY",
                "MP",
                "PW",
                "FM",
                "MH"
              ]
            }
          },
          {
            "in": "query",
            "x-ms-summary": "Region",
            "name": "region",
            "description": "Region code.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "AL",
                "AT",
                "GL",
                "PA",
                "PI",
                "NA"
              ]
            }
          },
          {
            "in": "query",
            "x-ms-summary": "Type",
            "name": "type",
            "description": "Zone type.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "land",
                "marine",
                "forecast",
                "public",
                "coastal",
                "offshore",
                "fire"
              ]
            }
          },
          {
            "in": "query",
            "x-ms-summary": "Point",
            "name": "point",
            "description": "Point (latitude,longitude).",
            "type": "string",
            "pattern": "^(-?\\d+(?:\\.\\d+)?),(-?\\d+(?:\\.\\d+)?)$"
          },
          {
            "in": "query",
            "x-ms-summary": "Include geometry",
            "name": "include_geometry",
            "description": "Include geometry in results (true/false).",
            "type": "boolean"
          },
          {
            "in": "query",
            "x-ms-summary": "Limit",
            "name": "limit",
            "description": "Limit.",
            "type": "integer",
            "minimum": 1
          },
          {
            "in": "query",
            "x-ms-summary": "Effective",
            "name": "effective",
            "description": "Effective date/time.",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ZoneCollectionGeoJson"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/zones/{type}": {
      "get": {
        "description": "Retrieve a list of zones by type.",
        "summary": "Get zones by type",
        "operationId": "Zone_list_type",
        "parameters": [
          {
            "in": "path",
            "x-ms-summary": "Type",
            "x-ms-url-encoding": "single",
            "name": "type",
            "description": "Zone type.",
            "required": true,
            "type": "string",
            "enum": [
              "land",
              "marine",
              "forecast",
              "public",
              "coastal",
              "offshore",
              "fire",
              "county"
            ]
          },
          {
            "in": "query",
            "x-ms-summary": "ID",
            "name": "id",
            "description": "Zone ID (forecast or county).",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[A-Z]{2}[CZ]\\d{3}$"
            }
          },
          {
            "in": "query",
            "x-ms-summary": "Area",
            "name": "area",
            "description": "State/marine area code.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "AL",
                "AK",
                "AS",
                "AR",
                "AZ",
                "CA",
                "CO",
                "CT",
                "DE",
                "DC",
                "FL",
                "GA",
                "GU",
                "HI",
                "ID",
                "IL",
                "IN",
                "IA",
                "KS",
                "KY",
                "LA",
                "ME",
                "MD",
                "MA",
                "MI",
                "MN",
                "MS",
                "MO",
                "MT",
                "NE",
                "NV",
                "NH",
                "NJ",
                "NM",
                "NY",
                "NC",
                "ND",
                "OH",
                "OK",
                "OR",
                "PA",
                "PR",
                "RI",
                "SC",
                "SD",
                "TN",
                "TX",
                "UT",
                "VT",
                "VI",
                "VA",
                "WA",
                "WV",
                "WI",
                "WY",
                "MP",
                "PW",
                "FM",
                "MH"
              ]
            }
          },
          {
            "in": "query",
            "x-ms-summary": "Region",
            "name": "region",
            "description": "Region code.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "AL",
                "AT",
                "GL",
                "PA",
                "PI",
                "NA"
              ]
            }
          },
          {
            "in": "query",
            "x-ms-summary": "Point",
            "name": "point",
            "description": "Point (latitude,longitude).",
            "type": "string",
            "pattern": "^(-?\\d+(?:\\.\\d+)?),(-?\\d+(?:\\.\\d+)?)$"
          },
          {
            "in": "query",
            "x-ms-summary": "Include Geometry",
            "name": "include_geometry",
            "description": "Include geometry in results (true/false).",
            "type": "boolean"
          },
          {
            "in": "query",
            "x-ms-summary": "Limit",
            "name": "limit",
            "description": "Limit.",
            "type": "integer",
            "minimum": 1
          },
          {
            "in": "query",
            "x-ms-summary": "Effective",
            "name": "effective",
            "description": "Effective date/time.",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ZoneCollectionGeoJson"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/zones/{type}/{zoneId}": {
      "get": {
        "description": "Retrieve metadata about a given zone.",
        "summary": "Get zone",
        "operationId": "Zone",
        "parameters": [
          {
            "in": "path",
            "x-ms-summary": "Type",
            "x-ms-url-encoding": "single",
            "name": "type",
            "description": "Zone type.",
            "required": true,
            "type": "string",
            "enum": [
              "land",
              "marine",
              "forecast",
              "public",
              "coastal",
              "offshore",
              "fire",
              "county"
            ]
          },
          {
            "$ref": "#/parameters/NWSZoneId"
          },
          {
            "in": "query",
            "x-ms-summary": "Effective",
            "name": "effective",
            "description": "Effective date/time.",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ZoneGeoJson"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/zones/{type}/{zoneId}/forecast": {
      "get": {
        "description": "Retrieve a zone forecast.",
        "summary": "Get zone forecast",
        "operationId": "Zone_forecast",
        "parameters": [
          {
            "in": "path",
            "x-ms-summary": "Type",
            "x-ms-url-encoding": "single",
            "name": "type",
            "description": "Zone type.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/NWSZoneId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ZoneForecastGeoJson"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/zones/forecast/{zoneId}/observations": {
      "get": {
        "description": "Retrieve a list of observations for a zone.",
        "summary": "Get zone observations",
        "operationId": "Zone_obs",
        "parameters": [
          {
            "$ref": "#/parameters/NWSZoneId"
          },
          {
            "in": "query",
            "x-ms-summary": "Start",
            "name": "start",
            "description": "Start date/time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "x-ms-summary": "End",
            "name": "end",
            "description": "End date/time.",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "x-ms-summary": "Limit",
            "name": "limit",
            "description": "Limit.",
            "type": "integer",
            "maximum": 500,
            "minimum": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ObservationCollectionGeoJson"
            }
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    },
    "/zones/forecast/{zoneId}/stations": {
      "get": {
        "description": "Retrieve a list of observation stations for a zone.",
        "summary": "Get zone stations",
        "operationId": "Zone_stations",
        "parameters": [
          {
            "$ref": "#/parameters/NWSZoneId"
          },
          {
            "$ref": "#/parameters/Limit"
          },
          {
            "$ref": "#/parameters/PaginationCursor"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ObservationStationCollection"
          },
          "default": {
            "$ref": "#/responses/Error"
          }
        }
      }
    }
  },
  "definitions": {
    "Alert": {
      "description": "An object representing a public alert message. Unless otherwise noted, the fields in this object correspond to the National Weather Service CAP v1.2 specification, which extends the OASIS Common Alerting Protocol (CAP) v1.2 specification and USA Integrated Public Alert and Warning System (IPAWS) Profile v1.0. Refer to this documentation for more complete information. http://docs.oasis-open.org/emergency/cap/v1.2/CAP-v1.2-os.html http://docs.oasis-open.org/emergency/cap/v1.2/ipaws-profile/v1.0/cs01/cap-v1.2-ipaws-profile-cs01.html https://alerts.weather.gov/#technical-notes-v12",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/AlertId"
        },
        "areaDesc": {
          "description": "A textual description of the area affected by the alert.",
          "title": "Area Description",
          "type": "string"
        },
        "geocode": {
          "description": "Lists of codes for NWS public zones and counties affected by the alert.",
          "title": "Geocode",
          "type": "object",
          "properties": {
            "UGC": {
              "description": "A list of NWS public zone or county identifiers.",
              "title": "Zone IDs",
              "type": "array",
              "items": {
                "$ref": "#/definitions/NWSZoneID"
              }
            },
            "SAME": {
              "description": "A list of SAME (Specific Area Message Encoding) codes for affected counties.",
              "title": "SAME Codes",
              "type": "array",
              "items": {
                "pattern": "^\\d{6}$",
                "type": "string"
              }
            }
          }
        },
        "affectedZones": {
          "description": "An array of API links for zones affected by the alert. This is an API-specific extension field and is not part of the CAP specification.",
          "title": "Affected Zones",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "references": {
          "description": "A list of prior alerts that this alert updates or replaces.",
          "title": "References",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "@id": {
                "format": "uri",
                "description": "An API link to the prior alert.",
                "title": "API Link",
                "type": "string"
              },
              "identifier": {
                "$ref": "#/definitions/AlertId"
              },
              "sender": {
                "description": "The sender of the prior alert.",
                "title": "Sender",
                "type": "string"
              },
              "sent": {
                "format": "date-time",
                "description": "The time the prior alert was sent.",
                "title": "Sent",
                "type": "string"
              }
            }
          }
        },
        "sent": {
          "format": "date-time",
          "description": "The time of the origination of the alert message.",
          "title": "Sent",
          "type": "string"
        },
        "effective": {
          "format": "date-time",
          "description": "The effective time of the information of the alert message.",
          "title": "Effective",
          "type": "string"
        },
        "onset": {
          "format": "date-time",
          "description": "The expected time of the beginning of the subject event of the alert message.",
          "title": "Onset",
          "type": "string"
        },
        "expires": {
          "format": "date-time",
          "description": "The expiry time of the information of the alert message.",
          "title": "Expires",
          "type": "string"
        },
        "ends": {
          "format": "date-time",
          "description": "The expected end time of the subject event of the alert message.",
          "title": "Ends",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/AlertStatus"
        },
        "messageType": {
          "$ref": "#/definitions/AlertMessageType"
        },
        "category": {
          "description": "The code denoting the category of the subject event of the alert message.",
          "title": "Category",
          "enum": [
            "Met",
            "Geo",
            "Safety",
            "Security",
            "Rescue",
            "Fire",
            "Health",
            "Env",
            "Transport",
            "Infra",
            "CBRNE",
            "Other"
          ],
          "type": "string"
        },
        "severity": {
          "$ref": "#/definitions/AlertSeverity"
        },
        "certainty": {
          "$ref": "#/definitions/AlertCertainty"
        },
        "urgency": {
          "$ref": "#/definitions/AlertUrgency"
        },
        "event": {
          "description": "The text denoting the type of the subject event of the alert message.",
          "title": "Event",
          "type": "string"
        },
        "sender": {
          "description": "Email address of the NWS webmaster.",
          "title": "Sender",
          "type": "string"
        },
        "senderName": {
          "description": "The text naming the originator of the alert message.",
          "title": "Sender Name",
          "type": "string"
        },
        "headline": {
          "description": "The text headline of the alert message.",
          "title": "Headline",
          "type": "string"
        },
        "description": {
          "description": "The text describing the subject event of the alert message.",
          "title": "Description",
          "type": "string"
        },
        "instruction": {
          "description": "The text describing the recommended action to be taken by recipients of the alert message.",
          "title": "Instruction",
          "type": "string"
        },
        "response": {
          "description": "The code denoting the type of action recommended for the target audience. This corresponds to responseType in the CAP specification.",
          "title": "Response",
          "enum": [
            "Shelter",
            "Evacuate",
            "Prepare",
            "Execute",
            "Avoid",
            "Monitor",
            "Assess",
            "AllClear",
            "None"
          ],
          "type": "string"
        },
        "parameters": {
          "description": "System-specific additional parameters associated with the alert message. The keys in this object correspond to parameter definitions in the NWS CAP specification.",
          "title": "Parameters",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {}
          }
        }
      }
    },
    "AlertCollection": {
      "type": "object",
      "properties": {
        "title": {
          "description": "A title describing the alert collection.",
          "title": "Title",
          "type": "string"
        },
        "updated": {
          "format": "date-time",
          "description": "The last time a change occurred to this collection.",
          "title": "Updated",
          "type": "string"
        },
        "pagination": {
          "$ref": "#/definitions/PaginationInfo"
        }
      }
    },
    "AlertCollectionGeoJson": {
      "type": "object",
      "properties": {
        "features": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "properties": {
                "$ref": "#/definitions/Alert"
              }
            }
          }
        },
        "geoJsonFeatureCollection": {
          "$ref": "#/definitions/GeoJsonFeatureCollection"
        },
        "alertCollection": {
          "$ref": "#/definitions/AlertCollection"
        }
      }
    },
    "AlertCollectionJsonLd": {
      "type": "object",
      "properties": {
        "alerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          }
        },
        "count": {
          "description": "The number of alerts in the collection.",
          "title": "Count",
          "type": "integer"
        },
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "@graph": {
          "description": "The graph of alerts.",
          "title": "Graph",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          }
        }
      }
    },
    "AlertCap": {
      "type": "object"
    },
    "AlertGeoJson": {
      "type": "object",
      "properties": {
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "geometry": {
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "coordinates": {
              "description": "The coordinates.",
              "title": "Coordinates",
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            }
          }
        },
        "properties": {
          "$ref": "#/definitions/Alert"
        }
      }
    },
    "AlertJsonLd": {
      "type": "object",
      "properties": {
        "@graph": {
          "description": "The graph of alerts.",
          "title": "Graph",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          }
        }
      }
    },
    "AlertId": {
      "description": "The identifier of the alert message.",
      "title": "Alert ID",
      "type": "string"
    },
    "AlertCertainty": {
      "description": "The code denoting the certainty of the subject event of the alert message.",
      "title": "Certainty",
      "enum": [
        "Observed",
        "Likely",
        "Possible",
        "Unlikely",
        "Unknown"
      ],
      "type": "string"
    },
    "AlertMessageType": {
      "description": "The code denoting the nature of the alert message.",
      "title": "Message Type",
      "enum": [
        "Alert",
        "Update",
        "Cancel",
        "Ack",
        "Error"
      ],
      "type": "string"
    },
    "AlertSeverity": {
      "description": "The code denoting the severity of the subject event of the alert message.",
      "title": "Severity",
      "enum": [
        "Extreme",
        "Severe",
        "Moderate",
        "Minor",
        "Unknown"
      ],
      "type": "string"
    },
    "AlertStatus": {
      "description": "The code denoting the appropriate handling of the alert message.",
      "title": "Status",
      "enum": [
        "Actual",
        "Exercise",
        "System",
        "Test",
        "Draft"
      ],
      "type": "string"
    },
    "AlertUrgency": {
      "description": "The code denoting the urgency of the subject event of the alert message.",
      "title": "Urgency",
      "enum": [
        "Immediate",
        "Expected",
        "Future",
        "Past",
        "Unknown"
      ],
      "type": "string"
    },
    "AlertAtomEntry": {
      "description": "An alert entry in an Atom feed.",
      "title": "Alert Atom Entry",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier of the alert message.",
          "title": "Alert ID",
          "type": "string"
        },
        "updated": {
          "description": "The last time a change occurred to this entry.",
          "title": "Updated",
          "type": "string"
        },
        "published": {
          "description": "The time of the origination of the alert message.",
          "title": "Published",
          "type": "string"
        },
        "author": {
          "description": "The author of the alert message.",
          "title": "Author",
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of the author.",
              "title": "Name",
              "type": "string"
            }
          }
        },
        "summary": {
          "description": "A summary of the alert message.",
          "title": "Summary",
          "type": "string"
        },
        "event": {
          "description": "The text denoting the type of the subject event of the alert message.",
          "title": "Event",
          "type": "string"
        },
        "sent": {
          "description": "The time of the origination of the alert message.",
          "title": "Sent",
          "type": "string"
        },
        "effective": {
          "description": "The effective time of the information of the alert message.",
          "title": "Effective",
          "type": "string"
        },
        "expires": {
          "description": "The expiry time of the information of the alert message.",
          "title": "Expires",
          "type": "string"
        },
        "status": {
          "description": "The code denoting the appropriate handling of the alert message.",
          "title": "Status",
          "type": "string"
        },
        "msgType": {
          "type": "string"
        },
        "category": {
          "description": "The code denoting the category of the subject event of the alert message.",
          "title": "Category",
          "type": "string"
        },
        "urgency": {
          "description": "The code denoting the urgency of the subject event of the alert message.",
          "title": "Urgency",
          "type": "string"
        },
        "severity": {
          "description": "The code denoting the severity of the subject event of the alert message.",
          "title": "Severity",
          "type": "string"
        },
        "certainty": {
          "description": "The code denoting the certainty of the subject event of the alert message.",
          "title": "Certainty",
          "type": "string"
        },
        "areaDesc": {
          "description": "A textual description of the area affected by the alert.",
          "title": "Area Description",
          "type": "string"
        },
        "polygon": {
          "description": "A polygon describing the area affected by the alert.",
          "title": "Polygon",
          "type": "string"
        },
        "geocode": {
          "description": "Lists of codes for NWS public zones and counties affected by the alert.",
          "title": "Geocode",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertXMLParameter"
          }
        },
        "parameter": {
          "description": "System-specific additional parameters associated with the alert message.",
          "title": "Parameters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertXMLParameter"
          }
        }
      }
    },
    "AlertXMLParameter": {
      "type": "object",
      "properties": {
        "valueName": {
          "description": "The name of the parameter.",
          "title": "Value Name",
          "type": "string"
        },
        "value": {
          "description": "The value of the parameter.",
          "title": "Value",
          "type": "string"
        }
      }
    },
    "AlertAtomFeed": {
      "description": "An alert feed in Atom format.",
      "title": "Alert Atom Feed",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier of the feed.",
          "title": "Feed ID",
          "type": "string"
        },
        "generator": {
          "description": "The generator of the feed.",
          "title": "Generator",
          "type": "string"
        },
        "updated": {
          "description": "The last time a change occurred to this feed.",
          "title": "Updated",
          "type": "string"
        },
        "author": {
          "description": "The author of the feed.",
          "title": "Author",
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of the author.",
              "title": "Name",
              "type": "string"
            }
          }
        },
        "title": {
          "description": "A title describing the feed.",
          "title": "Title",
          "type": "string"
        },
        "entry": {
          "description": "An array of alert entries in the feed.",
          "title": "Entries",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertAtomEntry"
          }
        }
      }
    },
    "AreaCode": {
      "description": "A code representing a geographic area.",
      "title": "Area Code",
      "enum": [
        "AL",
        "AK",
        "AS",
        "AR",
        "AZ",
        "CA",
        "CO",
        "CT",
        "DE",
        "DC",
        "FL",
        "GA",
        "GU",
        "HI",
        "ID",
        "IL",
        "IN",
        "IA",
        "KS",
        "KY",
        "LA",
        "ME",
        "MD",
        "MA",
        "MI",
        "MN",
        "MS",
        "MO",
        "MT",
        "NE",
        "NV",
        "NH",
        "NJ",
        "NM",
        "NY",
        "NC",
        "ND",
        "OH",
        "OK",
        "OR",
        "PA",
        "PR",
        "RI",
        "SC",
        "SD",
        "TN",
        "TX",
        "UT",
        "VT",
        "VI",
        "VA",
        "WA",
        "WV",
        "WI",
        "WY",
        "MP",
        "PW",
        "FM",
        "MH"
      ],
      "type": "string"
    },
    "ATSUIdentifier": {
      "description": "ATSU Identifier.",
      "title": "ATSU Identifier",
      "pattern": "^[A-Z]{3,4}$",
      "type": "string"
    },
    "BinaryFile": {
      "description": "A binary file.",
      "title": "Binary File",
      "format": "binary",
      "type": "string"
    },
    "CenterWeatherAdvisoryCollectionGeoJson": {
      "description": "A collection of Center Weather Advisories in GeoJSON format.",
      "title": "Center Weather Advisory Collection (GeoJSON)",
      "type": "object",
      "properties": {
        "features": {
          "description": "The features.",
          "title": "Features",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "properties": {
                "$ref": "#/definitions/CenterWeatherAdvisory"
              }
            }
          }
        },
        "geoJsonFeatureCollection": {
          "description": "The GeoJSON feature collection.",
          "title": "GeoJSON Feature Collection",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "features": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type.",
                    "title": "Type",
                    "type": "string"
                  },
                  "geometry": {
                    "description": "The geometry.",
                    "title": "Geometry",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "The type.",
                        "title": "Type",
                        "type": "string"
                      },
                      "coordinates": {
                        "description": "The coordinates.",
                        "title": "Coordinates",
                        "type": "array",
                        "items": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "properties": {
                    "$ref": "#/definitions/CenterWeatherAdvisory"
                  }
                }
              }
            }
          }
        },
        "format": {
          "description": "The format.",
          "title": "Format",
          "type": "string",
          "format": "date-time"
        },
        "observedProperty": {
          "description": "The observed property.",
          "title": "Observed Property",
          "type": "string"
        },
        "text": {
          "description": "The text.",
          "title": "Text",
          "type": "string"
        }
      }
    },
    "CenterWeatherAdvisoryGeoJson": {
      "type": "object",
      "properties": {
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "geometry": {
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "coordinates": {
              "description": "The coordinates.",
              "title": "Coordinates",
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            }
          }
        },
        "properties": {
          "$ref": "#/definitions/CenterWeatherAdvisory"
        }
      }
    },
    "CenterWeatherAdvisory": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier of the Center Weather Advisory.",
          "title": "ID",
          "type": "string"
        },
        "issueTime": {
          "description": "The time the Center Weather Advisory was issued.",
          "title": "Issue Time",
          "format": "date-time",
          "type": "string"
        },
        "cwsu": {
          "$ref": "#/definitions/NWSCenterWeatherServiceUnitId"
        },
        "sequence": {
          "description": "The sequence number of the Center Weather Advisory.",
          "title": "Sequence",
          "minimum": 101,
          "type": "integer"
        },
        "start": {
          "description": "The start time of the Center Weather Advisory.",
          "title": "Start",
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "description": "The end time of the Center Weather Advisory.",
          "title": "End",
          "format": "date-time",
          "type": "string"
        },
        "observedProperty": {
          "description": "The observed property.",
          "title": "Observed Property",
          "type": "string"
        },
        "text": {
          "description": "The text.",
          "title": "Text",
          "type": "string"
        }
      }
    },
    "CenterWeatherServiceUnitJsonLd": {
      "description": "A Center Weather Service Unit in JSON-LD format.",
      "title": "Center Weather Service Unit (JSON-LD)",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "@type": {
          "description": "The context type.",
          "title": "Context Type",
          "enum": [
            "GovernmentOrganization"
          ],
          "type": "string"
        },
        "@id": {
          "description": "The context identifier.",
          "title": "Context ID",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the Center Weather Service Unit.",
          "title": "ID",
          "type": "string"
        },
        "name": {
          "description": "The name of the Center Weather Service Unit.",
          "title": "Name",
          "type": "string"
        },
        "address": {
          "type": "object",
          "properties": {
            "@type": {
              "description": "The context type.",
              "title": "Context Type",
              "enum": [
                "PostalAddress"
              ],
              "type": "string"
            },
            "streetAddress": {
              "description": "The street address.",
              "title": "Street Address",
              "type": "string"
            },
            "addressLocality": {
              "description": "The locality.",
              "title": "Locality",
              "type": "string"
            },
            "addressRegion": {
              "description": "The region.",
              "title": "Region",
              "type": "string"
            },
            "postalCode": {
              "description": "The postal code.",
              "title": "Postal Code",
              "type": "string"
            }
          }
        },
        "telephone": {
          "description": "The telephone number.",
          "title": "Telephone",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "title": "Fax Number",
          "type": "string"
        },
        "email": {
          "description": "The email address.",
          "title": "Email",
          "type": "string"
        },
        "sameAs": {
          "description": "The same as.",
          "title": "Same As",
          "type": "string"
        },
        "nwsRegion": {
          "description": "The NWS region.",
          "title": "NWS Region",
          "type": "string"
        },
        "parentOrganization": {
          "description": "The parent organization.",
          "title": "Parent Organization",
          "type": "string"
        },
        "responsibleCounties": {
          "description": "The responsible counties.",
          "title": "Responsible Counties",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responsibleForecastZones": {
          "description": "The responsible forecast zones.",
          "title": "Responsible Forecast Zones",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responsibleFireZones": {
          "description": "The responsible fire zones.",
          "title": "Responsible Fire Zones",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "approvedObservationStations": {
          "description": "The approved observation stations.",
          "title": "Approved Observation Stations",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Date": {
      "format": "date",
      "description": "Date (in YYYY-MM-DD format).",
      "title": "Date",
      "type": "string"
    },
    "GeometryString": {
      "description": "A geometry represented in Well-Known Text (WKT) format.",
      "title": "Geometry",
      "type": "string"
    },
    "GeoJsonBoundingBox": {
      "description": "A GeoJSON bounding box. Please refer to IETF RFC 7946 for information on the GeoJSON format.",
      "title": "GeoJSON Bounding Box",
      "minItems": 4,
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "GeoJsonCoordinate": {
      "description": "A GeoJSON coordinate. Please refer to IETF RFC 7946 for information on the GeoJSON format.",
      "title": "GeoJSON Coordinate",
      "minItems": 2,
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "GeoJsonGeometry": {
      "description": "A GeoJSON geometry object. Please refer to IETF RFC 7946 for information on the GeoJSON format.",
      "type": "object",
      "title": "GeoJSON Point",
      "required": [
        "type",
        "coordinates"
      ],
      "properties": {
        "type": {
          "enum": [
            "Point"
          ],
          "description": "The type of geometry.",
          "title": "Type",
          "type": "string"
        },
        "coordinates": {
          "$ref": "#/definitions/GeoJsonCoordinate"
        },
        "bbox": {
          "$ref": "#/definitions/GeoJsonBoundingBox"
        }
      }
    },
    "GeoJsonFeature": {
      "description": "A GeoJSON feature. Please refer to IETF RFC 7946 for information on the GeoJSON format.",
      "title": "GeoJSON Feature",
      "required": [
        "type",
        "geometry",
        "properties"
      ],
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "id": {
          "description": "The identifier of the feature.",
          "title": "ID",
          "type": "string"
        },
        "type": {
          "enum": [
            "Feature"
          ],
          "description": "The type of feature.",
          "title": "Type",
          "type": "string"
        },
        "geometry": {
          "$ref": "#/definitions/GeoJsonGeometry"
        },
        "properties": {
          "description": "The properties of the feature.",
          "title": "Properties",
          "type": "object",
          "properties": {}
        }
      }
    },
    "GeoJsonFeatureCollection": {
      "description": "A GeoJSON feature collection. Please refer to IETF RFC 7946 for information on the GeoJSON format.",
      "title": "GeoJSON Feature Collection",
      "required": [
        "type",
        "features"
      ],
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "type": {
          "enum": [
            "FeatureCollection"
          ],
          "description": "The type of feature collection.",
          "type": "string"
        },
        "features": {
          "description": "The features.",
          "title": "Features",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoJsonFeature"
          }
        }
      }
    },
    "GeoJsonLineString": {
      "description": "A GeoJSON line string. Please refer to IETF RFC 7946 for information on the GeoJSON format.",
      "title": "GeoJSON Line String",
      "minItems": 2,
      "type": "array",
      "items": {
        "$ref": "#/definitions/GeoJsonCoordinate"
      }
    },
    "GeoJsonPolygon": {
      "description": "A GeoJSON polygon. Please refer to IETF RFC 7946 for information on the GeoJSON format.",
      "title": "GeoJSON Polygon",
      "type": "array",
      "items": {
        "minItems": 4,
        "type": "array",
        "items": {
          "$ref": "#/definitions/GeoJsonCoordinate"
        }
      }
    },
    "Gridpoint": {
      "description": "Raw forecast data for a 2.5km grid square. This is a list of all potential data layers that may appear. Some layers may not be present in all areas. * temperature. * dewpoint. * maxTemperature. * minTemperature. * relativeHumidity. * apparentTemperature. * heatIndex. * windChill. * wetBulbGlobeTemperature. * skyCover. * windDirection. * windSpeed. * windGust. * weather. * hazards: Watch and advisory products in effect. * probabilityOfPrecipitation. * quantitativePrecipitation. * iceAccumulation. * snowfallAmount. * snowLevel. * ceilingHeight. * visibility. * transportWindSpeed. * transportWindDirection. * mixingHeight. * hainesIndex. * lightningActivityLevel. * twentyFootWindSpeed. * twentyFootWindDirection. * waveHeight. * wavePeriod. * waveDirection. * primarySwellHeight. * primarySwellDirection. * secondarySwellHeight. * secondarySwellDirection. * wavePeriod2. * windWaveHeight. * dispersionIndex. * pressure: Barometric pressure. * probabilityOfTropicalStormWinds. * probabilityOfHurricaneWinds. * potentialOf15mphWinds. * potentialOf25mphWinds. * potentialOf35mphWinds. * potentialOf45mphWinds. * potentialOf20mphWindGusts. * potentialOf30mphWindGusts. * potentialOf40mphWindGusts. * potentialOf50mphWindGusts. * potentialOf60mphWindGusts. * grasslandFireDangerIndex. * probabilityOfThunder. * davisStabilityIndex. * atmosphericDispersionIndex. * lowVisibilityOccurrenceRiskIndex. * stability. * redFlagThreatIndex",
      "title": "Gridpoint",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "geometry": {
          "$ref": "#/definitions/GeometryString"
        },
        "@id": {
          "description": "The identifier of the context gridpoint.",
          "title": "Context ID",
          "type": "string"
        },
        "@type": {
          "enum": [
            "wx:Gridpoint"
          ],
          "description": "The type of context gridpoint.",
          "title": "Context ype",
          "type": "string"
        },
        "updateTime": {
          "description": "The time the gridpoint was last updated.",
          "title": "Update Time",
          "format": "date-time",
          "type": "string"
        },
        "validTimes": {
          "$ref": "#/definitions/ISO8601Interval"
        },
        "elevation": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "forecastOffice": {
          "description": "The forecast office.",
          "title": "Forecast Office",
          "type": "string"
        },
        "gridId": {
          "description": "The grid identifier.",
          "title": "Grid ID",
          "type": "string"
        },
        "gridX": {
          "description": "The grid X coordinate.",
          "title": "Grid X",
          "minimum": 0,
          "type": "integer"
        },
        "gridY": {
          "description": "The grid Y coordinate.",
          "title": "Grid Y",
          "minimum": 0,
          "type": "integer"
        },
        "weather": {
          "description": "The weather.",
          "title": "Weather",
          "required": [
            "values"
          ],
          "type": "object",
          "properties": {
            "values": {
              "description": "The values.",
              "title": "Values",
              "type": "array",
              "items": {
                "description": "A value object representing expected weather phenomena.",
                "title": "Value",
                "required": [
                  "validTime",
                  "value"
                ],
                "type": "object",
                "properties": {
                  "validTime": {
                    "$ref": "#/definitions/ISO8601Interval"
                  },
                  "value": {
                    "description": "The weather value.",
                    "title": "Value",
                    "type": "array",
                    "items": {
                      "description": "A value object representing expected weather phenomena.",
                      "title": "Value",
                      "required": [
                        "coverage",
                        "weather",
                        "intensity",
                        "visibility",
                        "attributes"
                      ],
                      "type": "object",
                      "properties": {
                        "coverage": {
                          "description": "The coverage.",
                          "title": "Coverage",
                          "enum": [
                            "areas",
                            "brief",
                            "chance",
                            "definite",
                            "few",
                            "frequent",
                            "intermittent",
                            "isolated",
                            "likely",
                            "numerous",
                            "occasional",
                            "patchy",
                            "periods",
                            "scattered",
                            "slight_chance",
                            "widespread"
                          ],
                          "type": "string"
                        },
                        "weather": {
                          "description": "The weather.",
                          "title": "Weather",
                          "enum": [
                            "blowing_dust",
                            "blowing_sand",
                            "blowing_snow",
                            "drizzle",
                            "fog",
                            "freezing_fog",
                            "freezing_drizzle",
                            "freezing_rain",
                            "freezing_spray",
                            "frost",
                            "hail",
                            "haze",
                            "ice_crystals",
                            "ice_fog",
                            "rain",
                            "rain_showers",
                            "sleet",
                            "smoke",
                            "snow",
                            "snow_showers",
                            "thunderstorms",
                            "volcanic_ash",
                            "water_spouts"
                          ],
                          "type": "string"
                        },
                        "intensity": {
                          "description": "The intensity.",
                          "title": "Intensity",
                          "enum": [
                            "very_light",
                            "light",
                            "moderate",
                            "heavy"
                          ],
                          "type": "string"
                        },
                        "visibility": {
                          "$ref": "#/definitions/QuantitativeValue"
                        },
                        "attributes": {
                          "description": "The attributes.",
                          "title": "Attributes",
                          "type": "array",
                          "items": {
                            "enum": [
                              "damaging_wind",
                              "dry_thunderstorms",
                              "flooding",
                              "gusty_wind",
                              "heavy_rain",
                              "large_hail",
                              "small_hail",
                              "tornadoes"
                            ],
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "hazards": {
          "description": "The hazards.",
          "title": "Hazards",
          "required": [
            "values"
          ],
          "type": "object",
          "properties": {
            "values": {
              "description": "The values.",
              "title": "Values",
              "type": "array",
              "items": {
                "description": "A value object representing an expected hazard.",
                "title": "Value",
                "required": [
                  "validTime",
                  "value"
                ],
                "type": "object",
                "properties": {
                  "validTime": {
                    "$ref": "#/definitions/ISO8601Interval"
                  },
                  "value": {
                    "type": "array",
                    "items": {
                      "description": "A value object representing an expected hazard.",
                      "title": "Value",
                      "required": [
                        "phenomenon",
                        "significance",
                        "event_number"
                      ],
                      "type": "object",
                      "properties": {
                        "phenomenon": {
                          "description": "Hazard code. This value will correspond to a P-VTEC phenomenon code as defined in NWS Directive 10-1703.",
                          "title": "Phenomenon",
                          "pattern": "^\\w{2}$",
                          "type": "string"
                        },
                        "significance": {
                          "description": "Significance code. This value will correspond to a P-VTEC significance code as defined in NWS Directive 10-1703. This will most frequently be \"A\" for a watch or \"Y\" for an advisory.",
                          "title": "Significance",
                          "pattern": "^\\w$",
                          "type": "string"
                        },
                        "event_number": {
                          "description": "Event number. If this hazard refers to a national or regional center product (such as a Storm Prediction Center convective watch), this value will be the sequence number of that product.",
                          "title": "Event Number",
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/GridpointQuantitativeValueLayer"
      }
    },
    "GridpointQuantitativeValueLayer": {
      "description": "A gridpoint layer consisting of quantitative values (numeric values with associated units of measure).",
      "title": "Gridpoint Quantitative Value Layer",
      "required": [
        "values"
      ],
      "type": "object",
      "properties": {
        "uom": {
          "$ref": "#/definitions/UnitOfMeasure"
        },
        "values": {
          "description": "The values.",
          "title": "Values",
          "type": "array",
          "items": {
            "required": [
              "validTime",
              "value"
            ],
            "type": "object",
            "properties": {
              "validTime": {
                "$ref": "#/definitions/ISO8601Interval"
              },
              "value": {
                "description": "The value.",
                "title": "Value",
                "type": "number",
                "format": "float"
              }
            }
          }
        }
      }
    },
    "GridpointGeoJson": {
      "description": "A GeoJSON object representing a gridpoint.",
      "title": "Gridpoint (GeoJSON)",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "geometry": {
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "coordinates": {
              "description": "The coordinates.",
              "title": "Coordinates",
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            }
          }
        },
        "properties": {
          "$ref": "#/definitions/Gridpoint"
        },
        "id": {
          "description": "The identifier of the gridpoint.",
          "title": "ID",
          "type": "string"
        }
      }
    },
    "GridpointJsonLd": {
      "description": "Raw forecast data for a 2.5km grid square. This is a list of all potential data layers that may appear. Some layers may not be present in all areas. * temperature. * dewpoint. * maxTemperature. * minTemperature. * relativeHumidity. * apparentTemperature. * heatIndex. * windChill. * wetBulbGlobeTemperature. * skyCover. * windDirection. * windSpeed. * windGust. * weather. * hazards: Watch and advisory products in effect. * probabilityOfPrecipitation. * quantitativePrecipitation. * iceAccumulation. * snowfallAmount. * snowLevel. * ceilingHeight. * visibility. * transportWindSpeed. * transportWindDirection. * mixingHeight. * hainesIndex. * lightningActivityLevel. * twentyFootWindSpeed. * twentyFootWindDirection. * waveHeight. * wavePeriod. * waveDirection. * primarySwellHeight. * primarySwellDirection. * secondarySwellHeight. * secondarySwellDirection. * wavePeriod2. * windWaveHeight. * dispersionIndex. * pressure: Barometric pressure. * probabilityOfTropicalStormWinds. * probabilityOfHurricaneWinds. * potentialOf15mphWinds. * potentialOf25mphWinds. * potentialOf35mphWinds. * potentialOf45mphWinds. * potentialOf20mphWindGusts. * potentialOf30mphWindGusts. * potentialOf40mphWindGusts. * potentialOf50mphWindGusts. * potentialOf60mphWindGusts. * grasslandFireDangerIndex. * probabilityOfThunder. * davisStabilityIndex. * atmosphericDispersionIndex. * lowVisibilityOccurrenceRiskIndex. * stability. * redFlagThreatIndex",
      "title": "Gridpoint (JSON-LD)",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "geometry": {
          "$ref": "#/definitions/GeometryString"
        },
        "@id": {
          "description": "The identifier of the gridpoint context.",
          "title": "Context ID",
          "type": "string"
        },
        "@type": {
          "description": "The type of gridpoint context.",
          "title": "Context Type",
          "enum": [
            "wx:Gridpoint"
          ],
          "type": "string"
        },
        "updateTime": {
          "description": "The time the gridpoint was last updated.",
          "title": "Update Time",
          "format": "date-time",
          "type": "string"
        },
        "validTimes": {
          "$ref": "#/definitions/ISO8601Interval"
        },
        "elevation": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "forecastOffice": {
          "description": "The forecast office.",
          "title": "Forecast Office",
          "type": "string"
        },
        "gridId": {
          "description": "The grid identifier.",
          "title": "Grid ID",
          "type": "string"
        },
        "gridX": {
          "description": "The grid X coordinate.",
          "title": "Grid X",
          "minimum": 0,
          "type": "integer"
        },
        "gridY": {
          "description": "The grid Y coordinate.",
          "title": "Grid Y",
          "minimum": 0,
          "type": "integer"
        },
        "weather": {
          "description": "The weather.",
          "title": "Weather",
          "required": [
            "values"
          ],
          "type": "object",
          "properties": {
            "values": {
              "description": "The values.",
              "title": "Values",
              "type": "array",
              "items": {
                "required": [
                  "validTime",
                  "value"
                ],
                "type": "object",
                "properties": {
                  "validTime": {
                    "$ref": "#/definitions/ISO8601Interval"
                  },
                  "value": {
                    "description": "The value.",
                    "title": "Value",
                    "type": "array",
                    "items": {
                      "description": "A value object representing expected weather phenomena.",
                      "required": [
                        "coverage",
                        "weather",
                        "intensity",
                        "visibility",
                        "attributes"
                      ],
                      "type": "object",
                      "properties": {
                        "coverage": {
                          "description": "The coverage.",
                          "title": "Coverage",
                          "enum": [
                            "areas",
                            "brief",
                            "chance",
                            "definite",
                            "few",
                            "frequent",
                            "intermittent",
                            "isolated",
                            "likely",
                            "numerous",
                            "occasional",
                            "patchy",
                            "periods",
                            "scattered",
                            "slight_chance",
                            "widespread"
                          ],
                          "type": "string"
                        },
                        "weather": {
                          "description": "The weather.",
                          "title": "Weather",
                          "enum": [
                            "blowing_dust",
                            "blowing_sand",
                            "blowing_snow",
                            "drizzle",
                            "fog",
                            "freezing_fog",
                            "freezing_drizzle",
                            "freezing_rain",
                            "freezing_spray",
                            "frost",
                            "hail",
                            "haze",
                            "ice_crystals",
                            "ice_fog",
                            "rain",
                            "rain_showers",
                            "sleet",
                            "smoke",
                            "snow",
                            "snow_showers",
                            "thunderstorms",
                            "volcanic_ash",
                            "water_spouts"
                          ],
                          "type": "string"
                        },
                        "intensity": {
                          "description": "The intensity.",
                          "title": "Intensity",
                          "enum": [
                            "very_light",
                            "light",
                            "moderate",
                            "heavy"
                          ],
                          "type": "string"
                        },
                        "visibility": {
                          "$ref": "#/definitions/QuantitativeValue"
                        },
                        "attributes": {
                          "description": "The attributes.",
                          "title": "Attributes",
                          "type": "array",
                          "items": {
                            "enum": [
                              "damaging_wind",
                              "dry_thunderstorms",
                              "flooding",
                              "gusty_wind",
                              "heavy_rain",
                              "large_hail",
                              "small_hail",
                              "tornadoes"
                            ],
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "hazards": {
          "description": "The hazards.",
          "title": "Hazards",
          "required": [
            "values"
          ],
          "type": "object",
          "properties": {
            "values": {
              "type": "array",
              "items": {
                "description": "A value object representing an expected hazard.",
                "title": "Value",
                "required": [
                  "validTime",
                  "value"
                ],
                "type": "object",
                "properties": {
                  "validTime": {
                    "$ref": "#/definitions/ISO8601Interval"
                  },
                  "value": {
                    "type": "array",
                    "items": {
                      "description": "A value object representing an expected hazard.",
                      "title": "Value",
                      "required": [
                        "phenomenon",
                        "significance",
                        "event_number"
                      ],
                      "type": "object",
                      "properties": {
                        "phenomenon": {
                          "description": "Hazard code. This value will correspond to a P-VTEC phenomenon code as defined in NWS Directive 10-1703.",
                          "title": "Phenomenon",
                          "pattern": "^\\w{2}$",
                          "type": "string"
                        },
                        "significance": {
                          "description": "Significance code. This value will correspond to a P-VTEC significance code as defined in NWS Directive 10-1703. This will most frequently be \"A\" for a watch or \"Y\" for an advisory.",
                          "title": "Significance",
                          "pattern": "^\\w$",
                          "type": "string"
                        },
                        "event_number": {
                          "description": "Event number. If this hazard refers to a national or regional center product (such as a Storm Prediction Center convective watch), this value will be the sequence number of that product.",
                          "title": "Event Number",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/GridpointQuantitativeValueLayer"
      }
    },
    "GridpointForecast": {
      "description": "A multi-day forecast for a 2.5km grid square.",
      "title": "Gridpoint Forecast",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "geometry": {
          "$ref": "#/definitions/GeometryString"
        },
        "units": {
          "$ref": "#/definitions/GridpointForecastUnits"
        },
        "forecastGenerator": {
          "description": "The internal generator class used to create the forecast text (used for NWS debugging).",
          "title": "Forecast Generator",
          "type": "string"
        },
        "generatedAt": {
          "format": "date-time",
          "description": "The time this forecast data was generated.",
          "title": "Generated At",
          "type": "string"
        },
        "updateTime": {
          "format": "date-time",
          "description": "The last update time of the data this forecast was generated from.",
          "title": "Update Time",
          "type": "string"
        },
        "validTimes": {
          "$ref": "#/definitions/ISO8601Interval"
        },
        "elevation": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "periods": {
          "description": "An array of forecast periods.",
          "title": "Periods",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GridpointForecastPeriod"
          }
        }
      }
    },
    "GridpointForecastPeriod": {
      "description": "An object containing forecast information for a specific time period (generally 12-hour or 1-hour).",
      "title": "Gridpoint Forecast Period",
      "type": "object",
      "properties": {
        "number": {
          "description": "Sequential period number.",
          "title": "Number",
          "minimum": 1,
          "type": "integer"
        },
        "name": {
          "description": "A textual identifier for the period. This value will not be present for hourly forecasts.",
          "title": "Name",
          "type": "string",
          "example": "Tuesday Night"
        },
        "startTime": {
          "format": "date-time",
          "description": "The starting time that this forecast period is valid for.",
          "title": "Start Time",
          "type": "string"
        },
        "endTime": {
          "format": "date-time",
          "description": "The ending time that this forecast period is valid for.",
          "title": "End Time",
          "type": "string"
        },
        "isDaytime": {
          "description": "Indicates whether this period is daytime or nighttime.",
          "title": "Is Daytime",
          "type": "boolean"
        },
        "temperature": {
          "description": "High/low temperature for the period, depending on whether the period is day or night. This property as an integer value is deprecated. Future versions will express this value as a quantitative value object. To make use of the future standard format now, set the \"forecast_temperature_qv\" feature flag on the request.",
          "title": "Temperature",
          "type": "object",
          "properties": {
            "value": {
              "description": "The temperature value.",
              "title": "Value",
              "type": "number",
              "format": "float"
            },
            "unitCode": {
              "description": "The unit of the temperature value (Fahrenheit or Celsius).",
              "title": "Unit Code",
              "type": "string"
            },
            "quality": {
              "description": "The quality of the temperature value.",
              "title": "Quality",
              "type": "string"
            },
            "valueReference": {
              "$ref": "#/definitions/QuantitativeValue"
            }
          }
        },
        "temperatureUnit": {
          "description": "The unit of the temperature value (Fahrenheit or Celsius). This property is deprecated. Future versions will indicate the unit within the quantitative value object for the temperature property. To make use of the future standard format now, set the \"forecast_temperature_qv\" feature flag on the request.",
          "title": "Temperature Unit",
          "enum": [
            "F",
            "C"
          ],
          "type": "string"
        },
        "temperatureTrend": {
          "description": "If not null, indicates a non-diurnal temperature trend for the period (either rising temperature overnight, or falling temperature during the day).",
          "title": "Temperature Trend",
          "enum": [
            "rising",
            "falling"
          ],
          "type": "string"
        },
        "probabilityOfPrecipitation": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "dewpoint": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "relativeHumidity": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "windSpeed": {
          "description": "description: >  Wind speed for the period. This property as a string value is  deprecated. Future versions will express this value as a quantitative  value object. To make use of the future standard format now, set the  \"forecast_wind_speed_qv\" feature flag on the request.type: object properties:  value:    type: number  unitCode:    type: string  quality:    type: string  valueReference:    $ref: '#/definitions/QuantitativeValue'"
        },
        "windGust": {
          "description": "Peak wind gust for the period.",
          "title": "Wind Gust",
          "type": "object",
          "properties": {
            "value": {
              "description": "The wind gust value.",
              "title": "Value",
              "type": "number",
              "format": "float"
            },
            "unitCode": {
              "description": "The unit of the wind gust value.",
              "title": "Unit Code",
              "type": "string"
            },
            "quality": {
              "description": "The quality of the wind gust value.", 
              "title": "Quality",
              "type": "string"
            },
            "valueReference": {
              "$ref": "#/definitions/QuantitativeValue"
            }
          }
        },
        "windDirection": {
          "description": "The prevailing direction of the wind for the period, using a 16-point compass.",
          "title": "Wind Direction",
          "enum": [
            "N",
            "NNE",
            "NE",
            "ENE",
            "E",
            "ESE",
            "SE",
            "SSE",
            "S",
            "SSW",
            "SW",
            "WSW",
            "W",
            "WNW",
            "NW",
            "NNW"
          ],
          "type": "string"
        },
        "icon": {
          "description": "A link to an icon representing the forecast summary.",
          "title": "Icon",
          "type": "string"
        },
        "shortForecast": {
          "description": "A brief textual forecast summary for the period.",
          "title": "Short Forecast",
          "type": "string"
        },
        "detailedForecast": {
          "description": "A detailed textual forecast for the period.",
          "title": "Detailed Forecast",
          "type": "string"
        }
      }
    },
    "GridpointForecastUnits": {
      "description": "Denotes the units used in the textual portions of the forecast.",
      "title": "Gridpoint Forecast Units",
      "default": "us",
      "enum": [
        "us",
        "si"
      ],
      "type": "string"
    },
    "GridpointForecastGeoJson": {
      "description": "A GeoJSON object representing a gridpoint forecast.",
      "title": "Gridpoint Forecast (GeoJSON)",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "geometry": {
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "coordinates": {
              "description": "The coordinates.",
              "title": "Coordinates",
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            }
          }
        },
        "properties": {
          "$ref": "#/definitions/GridpointForecast"
        },
        "id": {
          "description": "The identifier of the gridpoint forecast.",
          "title": "ID",
          "type": "string"
        }
      }
    },
    "GridpointForecastJsonLd": {
      "description": "A multi-day forecast for a 2.5km grid square.",
      "title": "Gridpoint Forecast (JSON-LD)",
      "type": "object",
      "required": [
        "@context",
        "geometry"
      ],
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "geometry": {
          "$ref": "#/definitions/GeometryString"
        },
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/GridpointForecast"
        },
        "id": {
          "description": "The identifier of the gridpoint forecast.",
          "title": "ID",
          "type": "string"
        }
      }
    },
    "ISO8601Duration": {
      "description": "A time duration in ISO 8601 format.",
      "title": "ISO 8601 Duration",
      "pattern": "^P(\\d+Y)?(\\d+M)?(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+S)?)?$",
      "type": "string",
      "example": "P2DT12H"
    },
    "ISO8601Interval": {
      "description": "A time interval in ISO 8601 format. This can be one of: 1. Start and end time 2. Start time and duration 3. Duration and end time The string \"NOW\" can also be used in place of a start/end time.",
      "title": "ISO 8601 Interval",
      "type": "string",
      "pattern": "^(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)\\/(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(Z|[+-]\\d{2}:?\\d{2}?)|NOW)$",
      "example": "2007-03-01T13:00:00Z/2008-05-11T15:30:00Z"
    },
    "JsonLdContext": {
      "description": "A JSON-LD context definition.",
      "title": "JSON-LD Context",
      "type": "array",
      "items": {}
    },
    "LandRegionCode": {
      "description": "Land region code. These correspond to the six NWS regional headquarters:* AR: Alaska Region* CR: Central Region* ER: Eastern Region* PR: Pacific Region* SR: Southern Region* WR: Western Region.",
      "title": "Land Region Code",
      "enum": [
        "AR",
        "CR",
        "ER",
        "PR",
        "SR",
        "WR"
      ],
      "type": "string"
    },
    "MarineAreaCode": {
      "description": "Marine area code as defined in NWS Directive 10-302:. * AM: Western North Atlantic Ocean and along U.S. East Coast south of Currituck Beach Light NC following the coastline into Gulf of Mexico to Ocean Reef FL including the Caribbean. * AN: Western North Atlantic Ocean and along U.S. East Coast from Canadian border south to Currituck Beach Light NC. * GM: Gulf of Mexico and along the U.S. Gulf Coast from the Mexican border to Ocean Reef FL. * LC: Lake St. Clair. * LE: Lake Erie. * LH: Lake Huron. * LM: Lake Michigan. * LO: Lake Ontario. * LS: Lake Superior. * PH: Central Pacific Ocean including Hawaiian waters. * PK: North Pacific Ocean near Alaska and along Alaska coastline including the Bering Sea and the Gulf of Alaska. * PM: Western Pacific Ocean including Mariana Island waters. * PS: South Central Pacific Ocean including American Samoa waters. * PZ: Eastern North Pacific Ocean and along U.S. West Coast from Canadian border to Mexican border. * SL: St. Lawrence River above St. Regis",
      "title": "Marine Area Code",
      "enum": [
        "AM",
        "AN",
        "GM",
        "LC",
        "LE",
        "LH",
        "LM",
        "LO",
        "LS",
        "PH",
        "PK",
        "PM",
        "PS",
        "PZ",
        "SL"
      ],
      "type": "string"
    },
    "MarineRegionCode": {
      "description": "Marine region code. These are groups of marine areas combined.* AL: Alaska waters (PK)* AT: Atlantic Ocean (AM, AN)* GL: Great Lakes (LC, LE, LH, LM, LO, LS, SL)* GM: Gulf of Mexico (GM)* PA: Eastern Pacific Ocean and U.S. West Coast (PZ)* PI: Central and Western Pacific (PH, PM, PS)",
      "title": "Marine Region Code",
      "enum": [
        "AL",
        "AT",
        "GL",
        "GM",
        "PA",
        "PI"
      ],
      "type": "string"
    },
    "MetarPhenomenon": {
      "description": "An object representing a decoded METAR phenomenon string.",
      "title": "METAR Phenomenon",
      "required": [
        "intensity",
        "modifier",
        "weather",
        "rawString"
      ],
      "type": "object",
      "properties": {
        "intensity": {
          "description": "The intensity.",
          "title": "Intensity",
          "enum": [
            "light",
            "heavy"
          ],
          "type": "string"
        },
        "modifier": {
          "description": "The modifier.",
          "title": "Modifier",
          "enum": [
            "patches",
            "blowing",
            "low_drifting",
            "freezing",
            "shallow",
            "partial",
            "showers"
          ],
          "type": "string"
        },
        "weather": {
          "description": "The weather.",
          "title": "Weather",
          "enum": [
            "fog_mist",
            "dust_storm",
            "dust",
            "drizzle",
            "funnel_cloud",
            "fog",
            "smoke",
            "hail",
            "snow_pellets",
            "haze",
            "ice_crystals",
            "ice_pellets",
            "dust_whirls",
            "spray",
            "rain",
            "sand",
            "snow_grains",
            "snow",
            "squalls",
            "sand_storm",
            "thunderstorms",
            "unknown",
            "volcanic_ash"
          ],
          "type": "string"
        },
        "rawString": {
          "description": "The raw METAR string.",
          "title": "Raw String",
          "type": "string"
        },
        "inVicinity": {
          "description": "Indicates whether the phenomenon is in the vicinity.",
          "title": "In Vicinity",
          "type": "boolean"
        }
      }
    },
    "MetarSkyCoverage": {
      "description": "An object representing a decoded METAR sky coverage string.",
      "title": "METAR Sky Coverage",
      "enum": [
        "OVC",
        "BKN",
        "SCT",
        "FEW",
        "SKC",
        "CLR",
        "VV"
      ],
      "type": "string"
    },
    "NWSCenterWeatherServiceUnitId": {
      "description": "Three-letter identifier for a Center Weather Service Unit (CWSU).",
      "title": "NWS Center Weather Service Unit ID",
      "enum": [
        "ZAB",
        "ZAN",
        "ZAU",
        "ZBW",
        "ZDC",
        "ZDV",
        "ZFA",
        "ZFW",
        "ZHU",
        "ZID",
        "ZJX",
        "ZKC",
        "ZLA",
        "ZLC",
        "ZMA",
        "ZME",
        "ZMP",
        "ZNY",
        "ZOA",
        "ZOB",
        "ZSE",
        "ZTL"
      ],
      "type": "string"
    },
    "NWSForecastOfficeId": {
      "description": "Three-letter identifier for a NWS office.",
      "title": "NWS Forecast Office ID",
      "enum": [
        "AKQ",
        "ALY",
        "BGM",
        "BOX",
        "BTV",
        "BUF",
        "CAE",
        "CAR",
        "CHS",
        "CLE",
        "CTP",
        "GSP",
        "GYX",
        "ILM",
        "ILN",
        "LWX",
        "MHX",
        "OKX",
        "PBZ",
        "PHI",
        "RAH",
        "RLX",
        "RNK",
        "ABQ",
        "AMA",
        "BMX",
        "BRO",
        "CRP",
        "EPZ",
        "EWX",
        "FFC",
        "FWD",
        "HGX",
        "HUN",
        "JAN",
        "JAX",
        "KEY",
        "LCH",
        "LIX",
        "LUB",
        "LZK",
        "MAF",
        "MEG",
        "MFL",
        "MLB",
        "MOB",
        "MRX",
        "OHX",
        "OUN",
        "SHV",
        "SJT",
        "SJU",
        "TAE",
        "TBW",
        "TSA",
        "ABR",
        "APX",
        "ARX",
        "BIS",
        "BOU",
        "CYS",
        "DDC",
        "DLH",
        "DMX",
        "DTX",
        "DVN",
        "EAX",
        "FGF",
        "FSD",
        "GID",
        "GJT",
        "GLD",
        "GRB",
        "GRR",
        "ICT",
        "ILX",
        "IND",
        "IWX",
        "JKL",
        "LBF",
        "LMK",
        "LOT",
        "LSX",
        "MKX",
        "MPX",
        "MQT",
        "OAX",
        "PAH",
        "PUB",
        "RIW",
        "SGF",
        "TOP",
        "UNR",
        "BOI",
        "BYZ",
        "EKA",
        "FGZ",
        "GGW",
        "HNX",
        "LKN",
        "LOX",
        "MFR",
        "MSO",
        "MTR",
        "OTX",
        "PDT",
        "PIH",
        "PQR",
        "PSR",
        "REV",
        "SEW",
        "SGX",
        "SLC",
        "STO",
        "TFX",
        "TWC",
        "VEF",
        "AER",
        "AFC",
        "AFG",
        "AJK",
        "ALU",
        "GUM",
        "HPA",
        "HFO",
        "PPG",
        "STU",
        "NH1",
        "NH2",
        "ONA",
        "ONP"
      ],
      "type": "string"
    },
    "NWSNationalHQId": {
      "description": "Three-letter identifier for NWS National HQ.",
      "title": "NWS National HQ ID",
      "enum": [
        "NWS"
      ],
      "type": "string"
    },
    "NWSOfficeId": {
      "description": "Three-letter identifier for a NWS office.",
      "title": "NWS Office ID",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/NWSForecastOfficeId"
        },
        "name": {
          "description": "The name of the office.",
          "title": "Name",
          "type": "string"
        },
        "address": {
          "type": "object",
          "properties": {
            "street": {
              "description": "The street address.",
              "title": "Street",
              "type": "string"
            },
            "city": {
              "description": "The city.",
              "title": "City",
              "type": "string"
            },
            "state": {
              "description": "The state.",
              "title": "State",
              "type": "string"
            },
            "zip": {
              "description": "The ZIP code.",
              "title": "ZIP",
              "type": "string"
            }
          }
        }
      }
    },
    "NWSRegionalHQId": {
      "description": "Three-letter identifier for a NWS Regional HQ.",
      "title": "NWS Regional HQ ID",
      "enum": [
        "ARH",
        "CRH",
        "ERH",
        "PRH",
        "SRH",
        "WRH"
      ],
      "type": "string"
    },
    "NWSZoneID": {
      "description": "UGC identifier for a NWS forecast zone or county. The first two letters will correspond to either a state code or marine area code (see #/components/schemas/StateTerritoryCode and #/components/schemas/MarineAreaCode for lists of valid letter combinations). The third letter will be Z for public/fire zone or C for county.",
      "title": "NWS Zone ID",
      "pattern": "^(A[KLMNRSZ]|C[AOT]|D[CE]|F[LM]|G[AMU]|I[ADLN]|K[SY]|L[ACEHMOS]|M[ADEHINOPST]|N[CDEHJMVY]|O[HKR]|P[AHKMRSWZ]|S[CDL]|T[NX]|UT|V[AIT]|W[AIVY]|[HR]I)[CZ]\\d{3}$",
      "type": "string"
    },
    "NWSZoneType": {
      "description": "The type of NWS zone.",
      "title": "NWS Zone Type",
      "enum": [
        "land",
        "marine",
        "forecast",
        "public",
        "coastal",
        "offshore",
        "fire",
        "county"
      ],
      "type": "string"
    },
    "Observation": {
      "description": "An object representing a weather observation.",
      "title": "Observation",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "geometry": {
          "$ref": "#/definitions/GeometryString"
        },
        "@id": {
          "description": "The identifier of the observation.",
          "title": "ID", 
          "type": "string"
        },
        "@type": {
          "description": "The type.",
          "title": "Type",
          "enum": [
            "wx:ObservationStation"
          ],
          "type": "string"
        },
        "elevation": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "station": {
          "description": "The station.",
          "title": "Station",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp.",
          "title": "Timestamp",
          "format": "date-time",
          "type": "string"
        },
        "rawMessage": {
          "description": "The raw message.",
          "title": "Raw Message",
          "type": "string"
        },
        "textDescription": {
          "description": "The text description.",
          "title": "Text Description",
          "type": "string"
        },
        "icon": {
          "description": "The icon.",
          "title": "Icon",
          "type": "string"
        },
        "presentWeather": {
          "description": "The present weather.",
          "title": "Present Weather",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetarPhenomenon"
          }
        },
        "temperature": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "dewpoint": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "windDirection": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "windSpeed": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "windGust": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "barometricPressure": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "seaLevelPressure": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "visibility": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "maxTemperatureLast24Hours": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "minTemperatureLast24Hours": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "precipitationLastHour": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "precipitationLast3Hours": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "precipitationLast6Hours": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "relativeHumidity": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "windChill": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "heatIndex": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "cloudLayers": {
          "description": "The cloud layers.",
          "title": "Cloud Layers",
          "type": "array",
          "items": {
            "required": [
              "base",
              "amount"
            ],
            "type": "object",
            "properties": {
              "base": {
                "$ref": "#/definitions/QuantitativeValue"
              },
              "amount": {
                "$ref": "#/definitions/MetarSkyCoverage"
              }
            }
          }
        }
      }
    },
    "ObservationGeoJson": {
      "type": "object",
      "properties": {
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "geometry": {
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "coordinates": {
              "description": "The coordinates.",
              "title": "Coordinates",
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            }
          }
        },
        "properties": {
          "$ref": "#/definitions/Observation"
        },
        "id": {
          "description": "The identifier of the observation.",
          "title": "ID",
          "type": "string"
        }
      }
    },
    "ObservationJsonLd": {
      "description": "An object representing a weather observation.",
      "title": "Observation (JSON-LD)",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "geometry": {
          "$ref": "#/definitions/GeometryString"
        },
        "@id": {
          "description": "The identifier of the observation.",
          "title": "ID",
          "type": "string"
        },
        "@type": {
          "description": "The type.",
          "title": "Type",
          "enum": [
            "wx:ObservationStation"
          ],
          "type": "string"
        },
        "elevation": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "station": {
          "description": "The station.",
          "title": "Station",
          "type": "string"
        },
        "timestamp": {
          "description": "The timestamp.",
          "title": "Timestamp",
          "format": "date-time",
          "type": "string"
        },
        "rawMessage": {
          "description": "The raw message.",
          "title": "Raw Message",
          "type": "string"
        },
        "textDescription": {
          "description": "The text description.",
          "title": "Text Description",
          "type": "string"
        },
        "icon": {
          "description": "The icon.",
          "title": "Icon",
          "type": "string"
        },
        "presentWeather": {
          "description": "The present weather.",
          "title": "Present Weather",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetarPhenomenon"
          }
        },
        "temperature": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "dewpoint": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "windDirection": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "windSpeed": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "windGust": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "barometricPressure": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "seaLevelPressure": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "visibility": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "maxTemperatureLast24Hours": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "minTemperatureLast24Hours": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "precipitationLastHour": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "precipitationLast3Hours": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "precipitationLast6Hours": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "relativeHumidity": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "windChill": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "heatIndex": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "cloudLayers": {
          "description": "The cloud layers.",
          "title": "Cloud Layers",
          "type": "array",
          "items": {
            "required": [
              "base",
              "amount"
            ],
            "type": "object",
            "properties": {
              "base": {
                "$ref": "#/definitions/QuantitativeValue"
              },
              "amount": {
                "$ref": "#/definitions/MetarSkyCoverage"
              }
            }
          }
        }
      }
    },
    "ObservationCollectionGeoJson": {
      "description": "A GeoJSON object representing a collection of weather observations.",
      "title": "Observation Collection (GeoJSON)",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "features": {
          "description": "The features.",
          "title": "Features",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "description": "The type.",
                "title": "Type",
                "type": "string"
              },
              "geometry": {
                "description": "The geometry.",
                "title": "Geometry",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type.",
                    "title": "Type",
                    "type": "string"
                  },
                  "coordinates": {
                    "description": "The coordinates.",
                    "title": "Coordinates",
                    "type": "array",
                    "items": {
                      "type": "number",
                      "format": "float"
                    }
                  }
                }
              },
              "properties": {
                "$ref": "#/definitions/Observation"
              }
            }
          }
        },
        "crs": {
          "description": "The CRS.",
          "title": "CRS",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "name": {
              "description": "The name.",
              "title": "Name",
              "type": "string"
            }
          }
        },
        "bbox": {
          "description": "The bounding box.",
          "title": "Bounding Box",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      }
    },
    "ObservationCollectionJsonLd": {
      "description": "A collection of weather observations.",
      "title": "Observation Collection (JSON-LD)",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "@graph": {
          "description": "The graph.",
          "title": "Graph",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Observation"
          }
        }
      }
    },
    "ObservationStation": {
      "description": "An object representing a weather observation station.",
      "title": "Observation Station",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "geometry": {
          "$ref": "#/definitions/GeometryString"
        },
        "@id": {
          "description": "The identifier of the observation station.",
          "title": "ID",
          "type": "string"
        },
        "@type": {
          "description": "The type.",
          "title": "Type",
          "enum": [
            "wx:ObservationStation"
          ],
          "type": "string"
        },
        "elevation": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "stationIdentifier": {
          "description": "The station identifier.",
          "title": "Station Identifier",
          "type": "string"
        },
        "name": {
          "description": "The name of the station.",
          "title": "Name",
          "type": "string"
        },
        "timeZone": {
          "description": "The time zone.",
          "title": "Time Zone",
          "type": "string"
        },
        "forecast": {
          "description": "A link to the NWS public forecast zone containing this station.",
          "title": "Forecast",
          "type": "string"
        },
        "county": {
          "description": "A link to the NWS county zone containing this station.",
          "title": "County",
          "type": "string"
        },
        "fireWeatherZone": {
          "description": "A link to the NWS fire weather forecast zone containing this station.",
          "title": "Fire Weather Zone",
          "type": "string"
        }
      }
    },
    "ObservationStationGeoJson": {
      "type": "object",
      "properties": {
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "geometry": {
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "coordinates": {
              "description": "The coordinates.",
              "title": "Coordinates",
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            }
          }
        },
        "properties": {
          "$ref": "#/definitions/ObservationStation"
        },
        "id": {
          "description": "The identifier of the observation station.",
          "title": "ID",
          "type": "string"
        }
      }
    },
    "ObservationStationJsonLd": {
      "description": "An object representing a weather observation station.",
      "title": "Observation Station (JSON-LD)",
      "type": "object",
      "required": [
        "@context",
        "geometry"
      ],
      "properties": {
        "id": {
          "description": "The identifier of the observation station.",
          "title": "ID",
          "type": "string"
        },
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "geometry": {
          "$ref": "#/definitions/GeometryString"
        },
        "properties": {
          "$ref": "#/definitions/ObservationStation"
        },
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        }
      }
    },
    "ObservationStationCollectionGeoJson": {
      "type": "object",
      "properties": {
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "features": {
          "description": "The features.",
          "title": "Features",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "description": "The type.",
                "title": "Type",
                "type": "string"
              },
              "geometry": {
                "description": "The geometry.",
                "title": "Geometry",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type.",
                    "title": "Type",
                    "type": "string"
                  },
                  "coordinates": {
                    "description": "The coordinates.",
                    "title": "Coordinates",
                    "type": "array",
                    "items": {
                      "type": "number",
                      "format": "float"
                    }
                  }
                }
              },
              "properties": {
                "$ref": "#/definitions/ObservationStation"
              }
            }
          }
        },
        "observationStations": {
          "description": "The observation stations.",
          "title": "Observation Stations",
          "type": "array",
          "items": {
            "description": "The observation station.",
            "title": "Observation Station",
            "type": "string"
          }
        },
        "pagination": {
          "$ref": "#/definitions/PaginationInfo"
        },
        "crs": {
          "description": "The CRS.",
          "title": "CRS",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "name": {
              "description": "The name.",
              "title": "Name",
              "type": "string"
            }
          }
        },
        "bbox": {
          "description": "The bounding box.",
          "title": "Bounding Box",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      }
    },
    "ObservationStationCollectionJsonLd": {
      "description": "A collection of weather observation stations.",
      "title": "Observation Station Collection (JSON-LD)",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "@graph": {
          "description": "The graph.",
          "title": "Graph",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObservationStation"
          }
        },
        "observationStations": {
          "description": "The observation stations.",
          "title": "Observation Stations",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pagination": {
          "$ref": "#/definitions/PaginationInfo"
        }
      }
    },
    "Office": {
      "description": "An object representing a NWS office.",
      "title": "Office",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "@type": {
          "description": "The type.",
          "title": "Type",
          "enum": [
            "GovernmentOrganization"
          ],
          "type": "string"
        },
        "@id": {
          "description": "The identifier of the context.",
          "title": "Context ID",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the office.", 
          "title": "ID",
          "type": "string"
        },
        "name": {
          "description": "The name of the office.",
          "title": "Name",
          "type": "string"
        },
        "address": {
          "description": "The address of the office.",
          "title": "Address",
          "type": "object",
          "properties": {
            "@type": {
              "description": "The type.",
              "title": "Type",
              "enum": [
                "PostalAddress"
              ],
              "type": "string"
            },
            "streetAddress": {
              "description": "The street address.",
              "title": "Street Address",
              "type": "string"
            },
            "addressLocality": {
              "description": "The locality.",
              "title": "Locality",
              "type": "string"
            },
            "addressRegion": {
              "description": "The region.",
              "title": "Region",
              "type": "string"
            },
            "postalCode": {
              "description": "The postal code.",
              "title": "Postal Code",
              "type": "string"
            }
          }
        },
        "telephone": {
          "description": "The telephone number.",
          "title": "Telephone",
          "type": "string"
        },
        "faxNumber": {
          "description": "The fax number.",
          "title": "Fax Number",
          "type": "string"
        },
        "email": {
          "description": "The email address.",
          "title": "Email",
          "type": "string"
        },
        "sameAs": {
          "description": "The same as.",
          "title": "Same As",
          "type": "string"
        },
        "nwsRegion": {
          "description": "The NWS region.",
          "title": "NWS Region",
          "type": "string"
        },
        "parentOrganization": {
          "description": "The parent organization.",
          "title": "Parent Organization",
          "type": "string"
        },
        "responsibleCounties": {
          "description": "The responsible counties.",
          "title": "Responsible Counties",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responsibleForecastZones": {
          "description": "The responsible forecast zones.",
          "title": "Responsible Forecast Zones",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "responsibleFireZones": {
          "description": "The responsible fire zones.",
          "title": "Responsible Fire Zones",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "approvedObservationStations": {
          "description": "The approved observation stations.",
          "title": "Approved Observation Stations",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OfficeHeadline": {
      "description": "An object representing a headline from a NWS office.",
      "title": "Office Headline",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "@id": {
          "description": "The identifier of the context",
          "title": "Context ID",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the headline.",
          "title": "ID",
          "type": "string"
        },
        "office": {
          "description": "The office.",
          "title": "Office",
          "type": "string"
        },
        "important": {
          "description": "Indicates whether the headline is important.",
          "title": "Important",
          "type": "boolean"
        },
        "issuanceTime": {
          "description": "The issuance time.",
          "title": "Issuance Time",
          "format": "date-time",
          "type": "string"
        },
        "link": {
          "description": "The link.",
          "title": "Link",
          "type": "string"
        },
        "name": {
          "description": "The name of the headline.",
          "title": "Name",
          "type": "string"
        },
        "title": {
          "description": "The title of the headline.",
          "title": "Title",
          "type": "string"
        },
        "summary": {
          "description": "The summary of the headline.",
          "title": "Summary",
          "type": "string"
        },
        "content": {
          "description": "The content of the headline.",
          "title": "Content",
          "type": "string"
        }
      }
    },
    "OfficeHeadlineCollection": {
      "description": "A collection of headlines from NWS offices.",
      "title": "Office Headline Collection",
      "required": [
        "@context",
        "@graph"
      ],
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "@graph": {
          "description": "The graph.",
          "title": "Graph",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfficeHeadline"
          }
        }
      }
    },
    "PaginationInfo": {
      "description": "Links for retrieving more data from paged data sets.",
      "title": "Pagination Info",
      "required": [
        "next"
      ],
      "type": "object",
      "properties": {
        "next": {
          "description": "A link to the next page of records.",
          "title": "Next",
          "type": "string"
        }
      }
    },
    "Point": {
      "description": "An object representing a point.",
      "title": "Point",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "geometry": {
          "$ref": "#/definitions/GeometryString"
        },
        "@id": {
          "description": "The identifier of the context.",
          "title": "Context ID",
          "type": "string"
        },
        "@type": {
          "description": "The context type.",
          "title": "Context Type",
          "enum": [
            "wx:Point"
          ],
          "type": "string"
        },
        "cwa": {
          "$ref": "#/definitions/NWSForecastOfficeId"
        },
        "forecastOffice": {
          "description": "The forecast office.",
          "title": "Forecast Office",
          "type": "string"
        },
        "gridId": {
          "$ref": "#/definitions/NWSForecastOfficeId"
        },
        "gridX": {
          "description": "The grid X.",
          "title": "Grid X",
          "minimum": 0,
          "type": "integer"
        },
        "gridY": {
          "description": "The grid Y.",
          "title": "Grid Y",
          "minimum": 0,
          "type": "integer"
        },
        "forecast": {
          "description": "The forecast.",
          "title": "Forecast",
          "type": "string"
        },
        "forecastHourly": {
          "description": "The hourly forecast.",
          "title": "Hourly Forecast",
          "type": "string"
        },
        "forecastGridData": {
          "description": "The forecast grid data.",
          "title": "Forecast Grid Data",
          "type": "string"
        },
        "observationStations": {
          "description": "The observation stations.",
          "title": "Observation Stations",
          "type": "string"
        },
        "relativeLocation": {
          "description": "The relative location.",
          "title": "Relative Location",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "geometry": {
              "description": "The geometry.",
              "title": "Geometry",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type.",
                  "title": "Type",
                  "type": "string"
                },
                "coordinates": {
                  "description": "The coordinates.",
                  "title": "Coordinates",
                  "type": "array",
                  "items": {
                    "type": "number",
                    "format": "float"
                  }
                }
              }
            },
            "properties": {
              "$ref": "#/definitions/RelativeLocation"
            },
            "id": {
              "description": "The identifier of the relative location.",
              "title": "ID",
              "type": "string"
            }
          }
        },
        "forecastZone": {
          "description": "The forecast zone.",
          "title": "Forecast Zone",
          "type": "string"
        },
        "county": {
          "description": "The county.",
          "title": "County",
          "type": "string"
        },
        "fireWeatherZone": {
          "description": "The fire weather zone.",
          "title": "Fire Weather Zone",
          "type": "string"
        },
        "timeZone": {
          "description": "The time zone.",
          "title": "Time Zone",
          "type": "string"
        },
        "radarStation": {
          "description": "The radar station.",
          "title": "Radar Station",
          "type": "string"
        }
      }
    },
    "PointGeoJson": {
      "description": "A GeoJSON object representing a point.",
      "title": "Point (GeoJSON)",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "geometry": {
          "description": "The geometry.",
          "title": "Geometry",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "coordinates": {
              "description": "The coordinates.",
              "title": "Coordinates",
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            }
          }
        },
        "properties": {
          "$ref": "#/definitions/Point"
        },
        "id": {
          "description": "The identifier of the point.",
          "title": "ID",
          "type": "string"
        }
      }
    },
    "PointJsonLd": {
      "description": "An object representing a point.",
      "title": "Point (JSON-LD)",
      "type": "object",
      "required": [
        "@context",
        "geometry"
      ],
      "properties": {
        "id": {
          "description": "The identifier of the point.",
          "title": "ID",
          "type": "string"
        },
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "geometry": {
          "$ref": "#/definitions/GeometryString"
        },
        "properties": {
          "$ref": "#/definitions/Point"
        },
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        }
      }
    },
    "PointString": {
      "description": "An object representing a point.",
      "title": "Point (String)",
      "pattern": "^(-?\\d+(?:\\.\\d+)?),(-?\\d+(?:\\.\\d+)?)$",
      "type": "string"
    },
    "ProblemDetail": {
      "description": "Detail about an error. This document conforms to RFC 7807 (Problem Details for HTTP APIs).",
      "title": "Problem Detail",
      "required": [
        "type",
        "title",
        "status",
        "detail",
        "instance",
        "correlationId"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "A URI reference (RFC 3986) that identifies the problem type. This is only an identifier and is not necessarily a resolvable URL.",
          "title": "Type",
          "default": "about:blank",
          "type": "string",
          "example": "urn:noaa:nws:api:UnexpectedProblem"
        },
        "title": {
          "description": "A short, human-readable summary of the problem type.",
          "title": "Title",
          "type": "string",
          "example": "Unexpected Problem"
        },
        "status": {
          "description": "The HTTP status code (RFC 7231, Section 6) generated by the origin server for this occurrence of the problem.",
          "title": "Status",
          "maximum": 999,
          "minimum": 100,
          "type": "integer",
          "format": "int32",
          "example": 500
        },
        "detail": {
          "description": "A human-readable explanation specific to this occurrence of the problem.",
          "title": "Detail",
          "type": "string",
          "example": "An unexpected problem has occurred."
        },
        "instance": {
          "description": "A URI reference (RFC 3986) that identifies the specific occurrence of the problem. This is only an identifier and is not necessarily a resolvable URL.",
          "title": "Instance",
          "type": "string",
          "example": "urn:noaa:nws:api:request:493c3a1d-f87e-407f-ae2c-24483f5aab63"
        },
        "correlationId": {
          "description": "A unique identifier for the request, used for NWS debugging purposes. Please include this identifier with any correspondence to help us investigate your issue.",
          "title": "Correlation ID",
          "type": "string",
          "example": "493c3a1d-f87e-407f-ae2c-24483f5aab63"
        }
      }
    },
    "QuantitativeValue": {
      "description": "A structured value representing a measurement and its unit of measure. This object is a slighly modified version of the schema.org definition at https://schema.org/QuantitativeValue",
      "title": "Quantitative Value",
      "type": "object",
      "properties": {
        "value": {
          "description": "A measured value.",
          "title": "Value",
          "type": "number",
          "format": "float"
        },
        "maxValue": {
          "description": "The maximum value of a range of measured values.",
          "title": "Max Value",
          "type": "number",
          "format": "float"
        },
        "minValue": {
          "description": "The minimum value of a range of measured values.",
          "title": "Min Value",
          "type": "number",
          "format": "float"
        },
        "unitCode": {
          "$ref": "#/definitions/UnitOfMeasure"
        },
        "qualityControl": {
          "description": "For values in observation records, the quality control flag from the MADIS system. The definitions of these flags can be found at https://madis.ncep.noaa.gov/madis_sfc_qc_notes.shtml",
          "title": "Quality Control",
          "enum": [
            "Z",
            "C",
            "S",
            "V",
            "X",
            "Q",
            "G",
            "B",
            "T"
          ],
          "type": "string"
        }
      }
    },
    "RegionCode": {
      "description": "A code representing a region.",
      "title": "Region Code",
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/LandRegionCode"
        },
        "name": {
          "description": "The name of the region.",
          "title": "Name",
          "type": "string"
        },
        "description": {
          "description": "A description of the region.",
          "title": "Description",
          "type": "string"
        },
        "geometry": {
          "description": "The geometry of the region.",
          "title": "Geometry",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "coordinates": {
              "description": "The coordinates.",
              "title": "Coordinates",
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            }
          }
        }
      }
    },
    "RelativeLocation": {
      "description": "An object representing a relative location.",
      "title": "Relative Location",
      "type": "object",
      "properties": {
        "city": {
          "description": "The city.",
          "title": "City",
          "type": "string"
        },
        "state": {
          "description": "The state.",
          "title": "State",
          "type": "string"
        },
        "distance": {
          "$ref": "#/definitions/QuantitativeValue"
        },
        "bearing": {
          "$ref": "#/definitions/QuantitativeValue"
        }
      }
    },
    "RelativeLocationGeoJson": {
      "description": "A GeoJSON object representing a relative location.",
      "title": "Relative Location (GeoJSON)",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "geometry": {
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "coordinates": {
              "description": "The coordinates.",
              "title": "Coordinates",
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            }
          }
        },
        "properties": {
          "$ref": "#/definitions/RelativeLocation"
        },
        "id": {
          "description": "The identifier of the relative location.",
          "title": "ID",
          "type": "string"
        }
      }
    },
    "RelativeLocationJsonLd": {
      "description": "An object representing a relative location.",
      "title": "Relative Location (JSON-LD)",
      "type": "object",
      "required": [
        "geometry"
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/LandRegionCode"
        },
        "name": {
          "description": "The name of the relative location.",
          "title": "Name",
          "type": "string"
        },
        "description": {
          "description": "A description of the relative location.",
          "title": "Description",
          "type": "string"
        },
        "geometry": {
          "$ref": "#/definitions/GeometryString"
        }
      }
    },
    "Sigmet": {
      "description": "An object representing a significant meteorological information (SIGMET) report.",
      "title": "SIGMET",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier of the SIGMET.",
          "title": "ID", 
          "type": "string"
        },
        "issueTime": {
          "description": "The time the SIGMET was issued.",
          "title": "Issue Time",
          "format": "date-time",
          "type": "string"
        },
        "fir": {
          "description": "The flight information region (FIR) in which the SIGMET is valid.",
          "title": "FIR",
          "type": "string"
        },
        "atsu": {
          "$ref": "#/definitions/ATSUIdentifier"
        },
        "sequence": {
          "description": "The sequence number of the SIGMET.",
          "title": "Sequence",
          "type": "string"
        },
        "phenomenon": {
          "description": "The phenomenon described by the SIGMET.",
          "title": "Phenomenon",
          "type": "string"
        },
        "start": {
          "description": "The time the SIGMET is valid from.",
          "title": "Start",
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "description": "The time the SIGMET is valid until.",
          "title": "End",
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "SigmetCollectionGeoJson": {
      "description": "A GeoJSON object representing a collection of SIGMET reports.",
      "title": "SIGMET Collection (GeoJSON)",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "features": {
          "description": "The features.",
          "title": "Features",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "description": "The type.",
                "title": "Type",
                "type": "string"
              },
              "geometry": {
                "description": "The geometry.",
                "title": "Geometry",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type.",
                    "title": "Type",
                    "type": "string"
                  },
                  "coordinates": {
                    "description": "The coordinates.",
                    "title": "Coordinates",
                    "type": "array",
                    "items": {
                      "type": "number",
                      "format": "float"
                    }
                  }
                }
              },
              "properties": {
                "$ref": "#/definitions/SigmetGeoJson"
              }
            }
          }
        },
        "crs": {
          "description": "The CRS.",
          "title": "CRS",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "name": {
              "description": "The name.",
              "title": "Name",
              "type": "string"
            }
          }
        },
        "bbox": {
          "description": "The bounding box.",
          "title": "Bounding Box",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      }
    },
    "SigmetGeoJson": {
      "description": "A GeoJSON object representing a SIGMET report.",
      "title": "SIGMET (GeoJSON)",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "geometry": {
          "description": "The geometry.",
          "title": "Geometry",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "coordinates": {
              "description": "The coordinates.",
              "title": "Coordinates",
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            }
          }
        },
        "properties": {
          "$ref": "#/definitions/Sigmet"
        },
        "id": {
          "description": "The identifier of the SIGMET.",
          "title": "ID",
          "type": "string"
        }
      }
    },
    "SigmetSequenceNumber": {
      "description": "A sequence number for a SIGMET report.",
      "title": "SIGMET Sequence Number",
      "type": "string"
    },
    "StateTerritoryCode": {
      "description": "A code representing a state or territory.",
      "title": "State/Territory Code",
      "enum": [
        "AL",
        "AK",
        "AS",
        "AR",
        "AZ",
        "CA",
        "CO",
        "CT",
        "DE",
        "DC",
        "FL",
        "GA",
        "GU",
        "HI",
        "ID",
        "IL",
        "IN",
        "IA",
        "KS",
        "KY",
        "LA",
        "ME",
        "MD",
        "MA",
        "MI",
        "MN",
        "MS",
        "MO",
        "MT",
        "NE",
        "NV",
        "NH",
        "NJ",
        "NM",
        "NY",
        "NC",
        "ND",
        "OH",
        "OK",
        "OR",
        "PA",
        "PR",
        "RI",
        "SC",
        "SD",
        "TN",
        "TX",
        "UT",
        "VT",
        "VI",
        "VA",
        "WA",
        "WV",
        "WI",
        "WY",
        "MP",
        "PW",
        "FM",
        "MH"
      ],
      "type": "string"
    },
    "TextProduct": {
      "description": "An object representing a text product.",
      "title": "Text Product",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "@id": {
          "description": "The identifier of the context.",
          "title": "Context ID",
          "type": "string"
        },
        "id": {
          "description": "The identifier of the text product.",
          "title": "ID",
          "type": "string"
        },
        "wmoCollectiveId": {
          "description": "The WMO collective ID.",
          "title": "WMO Collective ID",
          "type": "string"
        },
        "issuingOffice": {
          "description": "The issuing office.",
          "title": "Issuing Office",
          "type": "string"
        },
        "issuanceTime": {
          "description": "The time the text product was issued.",
          "title": "Issuance Time",
          "format": "date-time",
          "type": "string"
        },
        "productCode": {
          "description": "The product code.",
          "title": "Product Code",
          "type": "string"
        },
        "productName": {
          "description": "The name of the product.",
          "title": "Product Name",
          "type": "string"
        },
        "productText": {
          "description": "The text of the product.",
          "title": "Product Text",
          "type": "string"
        }
      }
    },
    "TextProductCollection": {
      "description": "A collection of text products.",
      "title": "Text Product Collection",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "@graph": {
          "description": "The graph.",
          "title": "Graph",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextProduct"
          }
        }
      }
    },
    "TextProductTypeCollection": {
      "description": "A collection of text product types.",
      "title": "Text Product Type Collection",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "@graph": {
          "description": "The graph.",
          "title": "Graph",
          "type": "array",
          "items": {
            "required": [
              "productCode",
              "productName"
            ],
            "type": "object",
            "properties": {
              "productCode": {
                "description": "The product code.",
                "title": "Product Code",
                "type": "string"
              },
              "productName": {
                "description": "The name of the product.",
                "title": "Product Name",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "TextProductLocationCollection": {
      "description": "A collection of text product locations.",
      "title": "Text Product Location Collection",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "locations": {
          "description": "The locations.",
          "title": "Locations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Time": {
      "description": "A time (in HHMM format). This is always specified in UTC (Zulu) time.",
      "title": "Time",
      "pattern": "^([01][0-9]|2[0-3])[0-5][0-9]$",
      "type": "string"
    },
    "UnitOfMeasure": {
      "description": "A string denoting a unit of measure. Units with the namespace \"wmo\" or \"wmoUnit\" are defined in the World Meteorological Organization Codes Registry at http://codes.wmo.int/common/unit and should be canonically resolvable to http://codes.wmo.int/common/unit/{unit}. Units with the namespace \"nwsUnit\" are currently custom and do not align to any standard. Units with no namespace or the namespace \"uc\" are compliant with the Unified Code for Units of Measure syntax defined at https://unitsofmeasure.org/. This also aligns with recent versions of the Geographic Markup Language (GML) standard, the IWXXM standard, and OGC Observations and Measurements v2.0 (ISO/DIS 19156). Namespaced units are considered deprecated. We will be aligning API to use the same standards as GML/IWXXM in the future.",
      "title": "Unit of Measure",
      "pattern": "^((wmo|uc|wmoUnit|nwsUnit):)?.*$",
      "type": "string"
    },
    "Zone": {
      "description": "An object representing a forecast zone.",
      "title": "Zone",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "geometry": {
          "$ref": "#/definitions/GeometryString"
        },
        "@id": {
          "description": "The identifier of the context.",
          "title": "Context ID",
          "type": "string"
        },
        "@type": {
          "description": "The context type.",
          "title": "Context Type",
          "enum": [
            "wx:Zone"
          ],
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/NWSZoneID"
        },
        "type": {
          "$ref": "#/definitions/NWSZoneType"
        },
        "name": {
          "description": "The name of the zone.",
          "title": "Name",
          "type": "string"
        },
        "effectiveDate": {
          "description": "The effective date of the zone.",
          "title": "Effective Date",
          "format": "date-time",
          "type": "string"
        },
        "expirationDate": {
          "description": "The expiration date of the zone.",
          "title": "Expiration Date",
          "format": "date-time",
          "type": "string"
        },
        "state": {
          "description": "The state.",
          "title": "State",
          "type": "object",
          "properties": {
            "id": {
              "$ref": "#/definitions/StateTerritoryCode"
            },
            "name": {
              "description": "The name of the state.",
              "title": "Name",
              "type": "string"
            },
            "description": {
              "description": "A description of the state.",
              "title": "Description",
              "type": "string"
            },
            "geometry": {
              "description": "The geometry of the state.",
              "title": "Geometry",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type.",
                  "title": "Type",
                  "type": "string"
                },
                "coordinates": {
                  "description": "The coordinates.",
                  "title": "Coordinates",
                  "type": "array",
                  "items": {
                    "type": "number",
                    "format": "float"
                  }
                }
              }
            }
          }
        },
        "forecastOffice": {
          "description": "The forecast office.",
          "title": "Forecast Office",
          "type": "string"
        },
        "gridIdentifier": {
          "description": "The grid identifier.",
          "title": "Grid Identifier",
          "type": "string"
        },
        "awipsLocationIdentifier": {
          "description": "The AWIPS location identifier.",
          "title": "AWIPS Location Identifier",
          "type": "string"
        },
        "cwa": {
          "description": "The county warning area.",
          "title": "CWA",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NWSForecastOfficeId"
          }
        },
        "forecastOffices": {
          "description": "The forecast offices.",
          "title": "Forecast Offices",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeZone": {
          "description": "The time zone.",
          "title": "Time Zone",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "observationStations": {
          "description": "The observation stations.",
          "title": "Observation Stations",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "radarStation": {
          "description": "The radar station.",
          "title": "Radar Station",
          "type": "string"
        }
      }
    },
    "ZoneGeoJson": {
      "description": "A GeoJSON object representing a forecast zone.",
      "title": "Zone (GeoJSON)",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "geometry": {
          "description": "The geometry.",
          "title": "Geometry",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "coordinates": {
              "description": "The coordinates.",
              "title": "Coordinates",
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            }
          }
        },
        "properties": {
          "$ref": "#/definitions/Zone"
        },
        "id": {
          "description": "The identifier of the zone.",
          "title": "ID",
          "type": "string"
        }
      }
    },
    "ZoneJsonLd": {
      "description": "An object representing a forecast zone.",
      "title": "Zone (JSON-LD)",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "geometry": {
          "$ref": "#/definitions/GeometryString"
        },
        "@id": {
          "description": "The identifier of the context.",
          "title": "Context ID",
          "type": "string"
        },
        "@type": {
          "description": "The context type.",
          "title": "Context Type",
          "enum": [
            "wx:Zone"
          ],
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/NWSZoneID"
        },
        "type": {
          "$ref": "#/definitions/NWSZoneType"
        },
        "name": {
          "description": "The name of the zone.",
          "title": "Name",
          "type": "string"
        },
        "effectiveDate": {
          "description": "The effective date of the zone.",
          "title": "Effective Date",
          "format": "date-time",
          "type": "string"
        },
        "expirationDate": {
          "description": "The expiration date of the zone.",
          "title": "Expiration Date",
          "format": "date-time",
          "type": "string"
        },
        "state": {
          "type": "object",
          "properties": {
            "id": {
              "$ref": "#/definitions/StateTerritoryCode"
            },
            "name": {
              "description": "The name of the state.",
              "title": "Name",
              "type": "string"
            },
            "description": {
              "description": "A description of the state.",
              "title": "Description",
              "type": "string"
            },
            "geometry": {
              "description": "The geometry of the state.",
              "title": "Geometry",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type.",
                  "title": "Type",
                  "type": "string"
                },
                "coordinates": {
                  "description": "The coordinates.",
                  "title": "Coordinates",
                  "type": "array",
                  "items": {
                    "type": "number",
                    "format": "float"
                  }
                }
              }
            }
          }
        },
        "forecastOffice": {
          "description": "The forecast office.",
          "title": "Forecast Office",
          "type": "string"
        },
        "gridIdentifier": {
          "description": "The grid identifier.",
          "title": "Grid Identifier",
          "type": "string"
        },
        "awipsLocationIdentifier": {
          "description": "The AWIPS location identifier.",
          "title": "AWIPS Location Identifier",
          "type": "string"
        },
        "cwa": {
          "description": "The county warning area.",
          "title": "County Warning Area",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NWSForecastOfficeId"
          }
        },
        "forecastOffices": {
          "description": "The forecast offices.",
          "title": "Forecast Offices",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeZone": {
          "description": "The time zone.",
          "title": "Time Zone",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "observationStations": {
          "description": "The observation stations.",
          "title": "Observation Stations",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "radarStation": {
          "description": "The radar station.",
          "title": "Radar Station",
          "type": "string"
        }
      }
    },
    "ZoneCollectionGeoJson": {
      "description": "A GeoJSON object representing a collection of forecast zones.",
      "title": "Zone Collection (GeoJSON)",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "features": {
          "description": "The features.",
          "title": "Features",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "description": "The type.",
                "title": "Type",
                "type": "string"
              },
              "geometry": {
                "description": "The geometry.",
                "title": "Geometry",
                "type": "object",
                "properties": {
                  "type": {
                    "description": "The type.",
                    "title": "Type",
                    "type": "string"
                  },
                  "coordinates": {
                    "description": "The coordinates.",
                    "title": "Coordinates",
                    "type": "array",
                    "items": {
                      "type": "number",
                      "format": "float"
                    }
                  }
                }
              },
              "properties": {
                "$ref": "#/definitions/Zone"
              }
            }
          }
        },
        "crs": {
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "name": {
              "description": "The name.",
              "title": "Name",
              "type": "string"
            }
          }
        },
        "bbox": {
          "description": "The bounding box.",
          "title": "Bounding Box",
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        }
      }
    },
    "ZoneCollectionJsonLd": {
      "description": "An object representing a collection of forecast zones.",
      "title": "Zone Collection (JSON-LD)",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "@graph": {
          "description": "The graph.",
          "title": "Graph",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Zone"
          }
        }
      }
    },
    "ZoneForecast": {
      "description": "An object representing a zone area forecast.",
      "title": "Zone Forecast",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "geometry": {
          "$ref": "#/definitions/GeometryString"
        },
        "zone": {
          "description": "An API link to the zone this forecast is for.",
          "title": "Zone",
          "type": "string"
        },
        "updated": {
          "format": "date-time",
          "description": "The time this zone forecast product was published.",
          "title": "Updated",
          "type": "string"
        },
        "periods": {
          "description": "An array of forecast periods.",
          "title": "Periods",
          "type": "array",
          "items": {
            "required": [
              "number",
              "detailedForecast"
            ],
            "type": "object",
            "properties": {
              "number": {
                "description": "A sequential identifier number.",
                "title": "Number",
                "type": "integer",
                "format": "int32"
              },
              "detailedForecast": {
                "description": "A detailed textual forecast for the period.",
                "title": "Detailed Forecast",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ZoneForecastGeoJson": {
      "description": "A GeoJSON object representing a zone area forecast.",
      "title": "Zone Forecast (GeoJSON)",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type.",
          "title": "Type",
          "type": "string"
        },
        "geometry": {
          "description": "The geometry.",
          "title": "Geometry",
          "type": "object",
          "properties": {
            "type": {
              "description": "The type.",
              "title": "Type",
              "type": "string"
            },
            "coordinates": {
              "description": "The coordinates.",
              "title": "Coordinates",
              "type": "array",
              "items": {
                "type": "number",
                "format": "float"
              }
            }
          }
        },
        "properties": {
          "$ref": "#/definitions/ZoneForecast"
        },
        "id": {
          "description": "The identifier of the zone forecast.",
          "title": "ID",
          "type": "string"
        }
      }
    },
    "ZoneForecastJsonLd": {
      "description": "An object representing a zone area forecast.",
      "title": "Zone Forecast (JSON-LD)",
      "type": "object",
      "properties": {
        "@context": {
          "$ref": "#/definitions/JsonLdContext"
        },
        "geometry": {
          "$ref": "#/definitions/GeometryString"
        },
        "zone": {
          "description": "An API link to the zone this forecast is for.",
          "title": "Zone",
          "type": "string"
        },
        "updated": {
          "format": "date-time",
          "description": "The time this zone forecast product was published.",
          "title": "Updated",
          "type": "string"
        },
        "periods": {
          "description": "An array of forecast periods.",
          "title": "Periods",
          "type": "array",
          "items": {
            "required": [
              "number",
              "detailedForecast"
            ],
            "type": "object",
            "properties": {
              "number": {
                "description": "A sequential identifier number.",
                "title": "Number",
                "type": "integer",
                "format": "int32"
              },
              "detailedForecast": {
                "description": "A detailed textual forecast for the period.",
                "title": "Detailed Forecast",
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "AlertArea": {
      "in": "query",
      "x-ms-summary": "Alert Area",
      "name": "area",
      "description": "State/territory code or marine area code. This parameter is incompatible with the following parameters: point, region, region_type, zone",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "AL",
          "AK",
          "AS",
          "AR",
          "AZ",
          "CA",
          "CO",
          "CT",
          "DE",
          "DC",
          "FL",
          "GA",
          "GU",
          "HI",
          "ID",
          "IL",
          "IN",
          "IA",
          "KS",
          "KY",
          "LA",
          "ME",
          "MD",
          "MA",
          "MI",
          "MN",
          "MS",
          "MO",
          "MT",
          "NE",
          "NV",
          "NH",
          "NJ",
          "NM",
          "NY",
          "NC",
          "ND",
          "OH",
          "OK",
          "OR",
          "PA",
          "PR",
          "RI",
          "SC",
          "SD",
          "TN",
          "TX",
          "UT",
          "VT",
          "VI",
          "VA",
          "WA",
          "WV",
          "WI",
          "WY",
          "MP",
          "PW",
          "FM",
          "MH"
        ]
      }
    },
    "AlertCertainty": {
      "in": "query",
      "x-ms-summary": "Alert Certainty",
      "name": "certainty",
      "description": "Certainty (observed, likely, possible, unlikely, unknown).",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "Observed",
          "Likely",
          "Possible",
          "Unlikely",
          "Unknown"
        ]
      }
    },
    "AlertCode": {
      "in": "query",
      "x-ms-summary": "Alert Code",
      "name": "code",
      "description": "Event code.",
      "type": "array",
      "items": {
        "pattern": "^\\w{3}$",
        "type": "string"
      }
    },
    "AlertEventName": {
      "in": "query",
      "x-ms-summary": "Alert Event Name",
      "name": "event",
      "description": "Event name.",
      "type": "array",
      "items": {
        "pattern": "^[A-Za-z0-9 ]+$",
        "type": "string"
      }
    },
    "AlertMessageType": {
      "in": "query",
      "x-ms-summary": "Alert Message Type",
      "name": "message_type",
      "description": "Message type (alert, update, cancel).",
      "type": "array",
      "items": {
        "enum": [
          "alert",
          "update",
          "cancel"
        ],
        "type": "string"
      }
    },
    "AlertPoint": {
      "in": "query",
      "x-ms-summary": "Alert Point",
      "name": "point",
      "description": "Point (latitude,longitude). This parameter is incompatible with the following parameters: area, region, region_type, zone",
      "type": "string",
      "pattern": "^(-?\\d+(?:\\.\\d+)?),(-?\\d+(?:\\.\\d+)?)$"
    },
    "AlertRegion": {
      "in": "query",
      "x-ms-summary": "Alert Region",
      "name": "region",
      "description": "Marine region code. This parameter is incompatible with the following parameters: area, point, region_type, zone.",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "AL",
          "AT",
          "GL",
          "GM",
          "PA",
          "PI"
        ]
      }
    },
    "AlertRegionType": {
      "in": "query",
      "x-ms-summary": "Alert Region Type",
      "name": "region_type",
      "description": "Region type (land or marine). This parameter is incompatible with the following parameters: area, point, region, zone",
      "type": "string",
      "enum": [
        "land",
        "marine"
      ]
    },
    "AlertSeverity": {
      "in": "query",
      "x-ms-summary": "Alert Severity",
      "name": "severity",
      "description": "Severity (extreme, severe, moderate, minor, unknown).",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "Extreme",
          "Severe",
          "Moderate",
          "Minor",
          "Unknown"
        ]
      }
    },
    "AlertStatus": {
      "in": "query",
      "x-ms-summary": "Alert Status",
      "name": "status",
      "description": "Status (actual, exercise, system, test, draft).",
      "type": "array",
      "items": {
        "enum": [
          "actual",
          "exercise",
          "system",
          "test",
          "draft"
        ],
        "type": "string"
      }
    },
    "AlertUrgency": {
      "in": "query",
      "x-ms-summary": "Alert Urgency",
      "name": "urgency",
      "description": "Urgency (immediate, expected, future, past, unknown).",
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "Immediate",
          "Expected",
          "Future",
          "Past",
          "Unknown"
        ]
      }
    },
    "AlertZone": {
      "in": "query",
      "x-ms-summary": "Alert Zone",
      "name": "zone",
      "description": "Zone ID (forecast or county). This parameter is incompatible with the following parameters: area, point, region, region_type",
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^(A[KLMNRSZ]|C[AOT]|D[CE]|F[LM]|G[AMU]|I[ADLN]|K[SY]|L[ACEHMOS]|M[ADEHINOPST]|N[CDEHJMVY]|O[HKR]|P[AHKMRSWZ]|S[CDL]|T[NX]|UT|V[AIT]|W[AIVY]|[HR]I)[CZ]\\d{3}$"
      }
    },
    "ATSUIdentifier": {
      "in": "path",
      "x-ms-summary": "ATSU ID",
      "x-ms-url-encoding": "single",
      "name": "atsu",
      "description": "ATSU identifier.",
      "required": true,
      "type": "string",
      "pattern": "^[A-Z]{3,4}$"
    },
    "Date": {
      "in": "path",
      "x-ms-summary": "Date",
      "x-ms-url-encoding": "single",
      "name": "date",
      "description": "Date (YYYY-MM-DD format).",
      "required": true,
      "type": "string",
      "format": "date"
    },
    "GridpointForecastFeatureFlags": {
      "in": "header",
      "x-ms-summary": "Gridpoint Forecast Feature Flags",
      "name": "Feature-Flags",
      "description": "Enable future and experimental features (see documentation for more info):* forecast_temperature_qv: Represent temperature as QuantitativeValue* forecast_wind_speed_qv: Represent wind speed as QuantitativeValue.",
      "type": "array",
      "items": {
        "enum": [
          "forecast_temperature_qv",
          "forecast_wind_speed_qv"
        ],
        "type": "string"
      }
    },
    "GridpointForecastUnits": {
      "in": "query",
      "x-ms-summary": "Gridpoint Forecast Units",
      "name": "units",
      "description": "Use US customary or SI (metric) units in textual output.",
      "type": "string",
      "default": "us",
      "enum": [
        "us",
        "si"
      ]
    },
    "GridpointWFO": {
      "in": "path",
      "x-ms-summary": "Gridpoint WFO",
      "x-ms-url-encoding": "single",
      "name": "wfo",
      "description": "Forecast office identifier.",
      "required": true,
      "type": "string",
      "enum": [
        "AKQ",
        "ALY",
        "BGM",
        "BOX",
        "BTV",
        "BUF",
        "CAE",
        "CAR",
        "CHS",
        "CLE",
        "CTP",
        "GSP",
        "GYX",
        "ILM",
        "ILN",
        "LWX",
        "MHX",
        "OKX",
        "PBZ",
        "PHI",
        "RAH",
        "RLX",
        "RNK",
        "ABQ",
        "AMA",
        "BMX",
        "BRO",
        "CRP",
        "EPZ",
        "EWX",
        "FFC",
        "FWD",
        "HGX",
        "HUN",
        "JAN",
        "JAX",
        "KEY",
        "LCH",
        "LIX",
        "LUB",
        "LZK",
        "MAF",
        "MEG",
        "MFL",
        "MLB",
        "MOB",
        "MRX",
        "OHX",
        "OUN",
        "SHV",
        "SJT",
        "SJU",
        "TAE",
        "TBW",
        "TSA",
        "ABR",
        "APX",
        "ARX",
        "BIS",
        "BOU",
        "CYS",
        "DDC",
        "DLH",
        "DMX",
        "DTX",
        "DVN",
        "EAX",
        "FGF",
        "FSD",
        "GID",
        "GJT",
        "GLD",
        "GRB",
        "GRR",
        "ICT",
        "ILX",
        "IND",
        "IWX",
        "JKL",
        "LBF",
        "LMK",
        "LOT",
        "LSX",
        "MKX",
        "MPX",
        "MQT",
        "OAX",
        "PAH",
        "PUB",
        "RIW",
        "SGF",
        "TOP",
        "UNR",
        "BOI",
        "BYZ",
        "EKA",
        "FGZ",
        "GGW",
        "HNX",
        "LKN",
        "LOX",
        "MFR",
        "MSO",
        "MTR",
        "OTX",
        "PDT",
        "PIH",
        "PQR",
        "PSR",
        "REV",
        "SEW",
        "SGX",
        "SLC",
        "STO",
        "TFX",
        "TWC",
        "VEF",
        "AER",
        "AFC",
        "AFG",
        "AJK",
        "ALU",
        "GUM",
        "HPA",
        "HFO",
        "PPG",
        "STU",
        "NH1",
        "NH2",
        "ONA",
        "ONP"
      ]
    },
    "GridpointX": {
      "in": "path",
      "x-ms-summary": "Gridpoint X",
      "x-ms-url-encoding": "single",
      "name": "x",
      "description": "Forecast grid X coordinate.",
      "required": true,
      "type": "integer",
      "minimum": 0
    },
    "GridpointY": {
      "in": "path",
      "x-ms-summary": "Gridpoint Y",
      "x-ms-url-encoding": "single",
      "name": "y",
      "description": "Forecast grid Y coordinate.",
      "required": true,
      "type": "integer",
      "minimum": 0
    },
    "Limit": {
      "in": "query",
      "x-ms-summary": "Limit",
      "name": "limit",
      "description": "Limit.",
      "type": "integer",
      "default": 500,
      "maximum": 500,
      "minimum": 1
    },
    "NWSCenterWeatherServiceUnitId": {
      "in": "path",
      "x-ms-summary": "NWS Center Weather Service Unit ID",
      "x-ms-url-encoding": "single",
      "name": "cwsuId",
      "description": "NWS CWSU identifier.",
      "required": true,
      "type": "string",
      "enum": [
        "ZAB",
        "ZAN",
        "ZAU",
        "ZBW",
        "ZDC",
        "ZDV",
        "ZFA",
        "ZFW",
        "ZHU",
        "ZID",
        "ZJX",
        "ZKC",
        "ZLA",
        "ZLC",
        "ZMA",
        "ZME",
        "ZMP",
        "ZNY",
        "ZOA",
        "ZOB",
        "ZSE",
        "ZTL"
      ]
    },
    "NWSOfficeId": {
      "in": "path",
      "x-ms-summary": "NWS Office ID",
      "x-ms-url-encoding": "single",
      "name": "officeId",
      "description": "NWS office identifier.",
      "type": "string",
      "required": true
    },
    "NWSZoneId": {
      "in": "path",
      "x-ms-summary": "NWS Zone ID",
      "x-ms-url-encoding": "single",
      "name": "zoneId",
      "description": "NWS public zone/county identifier.",
      "required": true,
      "type": "string",
      "pattern": "^(A[KLMNRSZ]|C[AOT]|D[CE]|F[LM]|G[AMU]|I[ADLN]|K[SY]|L[ACEHMOS]|M[ADEHINOPST]|N[CDEHJMVY]|O[HKR]|P[AHKMRSWZ]|S[CDL]|T[NX]|UT|V[AIT]|W[AIVY]|[HR]I)[CZ]\\d{3}$"
    },
    "ObservationStationId": {
      "in": "path",
      "x-ms-summary": "Observation Station ID",
      "x-ms-url-encoding": "single",
      "name": "stationId",
      "description": "Observation station identifier.",
      "required": true,
      "type": "string"
    },
    "PaginationCursor": {
      "in": "query",
      "x-ms-summary": "Pagination Cursor",
      "name": "cursor",
      "description": "Pagination cursor.",
      "type": "string"
    },
    "PathPoint": {
      "in": "path",
      "x-ms-summary": "Path Point",
      "x-ms-url-encoding": "single",
      "name": "point",
      "description": "Point (latitude, longitude).",
      "required": true,
      "type": "string",
      "pattern": "^(-?\\d+(?:\\.\\d+)?),(-?\\d+(?:\\.\\d+)?)$"
    },
    "QueryDate": {
      "in": "query",
      "x-ms-summary": "Query Date",
      "name": "date",
      "description": "Date (YYYY-MM-DD format).",
      "type": "string",
      "format": "date"
    },
    "QueryStartTime": {
      "in": "query",
      "x-ms-summary": "Query Start Time",
      "name": "start",
      "description": "Start time.",
      "type": "string",
      "format": "date-time"
    },
    "QueryEndTime": {
      "in": "query",
      "x-ms-summary": "Query End Time",
      "name": "end",
      "description": "End time.",
      "type": "string",
      "format": "date-time"
    },
    "SigmetSequenceNumber": {
      "in": "path",
      "x-ms-summary": "SIGMET Sequence Number",
      "x-ms-url-encoding": "single",
      "name": "sequence",
      "description": "SIGMET sequence number.",
      "required": true,
      "type": "string"
    },
    "Time": {
      "in": "path",
      "x-ms-summary": "Time",
      "x-ms-url-encoding": "single",
      "name": "time",
      "description": "Time (HHMM format). This time is always specified in UTC (Zulu) time.",
      "required": true,
      "type": "string",
      "pattern": "^([01][0-9]|2[0-3])[0-5][0-9]$"
    }
  },
  "responses": {
    "AlertCollection": {
      "description": "A collection of alerts.",
      "schema": {
        "$ref": "#/definitions/AlertCollectionGeoJson"
      }
    },
    "Error": {
      "description": "An error response.",
      "schema": {
        "$ref": "#/definitions/ProblemDetail"
      }
    },
    "GridpointForecast": {
      "description": "A forecast for a gridpoint.",
      "schema": {
        "$ref": "#/definitions/GridpointForecastGeoJson"
      }
    },
    "Observation": {
      "description": "An observation record.",
      "schema": {
        "$ref": "#/definitions/ObservationGeoJson"
      }
    },
    "ObservationCollection": {
      "description": "A collection of observation records.",
      "schema": {
        "$ref": "#/definitions/ObservationCollectionGeoJson"
      }
    },
    "ObservationStationCollection": {
      "description": "A collection of observation stations.",
      "schema": {
        "$ref": "#/definitions/ObservationStationCollectionGeoJson"
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "User-Agent"
    }
  },
  "security": [],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.weather.gov/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.weather.gov/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Data"
    }
  ]
}