{
  "swagger": "2.0",
  "info": {
    "title": "OpenRouter",
    "description": "A high-performance unified interface for LLMs, integrating a vast number of models from various providers.",
    "version": "1.0",
    "contact": {
      "name": "Fördős András",
      "email": "fordosa90+ipc_openr@gmail.com"
    }
  },
  "host": "openrouter.ai",
  "basePath": "/api/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [],
  "paths": {
    "/v1/credits": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "total_credits": {
                      "type": "number",
                      "format": "double",
                      "description": "Total credits purchased",
                      "title": "Total credits"
                    },
                    "total_usage": {
                      "type": "number",
                      "format": "double",
                      "description": "Total credits used",
                      "title": "Total usage"
                    }
                  },
                  "description": "Response data.",
                  "title": "Data"
                }
              }
            }
          }
        },
        "summary": "Get credits",
        "operationId": "GetCredits",
        "description": "Returns the total credits purchased and used for the authenticated user.",
        "parameters": []
      }
    },
    "/v1/models/{author}/{slug}/endpoints": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "id"
                    },
                    "name": {
                      "type": "string",
                      "description": "name"
                    },
                    "created": {
                      "type": "number",
                      "format": "float",
                      "description": "created"
                    },
                    "description": {
                      "type": "string",
                      "description": "description"
                    },
                    "architecture": {
                      "type": "object",
                      "properties": {
                        "tokenizer": {
                          "type": "string",
                          "description": "tokenizer"
                        },
                        "instruct_type": {
                          "type": "string",
                          "description": "instruct_type"
                        },
                        "modality": {
                          "type": "string",
                          "description": "modality"
                        }
                      },
                      "description": "architecture"
                    },
                    "endpoints": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name.",
                            "title": "Name"
                          },
                          "context_length": {
                            "type": "number",
                            "format": "float",
                            "description": "Context length.",
                            "title": "Context length"
                          },
                          "pricing": {
                            "type": "object",
                            "properties": {
                              "request": {
                                "type": "string",
                                "description": "Pricing details of request.",
                                "title": "Request"
                              },
                              "image": {
                                "type": "string",
                                "description": "Pricing details of image.",
                                "title": "Image"
                              },
                              "prompt": {
                                "type": "string",
                                "description": "Pricing details of prompt.",
                                "title": "Prompt"
                              },
                              "completion": {
                                "type": "string",
                                "description": "Pricing details of completion.",
                                "title": "Completion"
                              }
                            },
                            "description": "Pricing information.",
                            "title": "Pricing"
                          },
                          "provider_name": {
                            "type": "string",
                            "description": "The name of the model and endpoint provider.",
                            "title": "Provider name"
                          },
                          "supported_parameters": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Details of supported parameters.",
                            "title": "Supported parameters"
                          }
                        }
                      },
                      "description": "Details of available endpoints.",
                      "title": "Endpoints"
                    }
                  },
                  "description": "Returned data package.",
                  "title": "Data"
                }
              }
            }
          }
        },
        "summary": "List model endpoints",
        "operationId": "ListModelEndpoints",
        "description": "List of endpoints for the model.",
        "parameters": [
          {
            "name": "author",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Author",
            "description": "Author of the model, first part of the model ID.",
            "x-ms-url-encoding": "single"
          },
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-summary": "Slug",
            "description": "Slug of the model, second part of the model ID.",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/v1/models": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique ID of the model.",
                        "title": "ID"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the model.",
                        "title": "Name"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the model.",
                        "title": "Description"
                      },
                      "pricing": {
                        "type": "object",
                        "properties": {
                          "prompt": {
                            "type": "string",
                            "description": "Pricing information regarding prompt.",
                            "title": "Prompt"
                          },
                          "completion": {
                            "type": "string",
                            "description": "Pricing information regarding completion.",
                            "title": "Completion"
                          }
                        },
                        "description": "Details of pricing.",
                        "title": "Pricing"
                      }
                    }
                  },
                  "description": "Returned data package.",
                  "title": "Data"
                }
              }
            }
          }
        },
        "summary": "List models",
        "operationId": "ListModels",
        "description": "Returns a list of models available through the API.",
        "parameters": []
      }
    },
    "/v1/generation": {
      "get": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "id"
                    },
                    "total_cost": {
                      "type": "number",
                      "format": "float",
                      "description": "total_cost"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "created_at"
                    },
                    "model": {
                      "type": "string",
                      "description": "model"
                    },
                    "origin": {
                      "type": "string",
                      "description": "origin"
                    },
                    "usage": {
                      "type": "number",
                      "format": "float",
                      "description": "usage"
                    },
                    "is_byok": {
                      "type": "boolean",
                      "description": "is_byok"
                    },
                    "upstream_id": {
                      "type": "string",
                      "description": "upstream_id"
                    },
                    "cache_discount": {
                      "type": "number",
                      "format": "float",
                      "description": "cache_discount"
                    },
                    "app_id": {
                      "type": "integer",
                      "format": "int32",
                      "description": "app_id"
                    },
                    "streamed": {
                      "type": "boolean",
                      "description": "streamed"
                    },
                    "cancelled": {
                      "type": "boolean",
                      "description": "cancelled"
                    },
                    "provider_name": {
                      "type": "string",
                      "description": "provider_name"
                    },
                    "latency": {
                      "type": "integer",
                      "format": "int32",
                      "description": "latency"
                    },
                    "moderation_latency": {
                      "type": "integer",
                      "format": "int32",
                      "description": "moderation_latency"
                    },
                    "generation_time": {
                      "type": "integer",
                      "format": "int32",
                      "description": "generation_time"
                    },
                    "finish_reason": {
                      "type": "string",
                      "description": "finish_reason"
                    },
                    "native_finish_reason": {
                      "type": "string",
                      "description": "native_finish_reason"
                    },
                    "tokens_prompt": {
                      "type": "integer",
                      "format": "int32",
                      "description": "tokens_prompt"
                    },
                    "tokens_completion": {
                      "type": "integer",
                      "format": "int32",
                      "description": "tokens_completion"
                    },
                    "native_tokens_prompt": {
                      "type": "integer",
                      "format": "int32",
                      "description": "native_tokens_prompt"
                    },
                    "native_tokens_completion": {
                      "type": "integer",
                      "format": "int32",
                      "description": "native_tokens_completion"
                    },
                    "native_tokens_reasoning": {
                      "type": "integer",
                      "format": "int32",
                      "description": "native_tokens_reasoning"
                    },
                    "num_media_prompt": {
                      "type": "integer",
                      "format": "int32",
                      "description": "num_media_prompt"
                    },
                    "num_media_completion": {
                      "type": "integer",
                      "format": "int32",
                      "description": "num_media_completion"
                    },
                    "num_search_results": {
                      "type": "integer",
                      "format": "int32",
                      "description": "num_search_results"
                    }
                  },
                  "description": "Returned data.",
                  "title": "Data"
                }
              }
            }
          }
        },
        "summary": "Get generation",
        "operationId": "GetGeneration",
        "description": "Returns metadata about a specific generation request.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-summary": "ID",
            "description": "Unique identifier of the generation.",
            "x-ms-url-encoding": "single"
          }
        ]
      }
    },
    "/v1/chat/completions": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier.",
                  "title": "ID"
                },
                "choices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "object",
                        "properties": {
                          "role": {
                            "type": "string",
                            "description": "Role of the speaker for the generated content.",
                            "title": "Role"
                          },
                          "content": {
                            "type": "string",
                            "description": "Resulting content of generated message.",
                            "title": "Content"
                          }
                        },
                        "description": "Details of generated message.",
                        "title": "Message"
                      }
                    }
                  },
                  "description": "Details of choices.",
                  "title": "Choices"
                }
              }
            }
          }
        },
        "summary": "Chat completion",
        "description": "Send a chat completion request to a selected model.",
        "operationId": "ChatCompletion",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "string",
                  "description": "Model ID to be used.",
                  "title": "Model"
                },
                "messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string",
                        "description": "Associated role the input text.",
                        "title": "Role",
                        "enum": [
                          "system",
                          "user",
                          "assistant"
                        ]
                      },
                      "content": {
                        "type": "string",
                        "description": "Content used for chat completion.",
                        "title": "Content"
                      }
                    },
                    "required": [
                      "role",
                      "content"
                    ]
                  },
                  "description": "messages"
                }
              },
              "required": [
                "messages",
                "model"
              ]
            }
          }
        ]
      }
    },
    "/v1/completions": {
      "post": {
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Unique identifier.",
                  "title": "ID"
                },
                "choices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string",
                        "description": "Generated text.",
                        "title": "Text"
                      },
                      "index": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Index.",
                        "title": "Index"
                      },
                      "finish_reason": {
                        "type": "string",
                        "description": "Finish reason.",
                        "title": "Finish reason"
                      }
                    }
                  },
                  "description": "Details of generated choices.",
                  "title": "Choices"
                }
              }
            }
          }
        },
        "summary": "Completion",
        "operationId": "Completion",
        "description": "Send a completion request to a selected model (text-only format).",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "model": {
                  "type": "string",
                  "description": "Model ID to be used for completion.",
                  "title": "Model"
                },
                "prompt": {
                  "type": "string",
                  "description": "The text prompt to complete.",
                  "title": "Prompt"
                }
              },
              "required": [
                "model",
                "prompt"
              ]
            }
          }
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "api_key"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://openrouter.ai/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://openrouter.ai/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI"
    }
  ]
}